{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/overflow-auto.png","path":"images/overflow-auto.png","modified":0,"renderable":0},{"_id":"source/images/example.png","path":"images/example.png","modified":0,"renderable":0},{"_id":"source/images/box-sizing/box-sizing.png","path":"images/box-sizing/box-sizing.png","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/bluethme.PNG","path":"images/chrome-extension-suggest/bluethme.PNG","modified":0,"renderable":0},{"_id":"source/images/chrome-theme/example.png","path":"images/chrome-theme/example.png","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/omega0.PNG","path":"images/chrome-extension-suggest/omega0.PNG","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/clipboardsetting.png","path":"images/chrome-extension-suggest/clipboardsetting.png","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/omega3.PNG","path":"images/chrome-extension-suggest/omega3.PNG","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/simpleextmanager.png","path":"images/chrome-extension-suggest/simpleextmanager.png","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/tongwen3.PNG","path":"images/chrome-extension-suggest/tongwen3.PNG","modified":0,"renderable":0},{"_id":"source/images/force-delete-file/lockhunter2.png","path":"images/force-delete-file/lockhunter2.png","modified":0,"renderable":0},{"_id":"source/images/force-delete-file/lockhunter4.png","path":"images/force-delete-file/lockhunter4.png","modified":0,"renderable":0},{"_id":"source/images/http-cookie/a.png","path":"images/http-cookie/a.png","modified":0,"renderable":0},{"_id":"source/images/http-cookie/d.png","path":"images/http-cookie/d.png","modified":0,"renderable":0},{"_id":"source/images/offcloud/offcloud1.png","path":"images/offcloud/offcloud1.png","modified":0,"renderable":0},{"_id":"source/images/offcloud/offcloud2.png","path":"images/offcloud/offcloud2.png","modified":0,"renderable":0},{"_id":"source/images/sms-blocker/sms-blocker01.png","path":"images/sms-blocker/sms-blocker01.png","modified":0,"renderable":0},{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/images/chrome-extension-suggest/omega1.PNG","path":"images/chrome-extension-suggest/omega1.PNG","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/clipboard.png","path":"images/chrome-extension-suggest/clipboard.png","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/omega2.PNG","path":"images/chrome-extension-suggest/omega2.PNG","modified":0,"renderable":0},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"source/images/force-delete-file/lockhunter1.png","path":"images/force-delete-file/lockhunter1.png","modified":0,"renderable":0},{"_id":"source/images/http-cookie/b.png","path":"images/http-cookie/b.png","modified":0,"renderable":0},{"_id":"source/images/http-cookie/c.png","path":"images/http-cookie/c.png","modified":0,"renderable":0},{"_id":"source/images/sms-blocker/sms-blocker03.png","path":"images/sms-blocker/sms-blocker03.png","modified":0,"renderable":0},{"_id":"source/images/sms-blocker/sms-blocker02.png","path":"images/sms-blocker/sms-blocker02.png","modified":0,"renderable":0},{"_id":"source/images/force-delete-file/lockhunter3.png","path":"images/force-delete-file/lockhunter3.png","modified":0,"renderable":0},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/images/chrome-extension-suggest/tongwen1.PNG","path":"images/chrome-extension-suggest/tongwen1.PNG","modified":0,"renderable":0},{"_id":"source/images/chrome-extension-suggest/tongwen0.PNG","path":"images/chrome-extension-suggest/tongwen0.PNG","modified":0,"renderable":0},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1492393395076},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1492393395079},{"_id":"themes/hexo-theme-next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1492393395081},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1492393395135},{"_id":"themes/hexo-theme-next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1492393395130},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1492393395138},{"_id":"themes/hexo-theme-next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1492393395166},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1492393395150},{"_id":"themes/hexo-theme-next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1492393395180},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1492393395154},{"_id":"themes/hexo-theme-next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1492393395185},{"_id":"themes/hexo-theme-next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1492393395197},{"_id":"themes/hexo-theme-next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1492393395232},{"_id":"themes/hexo-theme-next/_config.yml","hash":"89d5dbe72b3b8da5dd85aa5d74ae9eaeec837b7f","modified":1492408421611},{"_id":"themes/hexo-theme-next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1492393396033},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1492393395237},{"_id":"source/_posts/CSS设置块内元素垂直排列布局.md","hash":"8cfc92f180de8792fac488df22fa337f50de595a","modified":1504150787967},{"_id":"source/_posts/Android短信拦截软件推荐.md","hash":"13bfc0c4316c49d9ca0ecdf1a53ac17ff4fd8c1c","modified":1497583241169},{"_id":"source/_posts/Cache-Control与Nginx配置.md","hash":"5ec458cb6f4598814971349d5846fc06cfac5f71","modified":1501146818871},{"_id":"source/_posts/HTTP安全相关响应首部.md","hash":"0399a356d3202a20806190b202ec220719230dfa","modified":1498726992909},{"_id":"source/_posts/JavaScript中Array的some等方法对比学习记录.md","hash":"32e498952060ba6e6543599eae91232191dd946a","modified":1492682928072},{"_id":"source/_posts/HTTP首部之X-Frame-Options.md","hash":"8a4289900d4f60906357ac6c9bd4867f48d6fc57","modified":1498704037149},{"_id":"source/_posts/JS的bind函数.md","hash":"68a3295e24bbf00b9e83a1f47067be8c0fe609f9","modified":1492398571089},{"_id":"source/_posts/chrome扩展推荐.md","hash":"b48236032668130b7e5f2c04a7d26c1468949884","modified":1497506574355},{"_id":"source/_posts/MIUI解除ROOT授权25秒等待的方法.md","hash":"c1d2a4763c0b4a2274e958e1d8a3feb85ed770f5","modified":1510729377835},{"_id":"source/_posts/css3-box-sizing.md","hash":"56f702dca56b4c3c2099059319a4a4b0647e2bd3","modified":1494824768790},{"_id":"source/_posts/chrome经典蓝色主题.md","hash":"98a8ceda3a15ea7efd9b898eb47dbcbf0f4dd349","modified":1492765169223},{"_id":"source/_posts/crontab脚本与环境变量.md","hash":"3945550bbe310b7fb7c749e59aec7498eb08f382","modified":1502076726642},{"_id":"source/_posts/windows下强力删除文件工具推荐.md","hash":"c6b51abc3b0950bd9fde45ff5f238396c6979acc","modified":1509443099543},{"_id":"source/_posts/phantomjs抓取动态加载的网页数据.md","hash":"b2da4a1059cfb390c33203fe497a04890fa8a725","modified":1496287530339},{"_id":"source/_posts/overflow解决父元素因为子元素漂浮没高度的问题.md","hash":"f9e411d225adb7fc388a0a52287b9004f6e18b59","modified":1497339311920},{"_id":"source/_posts/几个windows-linux应用推荐网址.md","hash":"c874e18b992019fcaffcb7c79bdd2f8e6f92b287","modified":1492569675449},{"_id":"source/_posts/国外离线下载网站seedr.md","hash":"d1e4fbfaf07e0ec43822c08a3b64d9a0a08c1c03","modified":1510728814405},{"_id":"source/_posts/如何让博客支持HTTPS协议.md","hash":"0cb2aaf43445e00a71f6a149c275ad56beb950a1","modified":1509440985484},{"_id":"source/_posts/关于订阅内容的反思.md","hash":"d1bb2a593f7507fe7135cbdbd9a6b7f03cfc29ef","modified":1495077005839},{"_id":"source/_posts/cookie是如何工作的.md","hash":"0d0c9e301cf8888d4caa514482c181c1d978284e","modified":1492740306193},{"_id":"source/_posts/安卓用户之痛.md","hash":"792a45588ccd760f059b32cb5edbfe643b1679d4","modified":1496287737364},{"_id":"source/_posts/如何解读谯周.md","hash":"d71c0aabd88964b794ef3da28f2b64d074480880","modified":1545642412739},{"_id":"source/_posts/我的RSS订阅源.md","hash":"b84413184d4e05b029a2e2783c3f636f6493d924","modified":1530867284442},{"_id":"source/_posts/生活中要掌握好的度.md","hash":"7f6c8679559d639ee5941b84db55fb2d5589a07b","modified":1536202896195},{"_id":"source/_posts/豆瓣电子书下载扩展.md","hash":"109cccc0570669ef598d21a39f237f4d9552b36b","modified":1493111594131},{"_id":"source/_posts/离线下载工具offcloud介绍.md","hash":"b8bf56f79d7c6436fdaefcd57cd08a79f2351958","modified":1511159507836},{"_id":"source/_posts/旋风要倒下了，怀念下以前的下载生活.md","hash":"bf19e130e38281e0e4e89ede85b06dccb1472854","modified":1501834957762},{"_id":"source/images/overflow-auto.png","hash":"5775c4956d048f14b951b328ccea2e024890033f","modified":1497337179519},{"_id":"source/tags/index.md","hash":"b0a6d30f8f9e18bb74fffecdf398b0924ef4db48","modified":1492405385256},{"_id":"themes/hexo-theme-next/.git/config","hash":"4f94cb26d3406bb52f35806c75544b9aa1faab62","modified":1492393394982},{"_id":"themes/hexo-theme-next/.git/index","hash":"9675760f8d6f351193e293d204b897657fbed730","modified":1492396631156},{"_id":"themes/hexo-theme-next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1492393152832},{"_id":"themes/hexo-theme-next/.git/packed-refs","hash":"3ec038d0eca4e6b05fdd27842ca8a09de1b61d2d","modified":1492393394939},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1492393395083},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE.md","hash":"4de856de657a27f340f245eb491a1f52ceba1735","modified":1492393395086},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"efa71671290bb4b497d83720282b36482b6b0efb","modified":1492393395283},{"_id":"themes/hexo-theme-next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1492393394948},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1492393395975},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"6b17681e5c0022ff0ca46502472ad033807b3b34","modified":1492409939577},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1492393396012},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1492393396002},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1492393396028},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1492393395240},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1492393395243},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1492393395246},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1492393395250},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1492393395253},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1492393395260},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1492393395262},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1492393395266},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1492393395257},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1492393395272},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1492393395269},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1492393395278},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1492393395275},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1492393396038},{"_id":"themes/hexo-theme-next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1492393396052},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1492393397803},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1492393397795},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1492393397812},{"_id":"source/images/example.png","hash":"2b02ff73426d040e107f8f37ef27f4deb1bfdedf","modified":1492396808408},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1492410057359},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492393396775},{"_id":"source/images/box-sizing/box-sizing.png","hash":"53412486fee7fc079f0e42ae60935651ba6e2ed2","modified":1494819803483},{"_id":"source/images/chrome-extension-suggest/bluethme.PNG","hash":"182c8a09b5148f13142b68d722ceacd5ebb0203f","modified":1494474465664},{"_id":"source/images/chrome-theme/example.png","hash":"a6ef804d57e24911934fb993b73627d65de2f614","modified":1492764312159},{"_id":"source/images/chrome-extension-suggest/omega0.PNG","hash":"c73a599ec7643dc02f82b88e0e0e199096dccdf2","modified":1494474191498},{"_id":"source/images/chrome-extension-suggest/clipboardsetting.png","hash":"089c2e69195af2cb8e7e00173f3dd2b9fe5970ef","modified":1495763133428},{"_id":"source/images/chrome-extension-suggest/omega3.PNG","hash":"5352d8c362755e335cb42d5f00827c9a95c3b681","modified":1494474249613},{"_id":"source/images/chrome-extension-suggest/simpleextmanager.png","hash":"70bba13fa6e74437ec1816f6e27d3dc8930cc261","modified":1495762135796},{"_id":"source/images/chrome-extension-suggest/tongwen3.PNG","hash":"d21a0af8b6d60d79ca7a0ada9df5e4741b1b2857","modified":1494473785882},{"_id":"source/images/force-delete-file/lockhunter2.png","hash":"ab1264a00bb596f9d2a1a8c175200c04723616b1","modified":1509441941001},{"_id":"source/images/force-delete-file/lockhunter4.png","hash":"b912689574532ca5c614891bf4cd4193281a067f","modified":1509442680621},{"_id":"source/images/http-cookie/a.png","hash":"26ee85168b3e9fd8f1227e43c953d86e0b23248b","modified":1492739599745},{"_id":"source/images/http-cookie/d.png","hash":"e332935b295244c12247b14f5429a41bd6acc315","modified":1492739636219},{"_id":"source/images/offcloud/offcloud1.png","hash":"73d06a630707eddf3afc6630769c7715e7a081ce","modified":1510727454028},{"_id":"source/images/offcloud/offcloud2.png","hash":"b285cbbf36f9d3e45cbe795fe51dbd19d309ae8d","modified":1510728076500},{"_id":"source/images/sms-blocker/sms-blocker01.png","hash":"fe51132c58bfb0495175951d8089f3052274ef10","modified":1497582696408},{"_id":"themes/hexo-theme-next/layout/schedule.swig","hash":"459cd6d9887b7a2ebda9ba3a5585a718904adb02","modified":1492393396023},{"_id":"themes/hexo-theme-next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1492393152844},{"_id":"themes/hexo-theme-next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1492393152874},{"_id":"themes/hexo-theme-next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1492393152858},{"_id":"themes/hexo-theme-next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1492393152884},{"_id":"themes/hexo-theme-next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1492393152865},{"_id":"themes/hexo-theme-next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1492393152901},{"_id":"themes/hexo-theme-next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1492393152862},{"_id":"themes/hexo-theme-next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1492393152904},{"_id":"themes/hexo-theme-next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1492393152927},{"_id":"themes/hexo-theme-next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1492393152932},{"_id":"themes/hexo-theme-next/.git/logs/HEAD","hash":"89ad9cd52d72d225bc765d5ad6d0e6eff6bd4228","modified":1492393394953},{"_id":"themes/hexo-theme-next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1492393152917},{"_id":"themes/hexo-theme-next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1492393395279},{"_id":"themes/hexo-theme-next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1492393395279},{"_id":"themes/hexo-theme-next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1492393395289},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1492393395286},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"79851872b6b4fbd24e4a5a946f263da85b0c265d","modified":1492393395295},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1492393395301},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1492393395344},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"e7f58154ac734088372888742e0029ce7c690511","modified":1492393395338},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1492393395341},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"c369670226f3c285eff87da1b1b59efd0d7cb64d","modified":1492739285557},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"376adb0c482242ef8bcad31b93b99cc5c35e92fa","modified":1492393395355},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1492393395365},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1492393395371},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1492393395373},{"_id":"themes/hexo-theme-next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1492393395368},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1492393395469},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"1ada0189069e17b0dc567ae4b4ee365b2ec0c7d7","modified":1492393395484},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1492393395472},{"_id":"themes/hexo-theme-next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1492393395870},{"_id":"themes/hexo-theme-next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1492393395876},{"_id":"themes/hexo-theme-next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1492393395890},{"_id":"themes/hexo-theme-next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1492393395925},{"_id":"themes/hexo-theme-next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1492393395922},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1492393396058},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1492393396063},{"_id":"themes/hexo-theme-next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1492393396073},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1492393396079},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1492393396089},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1492393396094},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1492393396775},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1492393396783},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1492393396811},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1492393396779},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1492393396815},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1492393396828},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1492393396841},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1492393396821},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492393396842},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1492393396835},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492393396844},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1492393396847},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1492393396850},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1492393396850},{"_id":"source/images/chrome-extension-suggest/omega1.PNG","hash":"72fc0a595fb017bfd8e7c1baf2ed51c4521e0dc4","modified":1494474207851},{"_id":"source/images/chrome-extension-suggest/clipboard.png","hash":"bdee9b2f76607fce3c3a7050cf8d797866b52c83","modified":1495763030343},{"_id":"source/images/chrome-extension-suggest/omega2.PNG","hash":"293a8bf481ce7bcbd1325e43136bddfda37fed51","modified":1494474228359},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1492393396779},{"_id":"source/images/force-delete-file/lockhunter1.png","hash":"489a1c68caa756e9abe25a123f016e1cfb2a6b78","modified":1509441852939},{"_id":"source/images/http-cookie/b.png","hash":"8f5aaa23fa2670aa740da7251fbbaf62df10909e","modified":1492739614481},{"_id":"source/images/http-cookie/c.png","hash":"9fda8db03819a43b0e6ac2f6c845827014dc3242","modified":1492739624358},{"_id":"source/images/sms-blocker/sms-blocker03.png","hash":"ce5f72e61daaa622b12c1d5f5afb89f0b99bb229","modified":1497582693499},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492393395475},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492393395475},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492393396660},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492393396660},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492393396675},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492393396771},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492393396760},{"_id":"source/images/sms-blocker/sms-blocker02.png","hash":"246fe2f2f35400c3faec27bcd1d1d7f91c784b62","modified":1497582706585},{"_id":"source/images/force-delete-file/lockhunter3.png","hash":"f1d245d8c7fdeb7abfd29bd89f40278bd2b26e50","modified":1509442029789},{"_id":"themes/hexo-theme-next/.git/refs/heads/master","hash":"72ef5010337aeb6ef076961786f83937815e8586","modified":1492393394952},{"_id":"themes/hexo-theme-next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1492393395362},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1492393395390},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1492393395386},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1492393395454},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1492393395458},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1492393395383},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1492393395524},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1492393395475},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1492393395633},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1492393395613},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1492393395646},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1492393395657},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1492393395661},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1492393395627},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1492393395466},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1492393395683},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1492393395711},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-mta.swig","hash":"e9a0590dafde1046356620dd2b81e83b6b3b0936","modified":1492393395704},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1492393395762},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1492393395478},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1492393395755},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1492393395768},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1492393395832},{"_id":"themes/hexo-theme-next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1492393395358},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/livere.swig","hash":"5830a52c2a555d3a1f19b67d7bf3d072376cdea9","modified":1492393395857},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1492393395864},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1492393395844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1492393395696},{"_id":"themes/hexo-theme-next/layout/_third-party/search/localsearch.swig","hash":"4a10634dba16ddf2a3cbd4908dfbc97e9aa45469","modified":1492393395953},{"_id":"themes/hexo-theme-next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1492393395936},{"_id":"themes/hexo-theme-next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1492393395969},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"b6e4754498b5eeb470e11fd596227552d9070605","modified":1492393395376},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1492393395748},{"_id":"themes/hexo-theme-next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1492393395961},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1492393396666},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1492393396675},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1492393396760},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1492393396765},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"5b336489316d5efea069fe8bcea4479b53ec7545","modified":1492393396770},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1492393396893},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1492393396888},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1492393396910},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1492393396921},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1492393396959},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1492393396969},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1492393396980},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1492393396996},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"4aceddc2ca32097a9832374da232b6f76af4d5f4","modified":1492393397007},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1492393397010},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1492393397185},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1492393396660},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1492393397199},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1492393396902},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1492393397291},{"_id":"themes/hexo-theme-next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1492393397288},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1492393397195},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1492393397296},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1492393397299},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1492393397411},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1492393397406},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1492393397417},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1492393397423},{"_id":"themes/hexo-theme-next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1492393397494},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1492393397428},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1492393397534},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1492393397529},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1492393397538},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1492393397541},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1492393397551},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1492393396865},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1492393397582},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1492393397596},{"_id":"themes/hexo-theme-next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1492393397734},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1492393397737},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1492393397791},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ef4b2877e37d65025a28eea154b33fe66351493c","modified":1492393397192},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1492393397772},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1492393397782},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1492393397525},{"_id":"themes/hexo-theme-next/.git/logs/refs/heads/master","hash":"89ad9cd52d72d225bc765d5ad6d0e6eff6bd4228","modified":1492393394954},{"_id":"themes/hexo-theme-next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1492393394947},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1492393395929},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1492393396540},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1492393395932},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1492393396098},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1492393396100},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1492393396104},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1492393396107},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1492393396110},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1492393396176},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1492393396377},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1492393396587},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1492393396603},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1492393396652},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1492393396693},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1492393396611},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1492393396684},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1492393396696},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1492393396596},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1492393396701},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1492393396710},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1492393396715},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1492393396725},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1492393396728},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1492393396731},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1492393396735},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1492393396739},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1492393396746},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1492393396706},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1492393396749},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1492393396754},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1492393396756},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1492393396742},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1492393396732},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1492393396975},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1492393397199},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1492393397200},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1492393397202},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1492393397203},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1492393397235},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1492393397247},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1492393397285},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1492393397310},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1492393397202},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1492393397201},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1492393397399},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1492393397436},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1492393397442},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1492393397447},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1492393397687},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1492393397697},{"_id":"themes/hexo-theme-next/.git/objects/pack/pack-b1d045ffed3c46e9ae84b4eef910ff2c8a52b086.idx","hash":"862c4b178b8a40407c93b416f00d7576c1e0c4c7","modified":1492393389615},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1492393397487},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1492393397490},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1492393397755},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/origin/HEAD","hash":"89ad9cd52d72d225bc765d5ad6d0e6eff6bd4228","modified":1492393394945},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1492393396131},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1492393396134},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1492393396137},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1492393396179},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1492393396183},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1492393396227},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1492393396233},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"fcd89ba4f6f48269e5caa73307e8689f41019896","modified":1492393396241},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"61ec8a8481e8b76f2943235256c6d4f89c751c1c","modified":1492393396252},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1492393396258},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1492393396263},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1492393396268},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1492393396113},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1492393396274},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1492393396281},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1492393396247},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"a497ea244df7dd97d1b961412b56f94cc4031e23","modified":1492393396287},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1492393396293},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1492393396298},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1492393396304},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1492393396310},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1492393396317},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1492393396329},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1492393396334},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1492393396372},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1492393396323},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1492393396425},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1492393396465},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1492393396431},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1492393396471},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1492393396476},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1492393396519},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"6516b70ee9e44f1cf9443412cc31bcccb6cdb684","modified":1492393396525},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1492393396531},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1492393396385},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1492393396393},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1492393396400},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1492393396406},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1492393396414},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1492393396419},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1492393396139},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1492393396142},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1492393396174},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1492393396167},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1492393396170},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1492393396116},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1492393396118},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1492393396122},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1492393396125},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1492393396128},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1492393396718},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1492393396721},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1492393396736},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1492393397212},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1492393397204},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1492393397221},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1492393397203},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1492393397220},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1492393397231},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1492393397454},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1492393397482},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1492393397460},{"_id":"source/images/chrome-extension-suggest/tongwen1.PNG","hash":"9a639e2c88cfd9d024432b4fa0fcbff4efa1c877","modified":1494473712314},{"_id":"source/images/chrome-extension-suggest/tongwen0.PNG","hash":"0fe8af2d392d9b287543955e7669b354ebef85fe","modified":1494473741682},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1492393397177},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1492393397676},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1492393397477},{"_id":"themes/hexo-theme-next/.git/objects/pack/pack-b1d045ffed3c46e9ae84b4eef910ff2c8a52b086.pack","hash":"36c6e7257cd13e5d768560a4fa657b5078e9f261","modified":1492393389643},{"_id":"public/tags/index.html","hash":"972b6ea0a21001051619273f9582c5fbd9a837f4","modified":1545643749409},{"_id":"public/2017/08/31/CSS设置块内元素垂直排列布局/index.html","hash":"8adeacd626192923110bf6acd1eb1831f93e7ba1","modified":1545643749409},{"_id":"public/2017/08/07/crontab脚本与环境变量/index.html","hash":"ebe294d7c54a031a12c399ff766a9e6ed2559bd6","modified":1545643749409},{"_id":"public/2017/05/27/安卓用户之痛/index.html","hash":"a816f66352e673effd683d03b94bf3ecb55e5501","modified":1545643749409},{"_id":"public/2017/04/25/豆瓣电子书下载扩展/index.html","hash":"5f72a01539b2d2a8a52bc966b644f37670329c38","modified":1545643749409},{"_id":"public/2017/04/21/chrome经典蓝色主题/index.html","hash":"f044ddfa1e6a33e48b7f1ac9c4c23d8a32c8e184","modified":1545643749409},{"_id":"public/2017/04/17/MIUI解除ROOT授权25秒等待的方法/index.html","hash":"0914b5cc291bb0a8d591efd3b8a0e6b1d5562186","modified":1545643749409},{"_id":"public/archives/index.html","hash":"efd8e88ddf4720099fc3a5cf16663ffd7549a53d","modified":1545643749409},{"_id":"public/archives/page/2/index.html","hash":"ae537d5bf7b5872301482b382f16b8e997123708","modified":1545643749409},{"_id":"public/archives/page/3/index.html","hash":"d3b644d57ad765453b0e5db49078a7b9634aaa0a","modified":1545643749409},{"_id":"public/archives/2017/index.html","hash":"2b3791ee7d57a07de28c6821f623a3f4d02a2b17","modified":1545643749409},{"_id":"public/archives/2017/page/2/index.html","hash":"7904b6ef313263b89dbceab39e10d5d804f3b2b5","modified":1545643749409},{"_id":"public/archives/2017/page/3/index.html","hash":"972ea7027f121fd64b2ad69b22ba6e891866f6ad","modified":1545643749409},{"_id":"public/archives/2017/04/index.html","hash":"3423de04025ba568d4c04edfad904d5f73ca5194","modified":1545643749409},{"_id":"public/archives/2017/05/index.html","hash":"c35c9c9106280f4b34a2ef1e554f841e332600b0","modified":1545643749409},{"_id":"public/archives/2017/06/index.html","hash":"34526a8e2152c23d636056b149cd2ebade7b68bb","modified":1545643749409},{"_id":"public/archives/2017/07/index.html","hash":"6cba6a16870556686e340a519eb114f1a742ca93","modified":1545643749409},{"_id":"public/archives/2017/08/index.html","hash":"47060e3e9a8c0f3e64d1aa1500e10917ff8fcf58","modified":1545643749409},{"_id":"public/archives/2017/10/index.html","hash":"3d2e8782f60331b5981f7ce64a19976b0398ac95","modified":1545643749409},{"_id":"public/archives/2017/11/index.html","hash":"3cf9c134ca20adaad37c7b38ed5f4d624ae0cc34","modified":1545643749409},{"_id":"public/archives/2018/index.html","hash":"e3403f8ff032d45d15919449787242f92f85d1c9","modified":1545643749409},{"_id":"public/archives/2018/07/index.html","hash":"73320694baff966886ef551a3b621421b44ae3eb","modified":1545643749409},{"_id":"public/archives/2018/09/index.html","hash":"9e5136dc2250ba66d6a6e1330de98345285d94a8","modified":1545643749409},{"_id":"public/archives/2018/12/index.html","hash":"000fbd29d9584539a9a08bd1403b6a5415e57ff9","modified":1545643749409},{"_id":"public/tags/css/index.html","hash":"9ab030ac6414b2c2818d2c2327ab89c94ef2af77","modified":1545643749409},{"_id":"public/tags/writing-mode/index.html","hash":"de0116be9e86bacae5cc511d63494ab85ff41054","modified":1545643749409},{"_id":"public/tags/flex/index.html","hash":"34f80841cdc9a7b90d524bbe78168972ecdf1714","modified":1545643749409},{"_id":"public/tags/vertical/index.html","hash":"69ff3db82e0770479914ff5dd3630017836065ce","modified":1545643749409},{"_id":"public/tags/垂直布局/index.html","hash":"b3f56cb014afe052b485e2c27d51efedfda84ced","modified":1545643749409},{"_id":"public/tags/纵向换行/index.html","hash":"27da1e03af344536a5500d89fbb0f333621df0f0","modified":1545643749409},{"_id":"public/tags/cache-control/index.html","hash":"cf57348718ea16a824d674beb4a53dd3b78e76d8","modified":1545643749409},{"_id":"public/tags/nginx/index.html","hash":"8b0dd953771bb0a7d37a9e3f876cfab03ae8314b","modified":1545643749409},{"_id":"public/tags/proxy-cache/index.html","hash":"322648b17e88295f55d5daa9688c9d708678e159","modified":1545643749409},{"_id":"public/tags/Android/index.html","hash":"c33cc7ba2b5c0b78db4fd79507a8b83096272dce","modified":1545643749409},{"_id":"public/tags/短信拦截/index.html","hash":"0454be294bbf3e4ac048837a84cdb46c316e2632","modified":1545643749409},{"_id":"public/tags/sms-blocker/index.html","hash":"b4bbe1f0c39077952b3350b83f67c55a88e51d1c","modified":1545643749409},{"_id":"public/tags/HTTP安全/index.html","hash":"835fda55673f91833e046ad57f8dd1440a22fa3d","modified":1545643749409},{"_id":"public/tags/响应首部/index.html","hash":"d9366637f4be091d52b6480b083acdf24ed0e8b3","modified":1545643749409},{"_id":"public/tags/HTTP首部/index.html","hash":"abcf2aededf825e79c6ad708d84b9acde917131f","modified":1545643749409},{"_id":"public/tags/盗链/index.html","hash":"b61148cd6a9ab3dca9c92d8babc148897c20ccb6","modified":1545643749409},{"_id":"public/tags/X-Frame-Options/index.html","hash":"29b0f6e637762a41463dab937e50723934ad4f2e","modified":1545643749409},{"_id":"public/tags/chrome/index.html","hash":"42b9a2d679bd0f929e586a3ba9989a366784e539","modified":1545643749409},{"_id":"public/tags/chrome-extension/index.html","hash":"59ddeeb756ff4fe7220a7b91a3220d14609ba72e","modified":1545643749409},{"_id":"public/tags/github/index.html","hash":"232aaaa359b19ae45938fd17b984dc6a8786707c","modified":1545643749409},{"_id":"public/tags/css3/index.html","hash":"8512e996aceb3f92fa6e83ca06aede3538853049","modified":1545643749409},{"_id":"public/tags/box-sizing/index.html","hash":"0be891860abdcac3c3ef05df7163a2e38eb27253","modified":1545643749409},{"_id":"public/tags/盒子模型/index.html","hash":"5e10f7f9942062682383a762801eb44ae38502a7","modified":1545643749409},{"_id":"public/tags/theme/index.html","hash":"dd1b17f1ccd47b8dd48d19dbe4561afc07f760d8","modified":1545643749409},{"_id":"public/tags/linux/index.html","hash":"912b2a80ab44761205479ae6c95130b0898afce3","modified":1545643749409},{"_id":"public/tags/环境变量/index.html","hash":"ee802c283c71de2ed4f8707c0a006474bfa6bed9","modified":1545643749409},{"_id":"public/tags/crobtab/index.html","hash":"ad70d2d5cf82e41d7b2d7e2aff025c691452bd55","modified":1545643749409},{"_id":"public/tags/windows/index.html","hash":"86406b1932dcbfd733180bce38e60e12b9083689","modified":1545643749409},{"_id":"public/tags/卸载/index.html","hash":"514541b2b4a4885200c1c60701124db244a7bb9b","modified":1545643749409},{"_id":"public/tags/强制/index.html","hash":"29ca3c8c8cf0f045ff17f762a4c199d859c264a8","modified":1545643749409},{"_id":"public/tags/phantom/index.html","hash":"4eff5edca37f73902335d6b60bd534af3c0f11a1","modified":1545643749409},{"_id":"public/tags/爬虫/index.html","hash":"0af767901eb34d9321db10389bc3b6bc5e66fd1c","modified":1545643749409},{"_id":"public/tags/nodejs/index.html","hash":"5ee72b25d758716cfeb2e7fd23db6f5f5597f8b6","modified":1545643749409},{"_id":"public/tags/superagent/index.html","hash":"5f773760c4895cac033b92a5e471c9a23ba337b2","modified":1545643749409},{"_id":"public/tags/offline-download/index.html","hash":"cb62358598ba0c39e219e72586dc02266ab6484f","modified":1545643749409},{"_id":"public/tags/离线下载/index.html","hash":"b68f710c39a01d65925cab1962df7171a5bcd8af","modified":1545643749409},{"_id":"public/tags/seedr/index.html","hash":"674d687b8283f1821a78a1b026e9425d54dd898b","modified":1545643749409},{"_id":"public/tags/overflow/index.html","hash":"14994087d680c5d3e14da79de3fc9377b18f1488","modified":1545643749409},{"_id":"public/tags/float/index.html","hash":"28d78aa572e45e2539c19ee42a75db572d1f635f","modified":1545643749409},{"_id":"public/tags/height/index.html","hash":"140b43da3046ea7d8177f0b8ae729f9002f864b4","modified":1545643749409},{"_id":"public/tags/https/index.html","hash":"0089f768dff720e7304e626324f1fa7feebb6949","modified":1545643749409},{"_id":"public/tags/encrypt/index.html","hash":"064ac23a343689cfda557c7da395306a02fc76c7","modified":1545643749409},{"_id":"public/tags/历史/index.html","hash":"f6d7ede59f1be54c572ea85dff8cab4e711c009c","modified":1545643749409},{"_id":"public/tags/cookie/index.html","hash":"1162fc3b21f281b2a07dd9baaf855c8cd6932c3d","modified":1545643749409},{"_id":"public/tags/http/index.html","hash":"034e215cc9eca545bd430d54ec9125cd9949c066","modified":1545643749409},{"_id":"public/tags/浏览器/index.html","hash":"ebadbbc9f1d721a0a9b4df16f821bf50cb063065","modified":1545643749409},{"_id":"public/tags/度/index.html","hash":"5bfd9639cbcdf1c415910cff38c6cb6d53d95e9c","modified":1545643749409},{"_id":"public/tags/自律/index.html","hash":"32cad8c02eb2fdcf639fbf1cd0dcded61e0e9bad","modified":1545643749409},{"_id":"public/tags/生活/index.html","hash":"0da3e2d4b356a69b025a9a84ca44216fee5babcf","modified":1545643749409},{"_id":"public/tags/豆瓣/index.html","hash":"598ae73efbf59069684349163ef816e622b4e105","modified":1545643749409},{"_id":"public/tags/电子书/index.html","hash":"1d341e9355badf68e00e7d094554521707ac173f","modified":1545643749409},{"_id":"public/tags/下载/index.html","hash":"ccfcf7ad298f1fce50df5989feceac4e3b54e047","modified":1545643749409},{"_id":"public/tags/扩展/index.html","hash":"5b2cf6b7d908a0b197feec795174726c7948a7c7","modified":1545643749409},{"_id":"public/tags/cloud/index.html","hash":"7ec4595f306059eefa38a3f24c52e1a4b06055d7","modified":1545643749409},{"_id":"public/tags/QQ旋风/index.html","hash":"04df2407fea8be5b01fc16a2f68b3e804e1c16f6","modified":1545643749409},{"_id":"public/2018/12/24/如何解读谯周/index.html","hash":"cdde794d5055d6123ba783248a69f4e0b68166de","modified":1545643749409},{"_id":"public/2018/09/06/生活中要掌握好的度/index.html","hash":"f2524a941e079d862e4ec68414b5ab0bf8f6facc","modified":1545643749409},{"_id":"public/2018/07/06/我的RSS订阅源/index.html","hash":"9eef7048e248b3f97c586f98b096299d73e3c314","modified":1545643749409},{"_id":"public/2017/11/15/离线下载工具offcloud介绍/index.html","hash":"cd4419c3c4ff7a3a66323de214308ffbf78ce04e","modified":1545643749409},{"_id":"public/2017/10/31/windows下强力删除文件工具推荐/index.html","hash":"ec52173ec747329320cfba571abd89275c4de532","modified":1545643749409},{"_id":"public/2017/10/31/如何让博客支持HTTPS协议/index.html","hash":"ae1d5340de34bfcbf3b5812a1a78342908ca0a6e","modified":1545643749409},{"_id":"public/2017/08/04/旋风要倒下了，怀念下以前的下载生活/index.html","hash":"dd310e610fd1c86a1a20b02c4c40f8d1439da6d5","modified":1545643749409},{"_id":"public/2017/07/27/Cache-Control与Nginx配置/index.html","hash":"4c8bf0bb91deeab014f5f15ac2b76a153310385e","modified":1545643749409},{"_id":"public/2017/06/29/HTTP安全相关响应首部/index.html","hash":"14d7a010244b52887a35fe7b941451e1e94833d7","modified":1545643749409},{"_id":"public/2017/06/29/HTTP首部之X-Frame-Options/index.html","hash":"1b037953fed1280cc74df9e6a170b6dc54dd2065","modified":1545643749409},{"_id":"public/2017/06/16/Android短信拦截软件推荐/index.html","hash":"0642747a3ce5a12ebae1e29c1965e9fc7e190cd0","modified":1545643749409},{"_id":"public/2017/06/13/overflow解决父元素因为子元素漂浮没高度的问题/index.html","hash":"74b749c2eec0b7c479074baf8a8e0d16ba8cee87","modified":1545643749409},{"_id":"public/2017/06/01/phantomjs抓取动态加载的网页数据/index.html","hash":"b9432b90c3ed031d07f29e004536b69e581fee6f","modified":1545643749409},{"_id":"public/2017/05/26/chrome扩展推荐/index.html","hash":"6b0b46f4f5aee4ee37725b7420639d1754a10543","modified":1545643749409},{"_id":"public/2017/05/25/国外离线下载网站seedr/index.html","hash":"e53d09919d771aa3c2fb92ff5f27bb88ca562def","modified":1545643749409},{"_id":"public/2017/05/18/关于订阅内容的反思/index.html","hash":"112c165ec91bda9c1405c4b283c51e98ab8b5294","modified":1545643749409},{"_id":"public/2017/05/15/css3-box-sizing/index.html","hash":"f3cfb8206cb408403c87d75fab388a9baa183b2b","modified":1545643749409},{"_id":"public/2017/04/21/cookie是如何工作的/index.html","hash":"513e1f0dea7a800556325f78da65f033e732daff","modified":1545643749409},{"_id":"public/2017/04/20/JavaScript中Array的some等方法对比学习记录/index.html","hash":"98a828af39e91a5add12048f0e89e2d5535ff376","modified":1545643749409},{"_id":"public/2017/04/19/几个windows-linux应用推荐网址/index.html","hash":"57c557b5348b6996fe0005096803703c846ef7c4","modified":1545643749409},{"_id":"public/2017/04/17/JS的bind函数/index.html","hash":"57d728157e40641afe15aca8cb9541e864d7385e","modified":1545643749409},{"_id":"public/index.html","hash":"89c42b83ba85eeeab3380f9da462861941a29002","modified":1545643749409},{"_id":"public/page/2/index.html","hash":"2bc7ff11a4d6757c751c866ede6b0f777503d955","modified":1545643749409},{"_id":"public/page/3/index.html","hash":"28a4a179ee654124c02efa6fc0b92abf2e257e00","modified":1545643749409},{"_id":"public/images/overflow-auto.png","hash":"5775c4956d048f14b951b328ccea2e024890033f","modified":1545643749441},{"_id":"public/images/box-sizing/box-sizing.png","hash":"53412486fee7fc079f0e42ae60935651ba6e2ed2","modified":1545643749441},{"_id":"public/images/chrome-extension-suggest/bluethme.PNG","hash":"182c8a09b5148f13142b68d722ceacd5ebb0203f","modified":1545643749441},{"_id":"public/images/chrome-theme/example.png","hash":"a6ef804d57e24911934fb993b73627d65de2f614","modified":1545643749441},{"_id":"public/images/chrome-extension-suggest/omega0.PNG","hash":"c73a599ec7643dc02f82b88e0e0e199096dccdf2","modified":1545643749441},{"_id":"public/images/chrome-extension-suggest/clipboardsetting.png","hash":"089c2e69195af2cb8e7e00173f3dd2b9fe5970ef","modified":1545643749441},{"_id":"public/images/chrome-extension-suggest/omega3.PNG","hash":"5352d8c362755e335cb42d5f00827c9a95c3b681","modified":1545643749441},{"_id":"public/images/chrome-extension-suggest/simpleextmanager.png","hash":"70bba13fa6e74437ec1816f6e27d3dc8930cc261","modified":1545643749441},{"_id":"public/images/chrome-extension-suggest/tongwen3.PNG","hash":"d21a0af8b6d60d79ca7a0ada9df5e4741b1b2857","modified":1545643749442},{"_id":"public/images/force-delete-file/lockhunter2.png","hash":"ab1264a00bb596f9d2a1a8c175200c04723616b1","modified":1545643749442},{"_id":"public/images/force-delete-file/lockhunter4.png","hash":"b912689574532ca5c614891bf4cd4193281a067f","modified":1545643749442},{"_id":"public/images/http-cookie/a.png","hash":"26ee85168b3e9fd8f1227e43c953d86e0b23248b","modified":1545643749442},{"_id":"public/images/http-cookie/d.png","hash":"e332935b295244c12247b14f5429a41bd6acc315","modified":1545643749442},{"_id":"public/images/offcloud/offcloud2.png","hash":"b285cbbf36f9d3e45cbe795fe51dbd19d309ae8d","modified":1545643749442},{"_id":"public/images/sms-blocker/sms-blocker01.png","hash":"fe51132c58bfb0495175951d8089f3052274ef10","modified":1545643749443},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1545643749443},{"_id":"public/images/offcloud/offcloud1.png","hash":"73d06a630707eddf3afc6630769c7715e7a081ce","modified":1545643749443},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1545643749443},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1545643749443},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1545643749443},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1545643749443},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1545643749444},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1545643749444},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1545643749444},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1545643749444},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1545643749444},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1545643749444},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1545643749444},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1545643749444},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1545643749444},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1545643749444},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1545643749444},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1545643749444},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1545643749444},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1545643749444},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1545643749444},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1545643749444},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1545643749444},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1545643749444},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1545643749444},{"_id":"public/images/example.png","hash":"2b02ff73426d040e107f8f37ef27f4deb1bfdedf","modified":1545643750054},{"_id":"public/images/chrome-extension-suggest/omega1.PNG","hash":"72fc0a595fb017bfd8e7c1baf2ed51c4521e0dc4","modified":1545643750054},{"_id":"public/images/chrome-extension-suggest/clipboard.png","hash":"bdee9b2f76607fce3c3a7050cf8d797866b52c83","modified":1545643750070},{"_id":"public/images/http-cookie/b.png","hash":"8f5aaa23fa2670aa740da7251fbbaf62df10909e","modified":1545643750070},{"_id":"public/images/chrome-extension-suggest/omega2.PNG","hash":"293a8bf481ce7bcbd1325e43136bddfda37fed51","modified":1545643750070},{"_id":"public/images/force-delete-file/lockhunter1.png","hash":"489a1c68caa756e9abe25a123f016e1cfb2a6b78","modified":1545643750070},{"_id":"public/images/http-cookie/c.png","hash":"9fda8db03819a43b0e6ac2f6c845827014dc3242","modified":1545643750070},{"_id":"public/images/sms-blocker/sms-blocker03.png","hash":"ce5f72e61daaa622b12c1d5f5afb89f0b99bb229","modified":1545643750070},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1545643750070},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1545643750070},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1545643750085},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1545643750085},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1545643750085},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1545643750085},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1545643750085},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1545643750085},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1545643750085},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1545643750085},{"_id":"public/js/src/utils.js","hash":"2041eae5ac81c392067bfbd1bba4399cb37beea1","modified":1545643750085},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1545643750085},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1545643750085},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1545643750085},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1545643750085},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1545643750085},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1545643750085},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1545643750085},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1545643750085},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1545643750085},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1545643750085},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1545643750085},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"b614b73ba49ca9136fed7c387ee8df72fe65118f","modified":1545643750085},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1545643750085},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1545643750085},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1545643750085},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1545643750085},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1545643750085},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1545643750085},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1545643750085},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1545643750085},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1545643750085},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1545643750085},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1545643750085},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1545643750085},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1545643750085},{"_id":"public/css/main.css","hash":"f5a9dd47211aafe2bedf227399ffb2af504d0b21","modified":1545643750085},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1545643750085},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1545643750085},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1545643750085},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1545643750085},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1545643750085},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1545643750101},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1545643750101},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1545643750101},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1545643750101},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1545643750101},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1545643750101},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1545643750101},{"_id":"public/images/sms-blocker/sms-blocker02.png","hash":"246fe2f2f35400c3faec27bcd1d1d7f91c784b62","modified":1545643750101},{"_id":"public/images/force-delete-file/lockhunter3.png","hash":"f1d245d8c7fdeb7abfd29bd89f40278bd2b26e50","modified":1545643750102},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1545643750102},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1545643750102},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1545643750102},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1545643750254},{"_id":"public/images/chrome-extension-suggest/tongwen1.PNG","hash":"9a639e2c88cfd9d024432b4fa0fcbff4efa1c877","modified":1545643750276},{"_id":"public/images/chrome-extension-suggest/tongwen0.PNG","hash":"0fe8af2d392d9b287543955e7669b354ebef85fe","modified":1545643750276}],"Category":[],"Data":[],"Page":[{"title":"All tags","date":"2017-04-17T05:02:11.000Z","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: All tags\ndate: 2017-04-17 13:02:11\ncomments: false\n---\n","updated":"2017-04-17T05:03:05.256Z","path":"tags/index.html","layout":"page","_id":"cjq24dl2f0001m4smr8hcd2iq","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"CSS设置块内元素垂直排列布局","date":"2017-08-31T03:37:05.000Z","_content":"\n  ","source":"_posts/CSS设置块内元素垂直排列布局.md","raw":"---\ntitle: CSS设置块内元素垂直排列布局\ndate: 2017-08-31 11:37:05\ntags:\n- css\n- writing-mode\n- flex\n- vertical\n- 垂直布局\n- 纵向换行\n---\n\n  ","slug":"CSS设置块内元素垂直排列布局","published":1,"updated":"2017-08-31T03:39:47.967Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2f0000m4smi3xf27ml","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Cache-Control与Nginx配置","date":"2017-07-27T07:46:10.000Z","_content":"## 缓存相关问题\n\n  项目上最近要处理前端缓存的问题，因为缓存之前一直没有处理好，所以就是时不时的有点问题，经常因为缓存不更新导致访问的都是旧数据。\n\n  这里其实分为两个地方要处理的缓存，第一个是浏览器本身的缓存，第二个是Http代理服务器（这里用Nginx）的缓存问题。\n\n\n## 浏览器配置缓存策略以及导致的问题\n\n  chrome浏览器默认缓存，如果http服务器没有显式的设置缓存的策略，那么浏览器将会自动缓存get请求的数据，并且下一次请求时如果请求的数据url没有发生变化那么就不会去请求服务器直接用缓存的数据显示到浏览器上。\n\n  这就导致了新数据、图片、CSS等不生效。\n\n  一开始通过前端代码的方式来解决这些问题，请求url后面加上一个时间戳类似的数据串，这样每次请求的数据不一样也就不会有缓存的问题，用此来解决总是不刷新缓存的问题。\n  但是现在项目的代码是纯静态代码，HTML的，不是模板生成的，也不是PHP这一类的，所以有些文件不能用动态的字符串来修改请求的URL了，最明显的例子就是HTML中的img标签，或者css里的一些background的url等，这些内容纯静态，只能写死，这种文件一旦更新就会有缓存的问题，缓存更新不及时好像程序有问题。\n\n  ## HTTP SERVER配置浏览器缓存策略\n\n  因为浏览器的缓存策略是有Cache-Control控制的，所以需要在HTTP SERVER的Response Header里设置Cache-Control，HTTP SERVER控制了缓存策略，这样就能处理浏览器的缓存了。\n  Cache-Control不在这里详细展开，简单说下，缓存的设置有这几种策略：no-store(不缓存) no-cache(每次请求时检查缓存是否过期，如果过期，获取新内容) 以及其他的一些设置。\n\n  Nginx的配置: add_header Cache-Control 'no-cache';\n  最好配置在每个location里面，不同的location有不同的缓存策略。\n  MDN上简单介绍了[Cache-Control](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control)，与Cache-Control相关的还有Expires Pragma 返回头的指令。不在此展开。\n\n  Nginx HTTP模块相关配置：\n\n  ## HTTP SERVER配置本身的缓存策略\n\n  HTTP SERVER除了可以控制浏览器的缓存策略之外，还可以配置自己作为缓存代理服务器的缓存策略。\n\n  这种模式下的Nginx是一个简单的反向代理服务器并不是一个纯粹的HTTP SERVER。浏览器请求模式大概如下：\n\n  Browser Client ----->  Nginx Proxy -----> Apache (or other) Http server\n\n  这里的Nginx就是一个反向代理，既然是代理就可以设置缓存，这里的缓存就是proxy_cache。\n  \n  设置如下：\n\n```javascript\n  # 以下的在http 模块里\n\n  proxy_buffering on;\n  proxy_cache_path D:/comproject/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=10s use_temp_path=off;\n  proxy_cache_methods GET HEAD POST;\n\n  # 这些在具体的location模块里：\n  proxy_cache my_cache;\n  proxy_cache_revalidate on;\n  proxy_cache_min_uses 1;\n  proxy_cache_key $host$uri$is_args$args;\n  proxy_cache_use_stale error timeout updating invalid_header http_500 http_502 http_503 http_504;\n  proxy_cache_valid 200 10s;\n  expires 10s;\n  add_header Cache-Control 'no-cache';\n  proxy_pass http://fdp;\n\n```\n\n  上面设置缓存的路径，缓存的方法以及其他的配置都在官网，具体的可以看[nginx官网](http://nginx.org/en/docs/http/ngx_http_proxy_module.html)\n\n  这里有个关键点就是必须有后面的HTTP SERVER，在Nginx用upstream与proxy_pass来配置，这样就是一个代理服务器了，可以缓存数据了。","source":"_posts/Cache-Control与Nginx配置.md","raw":"---\ntitle: Cache-Control与Nginx配置\ndate: 2017-07-27 15:46:10\ntags:\n- cache-control\n- nginx\n- proxy_cache\n---\n## 缓存相关问题\n\n  项目上最近要处理前端缓存的问题，因为缓存之前一直没有处理好，所以就是时不时的有点问题，经常因为缓存不更新导致访问的都是旧数据。\n\n  这里其实分为两个地方要处理的缓存，第一个是浏览器本身的缓存，第二个是Http代理服务器（这里用Nginx）的缓存问题。\n\n\n## 浏览器配置缓存策略以及导致的问题\n\n  chrome浏览器默认缓存，如果http服务器没有显式的设置缓存的策略，那么浏览器将会自动缓存get请求的数据，并且下一次请求时如果请求的数据url没有发生变化那么就不会去请求服务器直接用缓存的数据显示到浏览器上。\n\n  这就导致了新数据、图片、CSS等不生效。\n\n  一开始通过前端代码的方式来解决这些问题，请求url后面加上一个时间戳类似的数据串，这样每次请求的数据不一样也就不会有缓存的问题，用此来解决总是不刷新缓存的问题。\n  但是现在项目的代码是纯静态代码，HTML的，不是模板生成的，也不是PHP这一类的，所以有些文件不能用动态的字符串来修改请求的URL了，最明显的例子就是HTML中的img标签，或者css里的一些background的url等，这些内容纯静态，只能写死，这种文件一旦更新就会有缓存的问题，缓存更新不及时好像程序有问题。\n\n  ## HTTP SERVER配置浏览器缓存策略\n\n  因为浏览器的缓存策略是有Cache-Control控制的，所以需要在HTTP SERVER的Response Header里设置Cache-Control，HTTP SERVER控制了缓存策略，这样就能处理浏览器的缓存了。\n  Cache-Control不在这里详细展开，简单说下，缓存的设置有这几种策略：no-store(不缓存) no-cache(每次请求时检查缓存是否过期，如果过期，获取新内容) 以及其他的一些设置。\n\n  Nginx的配置: add_header Cache-Control 'no-cache';\n  最好配置在每个location里面，不同的location有不同的缓存策略。\n  MDN上简单介绍了[Cache-Control](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control)，与Cache-Control相关的还有Expires Pragma 返回头的指令。不在此展开。\n\n  Nginx HTTP模块相关配置：\n\n  ## HTTP SERVER配置本身的缓存策略\n\n  HTTP SERVER除了可以控制浏览器的缓存策略之外，还可以配置自己作为缓存代理服务器的缓存策略。\n\n  这种模式下的Nginx是一个简单的反向代理服务器并不是一个纯粹的HTTP SERVER。浏览器请求模式大概如下：\n\n  Browser Client ----->  Nginx Proxy -----> Apache (or other) Http server\n\n  这里的Nginx就是一个反向代理，既然是代理就可以设置缓存，这里的缓存就是proxy_cache。\n  \n  设置如下：\n\n```javascript\n  # 以下的在http 模块里\n\n  proxy_buffering on;\n  proxy_cache_path D:/comproject/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=10s use_temp_path=off;\n  proxy_cache_methods GET HEAD POST;\n\n  # 这些在具体的location模块里：\n  proxy_cache my_cache;\n  proxy_cache_revalidate on;\n  proxy_cache_min_uses 1;\n  proxy_cache_key $host$uri$is_args$args;\n  proxy_cache_use_stale error timeout updating invalid_header http_500 http_502 http_503 http_504;\n  proxy_cache_valid 200 10s;\n  expires 10s;\n  add_header Cache-Control 'no-cache';\n  proxy_pass http://fdp;\n\n```\n\n  上面设置缓存的路径，缓存的方法以及其他的配置都在官网，具体的可以看[nginx官网](http://nginx.org/en/docs/http/ngx_http_proxy_module.html)\n\n  这里有个关键点就是必须有后面的HTTP SERVER，在Nginx用upstream与proxy_pass来配置，这样就是一个代理服务器了，可以缓存数据了。","slug":"Cache-Control与Nginx配置","published":1,"updated":"2017-07-27T09:13:38.871Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2f0002m4smsdhb5ji5","content":"<h2 id=\"缓存相关问题\"><a href=\"#缓存相关问题\" class=\"headerlink\" title=\"缓存相关问题\"></a>缓存相关问题</h2><p>  项目上最近要处理前端缓存的问题，因为缓存之前一直没有处理好，所以就是时不时的有点问题，经常因为缓存不更新导致访问的都是旧数据。</p>\n<p>  这里其实分为两个地方要处理的缓存，第一个是浏览器本身的缓存，第二个是Http代理服务器（这里用Nginx）的缓存问题。</p>\n<h2 id=\"浏览器配置缓存策略以及导致的问题\"><a href=\"#浏览器配置缓存策略以及导致的问题\" class=\"headerlink\" title=\"浏览器配置缓存策略以及导致的问题\"></a>浏览器配置缓存策略以及导致的问题</h2><p>  chrome浏览器默认缓存，如果http服务器没有显式的设置缓存的策略，那么浏览器将会自动缓存get请求的数据，并且下一次请求时如果请求的数据url没有发生变化那么就不会去请求服务器直接用缓存的数据显示到浏览器上。</p>\n<p>  这就导致了新数据、图片、CSS等不生效。</p>\n<p>  一开始通过前端代码的方式来解决这些问题，请求url后面加上一个时间戳类似的数据串，这样每次请求的数据不一样也就不会有缓存的问题，用此来解决总是不刷新缓存的问题。<br>  但是现在项目的代码是纯静态代码，HTML的，不是模板生成的，也不是PHP这一类的，所以有些文件不能用动态的字符串来修改请求的URL了，最明显的例子就是HTML中的img标签，或者css里的一些background的url等，这些内容纯静态，只能写死，这种文件一旦更新就会有缓存的问题，缓存更新不及时好像程序有问题。</p>\n<h2 id=\"HTTP-SERVER配置浏览器缓存策略\"><a href=\"#HTTP-SERVER配置浏览器缓存策略\" class=\"headerlink\" title=\"HTTP SERVER配置浏览器缓存策略\"></a>HTTP SERVER配置浏览器缓存策略</h2><p>  因为浏览器的缓存策略是有Cache-Control控制的，所以需要在HTTP SERVER的Response Header里设置Cache-Control，HTTP SERVER控制了缓存策略，这样就能处理浏览器的缓存了。<br>  Cache-Control不在这里详细展开，简单说下，缓存的设置有这几种策略：no-store(不缓存) no-cache(每次请求时检查缓存是否过期，如果过期，获取新内容) 以及其他的一些设置。</p>\n<p>  Nginx的配置: add_header Cache-Control ‘no-cache’;<br>  最好配置在每个location里面，不同的location有不同的缓存策略。<br>  MDN上简单介绍了<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\" target=\"_blank\" rel=\"noopener\">Cache-Control</a>，与Cache-Control相关的还有Expires Pragma 返回头的指令。不在此展开。</p>\n<p>  Nginx HTTP模块相关配置：</p>\n<h2 id=\"HTTP-SERVER配置本身的缓存策略\"><a href=\"#HTTP-SERVER配置本身的缓存策略\" class=\"headerlink\" title=\"HTTP SERVER配置本身的缓存策略\"></a>HTTP SERVER配置本身的缓存策略</h2><p>  HTTP SERVER除了可以控制浏览器的缓存策略之外，还可以配置自己作为缓存代理服务器的缓存策略。</p>\n<p>  这种模式下的Nginx是一个简单的反向代理服务器并不是一个纯粹的HTTP SERVER。浏览器请求模式大概如下：</p>\n<p>  Browser Client —–&gt;  Nginx Proxy —–&gt; Apache (or other) Http server</p>\n<p>  这里的Nginx就是一个反向代理，既然是代理就可以设置缓存，这里的缓存就是proxy_cache。</p>\n<p>  设置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 以下的在http 模块里</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_buffering on;</span><br><span class=\"line\">proxy_cache_path D:<span class=\"regexp\">/comproject/</span>cache levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=my_cache:<span class=\"number\">10</span>m max_size=<span class=\"number\">10</span>g inactive=<span class=\"number\">10</span>s use_temp_path=off;</span><br><span class=\"line\">proxy_cache_methods GET HEAD POST;</span><br><span class=\"line\"></span><br><span class=\"line\"># 这些在具体的location模块里：</span><br><span class=\"line\">proxy_cache my_cache;</span><br><span class=\"line\">proxy_cache_revalidate on;</span><br><span class=\"line\">proxy_cache_min_uses <span class=\"number\">1</span>;</span><br><span class=\"line\">proxy_cache_key $host$uri$is_args$args;</span><br><span class=\"line\">proxy_cache_use_stale error timeout updating invalid_header http_500 http_502 http_503 http_504;</span><br><span class=\"line\">proxy_cache_valid <span class=\"number\">200</span> <span class=\"number\">10</span>s;</span><br><span class=\"line\">expires <span class=\"number\">10</span>s;</span><br><span class=\"line\">add_header Cache-Control <span class=\"string\">'no-cache'</span>;</span><br><span class=\"line\">proxy_pass http:<span class=\"comment\">//fdp;</span></span><br></pre></td></tr></table></figure>\n<p>  上面设置缓存的路径，缓存的方法以及其他的配置都在官网，具体的可以看<a href=\"http://nginx.org/en/docs/http/ngx_http_proxy_module.html\" target=\"_blank\" rel=\"noopener\">nginx官网</a></p>\n<p>  这里有个关键点就是必须有后面的HTTP SERVER，在Nginx用upstream与proxy_pass来配置，这样就是一个代理服务器了，可以缓存数据了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"缓存相关问题\"><a href=\"#缓存相关问题\" class=\"headerlink\" title=\"缓存相关问题\"></a>缓存相关问题</h2><p>  项目上最近要处理前端缓存的问题，因为缓存之前一直没有处理好，所以就是时不时的有点问题，经常因为缓存不更新导致访问的都是旧数据。</p>\n<p>  这里其实分为两个地方要处理的缓存，第一个是浏览器本身的缓存，第二个是Http代理服务器（这里用Nginx）的缓存问题。</p>\n<h2 id=\"浏览器配置缓存策略以及导致的问题\"><a href=\"#浏览器配置缓存策略以及导致的问题\" class=\"headerlink\" title=\"浏览器配置缓存策略以及导致的问题\"></a>浏览器配置缓存策略以及导致的问题</h2><p>  chrome浏览器默认缓存，如果http服务器没有显式的设置缓存的策略，那么浏览器将会自动缓存get请求的数据，并且下一次请求时如果请求的数据url没有发生变化那么就不会去请求服务器直接用缓存的数据显示到浏览器上。</p>\n<p>  这就导致了新数据、图片、CSS等不生效。</p>\n<p>  一开始通过前端代码的方式来解决这些问题，请求url后面加上一个时间戳类似的数据串，这样每次请求的数据不一样也就不会有缓存的问题，用此来解决总是不刷新缓存的问题。<br>  但是现在项目的代码是纯静态代码，HTML的，不是模板生成的，也不是PHP这一类的，所以有些文件不能用动态的字符串来修改请求的URL了，最明显的例子就是HTML中的img标签，或者css里的一些background的url等，这些内容纯静态，只能写死，这种文件一旦更新就会有缓存的问题，缓存更新不及时好像程序有问题。</p>\n<h2 id=\"HTTP-SERVER配置浏览器缓存策略\"><a href=\"#HTTP-SERVER配置浏览器缓存策略\" class=\"headerlink\" title=\"HTTP SERVER配置浏览器缓存策略\"></a>HTTP SERVER配置浏览器缓存策略</h2><p>  因为浏览器的缓存策略是有Cache-Control控制的，所以需要在HTTP SERVER的Response Header里设置Cache-Control，HTTP SERVER控制了缓存策略，这样就能处理浏览器的缓存了。<br>  Cache-Control不在这里详细展开，简单说下，缓存的设置有这几种策略：no-store(不缓存) no-cache(每次请求时检查缓存是否过期，如果过期，获取新内容) 以及其他的一些设置。</p>\n<p>  Nginx的配置: add_header Cache-Control ‘no-cache’;<br>  最好配置在每个location里面，不同的location有不同的缓存策略。<br>  MDN上简单介绍了<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\" target=\"_blank\" rel=\"noopener\">Cache-Control</a>，与Cache-Control相关的还有Expires Pragma 返回头的指令。不在此展开。</p>\n<p>  Nginx HTTP模块相关配置：</p>\n<h2 id=\"HTTP-SERVER配置本身的缓存策略\"><a href=\"#HTTP-SERVER配置本身的缓存策略\" class=\"headerlink\" title=\"HTTP SERVER配置本身的缓存策略\"></a>HTTP SERVER配置本身的缓存策略</h2><p>  HTTP SERVER除了可以控制浏览器的缓存策略之外，还可以配置自己作为缓存代理服务器的缓存策略。</p>\n<p>  这种模式下的Nginx是一个简单的反向代理服务器并不是一个纯粹的HTTP SERVER。浏览器请求模式大概如下：</p>\n<p>  Browser Client —–&gt;  Nginx Proxy —–&gt; Apache (or other) Http server</p>\n<p>  这里的Nginx就是一个反向代理，既然是代理就可以设置缓存，这里的缓存就是proxy_cache。</p>\n<p>  设置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 以下的在http 模块里</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_buffering on;</span><br><span class=\"line\">proxy_cache_path D:<span class=\"regexp\">/comproject/</span>cache levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=my_cache:<span class=\"number\">10</span>m max_size=<span class=\"number\">10</span>g inactive=<span class=\"number\">10</span>s use_temp_path=off;</span><br><span class=\"line\">proxy_cache_methods GET HEAD POST;</span><br><span class=\"line\"></span><br><span class=\"line\"># 这些在具体的location模块里：</span><br><span class=\"line\">proxy_cache my_cache;</span><br><span class=\"line\">proxy_cache_revalidate on;</span><br><span class=\"line\">proxy_cache_min_uses <span class=\"number\">1</span>;</span><br><span class=\"line\">proxy_cache_key $host$uri$is_args$args;</span><br><span class=\"line\">proxy_cache_use_stale error timeout updating invalid_header http_500 http_502 http_503 http_504;</span><br><span class=\"line\">proxy_cache_valid <span class=\"number\">200</span> <span class=\"number\">10</span>s;</span><br><span class=\"line\">expires <span class=\"number\">10</span>s;</span><br><span class=\"line\">add_header Cache-Control <span class=\"string\">'no-cache'</span>;</span><br><span class=\"line\">proxy_pass http:<span class=\"comment\">//fdp;</span></span><br></pre></td></tr></table></figure>\n<p>  上面设置缓存的路径，缓存的方法以及其他的配置都在官网，具体的可以看<a href=\"http://nginx.org/en/docs/http/ngx_http_proxy_module.html\" target=\"_blank\" rel=\"noopener\">nginx官网</a></p>\n<p>  这里有个关键点就是必须有后面的HTTP SERVER，在Nginx用upstream与proxy_pass来配置，这样就是一个代理服务器了，可以缓存数据了。</p>\n"},{"title":"Android短信拦截软件推荐","date":"2017-06-16T02:56:37.000Z","_content":"## 深受垃圾短信骚扰的危害\n\n  现在的人为了利益，什么事情都做，真的是没底线了，各种垃圾电话/短信，烦死人。最近一段时间中国移动疯狂轰炸，每天收到很多条关于它的流量短信，各种流量套餐推荐，不厌其烦，没工夫挨个收拾，什么0000之类的，还有其他的，手机号码注册过什么东西，商家无底线的推送，可能还有某个淘宝店之类的推送。\n\n  我相信很多人应该都有这种体会，说句实在的，现在的手机短信的功能就是个接收验证码还有点用了，其他的用处真的不多了，为了解决这问题，找了很多相关工具，最终确定了一款。\n\n## 查找支持关键字拦截短信的软件\n\n  手机系统，Android 7.1.1，非IOS，无法安装xposed，即使能安装也不想安装。\n\n  所以就找正常的短信拦截软件，思维一开始就想到了国内的那些管家、卫士一类的软件，找了两个发现，首先这类软件都需要root权限，然后还是各种权限都给了才能工作，没办法不想给所以就不用了。\n\n  最终在Google Play上确定了这个安装量很大的[Sms Blocker](https://play.google.com/store/apps/details?id=com.smsBlocker).\n  有收费版与免费版，免费版一般就够用了，收费版挺贵的8.99美元，哈哈。\n\n  支持所有Android系统，4.4以下可以直接使用，4.4以上软件安装后需要设置为默认短信软件。\n\n  软件支持设置黑名单、白名单，每一种名单都支持发送人具体号码、发送人号码段（比如10086可以设置为1008*）、发送信息中的关键字 这三种模式，可以根据模式自行调整设置。\n\n  软件截图：\n\n  ![001](/images/sms-blocker/sms-blocker01.png)\n  ![003](/images/sms-blocker/sms-blocker02.png)\n  ![002](/images/sms-blocker/sms-blocker03.png)\n","source":"_posts/Android短信拦截软件推荐.md","raw":"---\ntitle: Android短信拦截软件推荐\ndate: 2017-06-16 10:56:37\ntags:\n- Android\n- 短信拦截\n- sms blocker\n---\n## 深受垃圾短信骚扰的危害\n\n  现在的人为了利益，什么事情都做，真的是没底线了，各种垃圾电话/短信，烦死人。最近一段时间中国移动疯狂轰炸，每天收到很多条关于它的流量短信，各种流量套餐推荐，不厌其烦，没工夫挨个收拾，什么0000之类的，还有其他的，手机号码注册过什么东西，商家无底线的推送，可能还有某个淘宝店之类的推送。\n\n  我相信很多人应该都有这种体会，说句实在的，现在的手机短信的功能就是个接收验证码还有点用了，其他的用处真的不多了，为了解决这问题，找了很多相关工具，最终确定了一款。\n\n## 查找支持关键字拦截短信的软件\n\n  手机系统，Android 7.1.1，非IOS，无法安装xposed，即使能安装也不想安装。\n\n  所以就找正常的短信拦截软件，思维一开始就想到了国内的那些管家、卫士一类的软件，找了两个发现，首先这类软件都需要root权限，然后还是各种权限都给了才能工作，没办法不想给所以就不用了。\n\n  最终在Google Play上确定了这个安装量很大的[Sms Blocker](https://play.google.com/store/apps/details?id=com.smsBlocker).\n  有收费版与免费版，免费版一般就够用了，收费版挺贵的8.99美元，哈哈。\n\n  支持所有Android系统，4.4以下可以直接使用，4.4以上软件安装后需要设置为默认短信软件。\n\n  软件支持设置黑名单、白名单，每一种名单都支持发送人具体号码、发送人号码段（比如10086可以设置为1008*）、发送信息中的关键字 这三种模式，可以根据模式自行调整设置。\n\n  软件截图：\n\n  ![001](/images/sms-blocker/sms-blocker01.png)\n  ![003](/images/sms-blocker/sms-blocker02.png)\n  ![002](/images/sms-blocker/sms-blocker03.png)\n","slug":"Android短信拦截软件推荐","published":1,"updated":"2017-06-16T03:20:41.169Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2f0004m4smolitgi70","content":"<h2 id=\"深受垃圾短信骚扰的危害\"><a href=\"#深受垃圾短信骚扰的危害\" class=\"headerlink\" title=\"深受垃圾短信骚扰的危害\"></a>深受垃圾短信骚扰的危害</h2><p>  现在的人为了利益，什么事情都做，真的是没底线了，各种垃圾电话/短信，烦死人。最近一段时间中国移动疯狂轰炸，每天收到很多条关于它的流量短信，各种流量套餐推荐，不厌其烦，没工夫挨个收拾，什么0000之类的，还有其他的，手机号码注册过什么东西，商家无底线的推送，可能还有某个淘宝店之类的推送。</p>\n<p>  我相信很多人应该都有这种体会，说句实在的，现在的手机短信的功能就是个接收验证码还有点用了，其他的用处真的不多了，为了解决这问题，找了很多相关工具，最终确定了一款。</p>\n<h2 id=\"查找支持关键字拦截短信的软件\"><a href=\"#查找支持关键字拦截短信的软件\" class=\"headerlink\" title=\"查找支持关键字拦截短信的软件\"></a>查找支持关键字拦截短信的软件</h2><p>  手机系统，Android 7.1.1，非IOS，无法安装xposed，即使能安装也不想安装。</p>\n<p>  所以就找正常的短信拦截软件，思维一开始就想到了国内的那些管家、卫士一类的软件，找了两个发现，首先这类软件都需要root权限，然后还是各种权限都给了才能工作，没办法不想给所以就不用了。</p>\n<p>  最终在Google Play上确定了这个安装量很大的<a href=\"https://play.google.com/store/apps/details?id=com.smsBlocker\" target=\"_blank\" rel=\"noopener\">Sms Blocker</a>.<br>  有收费版与免费版，免费版一般就够用了，收费版挺贵的8.99美元，哈哈。</p>\n<p>  支持所有Android系统，4.4以下可以直接使用，4.4以上软件安装后需要设置为默认短信软件。</p>\n<p>  软件支持设置黑名单、白名单，每一种名单都支持发送人具体号码、发送人号码段（比如10086可以设置为1008*）、发送信息中的关键字 这三种模式，可以根据模式自行调整设置。</p>\n<p>  软件截图：</p>\n<p>  <img src=\"/images/sms-blocker/sms-blocker01.png\" alt=\"001\"><br>  <img src=\"/images/sms-blocker/sms-blocker02.png\" alt=\"003\"><br>  <img src=\"/images/sms-blocker/sms-blocker03.png\" alt=\"002\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"深受垃圾短信骚扰的危害\"><a href=\"#深受垃圾短信骚扰的危害\" class=\"headerlink\" title=\"深受垃圾短信骚扰的危害\"></a>深受垃圾短信骚扰的危害</h2><p>  现在的人为了利益，什么事情都做，真的是没底线了，各种垃圾电话/短信，烦死人。最近一段时间中国移动疯狂轰炸，每天收到很多条关于它的流量短信，各种流量套餐推荐，不厌其烦，没工夫挨个收拾，什么0000之类的，还有其他的，手机号码注册过什么东西，商家无底线的推送，可能还有某个淘宝店之类的推送。</p>\n<p>  我相信很多人应该都有这种体会，说句实在的，现在的手机短信的功能就是个接收验证码还有点用了，其他的用处真的不多了，为了解决这问题，找了很多相关工具，最终确定了一款。</p>\n<h2 id=\"查找支持关键字拦截短信的软件\"><a href=\"#查找支持关键字拦截短信的软件\" class=\"headerlink\" title=\"查找支持关键字拦截短信的软件\"></a>查找支持关键字拦截短信的软件</h2><p>  手机系统，Android 7.1.1，非IOS，无法安装xposed，即使能安装也不想安装。</p>\n<p>  所以就找正常的短信拦截软件，思维一开始就想到了国内的那些管家、卫士一类的软件，找了两个发现，首先这类软件都需要root权限，然后还是各种权限都给了才能工作，没办法不想给所以就不用了。</p>\n<p>  最终在Google Play上确定了这个安装量很大的<a href=\"https://play.google.com/store/apps/details?id=com.smsBlocker\" target=\"_blank\" rel=\"noopener\">Sms Blocker</a>.<br>  有收费版与免费版，免费版一般就够用了，收费版挺贵的8.99美元，哈哈。</p>\n<p>  支持所有Android系统，4.4以下可以直接使用，4.4以上软件安装后需要设置为默认短信软件。</p>\n<p>  软件支持设置黑名单、白名单，每一种名单都支持发送人具体号码、发送人号码段（比如10086可以设置为1008*）、发送信息中的关键字 这三种模式，可以根据模式自行调整设置。</p>\n<p>  软件截图：</p>\n<p>  <img src=\"/images/sms-blocker/sms-blocker01.png\" alt=\"001\"><br>  <img src=\"/images/sms-blocker/sms-blocker02.png\" alt=\"003\"><br>  <img src=\"/images/sms-blocker/sms-blocker03.png\" alt=\"002\"></p>\n"},{"title":"HTTP安全相关响应首部","date":"2017-06-29T05:09:41.000Z","_content":"\n  上一篇文章记录了一下X-Frame-Options响应首部，这次记录下其他的与HTTP安全相关的首部字段与信息。\n\n  ### X-XSS-Protection\n\n  [X-XSS-Protection MDN解释](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-XSS-Protection)\n\n  > HTTP X-XSS-Protection 响应头是Internet Explorer，Chrome和Safari的一个功能，当检测到跨站脚本攻击 (XSS)时，浏览器将停止加载页面。虽然这些保护在现代浏览器中基本上是不必要的，当网站实施一个强大的Content-Security-Policy来 禁用内联的JavaScript ('unsafe-inline')时, 他们仍然可以为尚不支持 CSP 的旧版浏览器的用户提供保护。\n\n  > X-XSS-Protection: 0 禁止XSS过滤。\n  X-XSS-Protection: 1 启用XSS过滤（通常浏览器是默认的）。 如果检测到跨站脚本攻击，浏览器将清除页面（删除不安全的部分）。\n  X-XSS-Protection: 1; mode=block 启用XSS过滤。 如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载。\n  X-XSS-Protection: 1; report=<reporting-uri> 启用XSS过滤。 如果检测到跨站脚本攻击，浏览器将清除页面并使用CSP report-uri指令的功能发送违规报告。\n\n  Nginx配置方法：add_header X-XSS-Protection \"1; mode=block\";\n\n  ### X-Content-Type-Options\n\n  [X-Content-Type-Options MDN解释](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Content-Type-Options)\n\n  > X-Content-Type-Options 响应首部相当于一个提示标志，被服务器用来提示客户端一定要遵循在 Content-Type 首部中对  MIME 类型 的设定，而不能对其进行修改。这就禁用了客户端的 MIME 类型嗅探行为，换句话说，也就是意味着网站管理员确定自己的设置没有问题。\n\n  > X-Content-Type-Options: nosniff\n  nosniff\n  假如请求类型为以下两种，那么阻止请求的发生：\n  \"style\" 但是 MIME 类型不是 \"text/css\"，\n  \"script\" 但是 MIME 类型不是  JavaScript MIME 类型。\n\n  这个首部主要解决的问题是MIME嗅探问题。\n\n  MIME嗅探是什么呢？MIME嗅探是浏览器对接收到的文件类型（可能传输说明的是text，但是实际上却是image）进行解析，然后按照自己解析出来的文件类型进行处理，目的是为了解决有些文件类型错误导致无法正确显示或者执行的问题。\n\n  好心但是带来了大问题，因为按照自己嗅探的结果执行那就有了被攻击的可能，比如一个上传图片的过程，图片上传时实际上是一个js，MIME嗅探完毕后认为这个是JS，然后就执行js代码，js为XSS等攻击代码，导致问题出现。\n\n  有了X-Content-Type-Options的设置，要求客户端一定遵循content-type的设定，那么就能够比较好的解决这个问题，不让坏人有机可乘。\n\n  Nginx配置：add_header X-Content-Type-Options nosniff;\n\n  ### Strict-Transport-Security\n\n  [Strict-Transport-Security MDN解释](https://developer.mozilla.org/zh-CN/docs/Security/HTTP_Strict_Transport_Security)\n\n  > HTTP Strict Transport Security (通常简称为HSTS) 是一个安全功能，它告诉浏览器只能通过HTTPS访问当前资源, 禁止HTTP方式.\n\n  HTTPS比HTTP安全这个就不用说了，嘿嘿，启用这个的好处也就不多说了，本博客也是启用了HSTS的，强制不允许HTTP访问。\n\n  语法：\n  > Strict-Transport-Security: max-age=expireTime [; includeSubdomains]\n  \n  max-age设置过期时间，单位是秒，includeSubdomains是是否包含过子域名的意思。\n\n  Nginx配置: add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\n\n  ### Content-Security-Policy\n\n  这个叫“内容安全政策”，最终设置的东西也会展示在Response Header里，内容比较多，建议直接上MDN学习，给出的很详细，网址如下:\n\n  [Content-Security-Policy MDN解释](https://developer.mozilla.org/zh-CN/docs/Web/Security/CSP/Using_Content_Security_Policy)\n\n\n","source":"_posts/HTTP安全相关响应首部.md","raw":"---\ntitle: HTTP安全相关响应首部\ndate: 2017-06-29 13:09:41\ntags:\n- HTTP安全\n- 响应首部\n---\n\n  上一篇文章记录了一下X-Frame-Options响应首部，这次记录下其他的与HTTP安全相关的首部字段与信息。\n\n  ### X-XSS-Protection\n\n  [X-XSS-Protection MDN解释](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-XSS-Protection)\n\n  > HTTP X-XSS-Protection 响应头是Internet Explorer，Chrome和Safari的一个功能，当检测到跨站脚本攻击 (XSS)时，浏览器将停止加载页面。虽然这些保护在现代浏览器中基本上是不必要的，当网站实施一个强大的Content-Security-Policy来 禁用内联的JavaScript ('unsafe-inline')时, 他们仍然可以为尚不支持 CSP 的旧版浏览器的用户提供保护。\n\n  > X-XSS-Protection: 0 禁止XSS过滤。\n  X-XSS-Protection: 1 启用XSS过滤（通常浏览器是默认的）。 如果检测到跨站脚本攻击，浏览器将清除页面（删除不安全的部分）。\n  X-XSS-Protection: 1; mode=block 启用XSS过滤。 如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载。\n  X-XSS-Protection: 1; report=<reporting-uri> 启用XSS过滤。 如果检测到跨站脚本攻击，浏览器将清除页面并使用CSP report-uri指令的功能发送违规报告。\n\n  Nginx配置方法：add_header X-XSS-Protection \"1; mode=block\";\n\n  ### X-Content-Type-Options\n\n  [X-Content-Type-Options MDN解释](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Content-Type-Options)\n\n  > X-Content-Type-Options 响应首部相当于一个提示标志，被服务器用来提示客户端一定要遵循在 Content-Type 首部中对  MIME 类型 的设定，而不能对其进行修改。这就禁用了客户端的 MIME 类型嗅探行为，换句话说，也就是意味着网站管理员确定自己的设置没有问题。\n\n  > X-Content-Type-Options: nosniff\n  nosniff\n  假如请求类型为以下两种，那么阻止请求的发生：\n  \"style\" 但是 MIME 类型不是 \"text/css\"，\n  \"script\" 但是 MIME 类型不是  JavaScript MIME 类型。\n\n  这个首部主要解决的问题是MIME嗅探问题。\n\n  MIME嗅探是什么呢？MIME嗅探是浏览器对接收到的文件类型（可能传输说明的是text，但是实际上却是image）进行解析，然后按照自己解析出来的文件类型进行处理，目的是为了解决有些文件类型错误导致无法正确显示或者执行的问题。\n\n  好心但是带来了大问题，因为按照自己嗅探的结果执行那就有了被攻击的可能，比如一个上传图片的过程，图片上传时实际上是一个js，MIME嗅探完毕后认为这个是JS，然后就执行js代码，js为XSS等攻击代码，导致问题出现。\n\n  有了X-Content-Type-Options的设置，要求客户端一定遵循content-type的设定，那么就能够比较好的解决这个问题，不让坏人有机可乘。\n\n  Nginx配置：add_header X-Content-Type-Options nosniff;\n\n  ### Strict-Transport-Security\n\n  [Strict-Transport-Security MDN解释](https://developer.mozilla.org/zh-CN/docs/Security/HTTP_Strict_Transport_Security)\n\n  > HTTP Strict Transport Security (通常简称为HSTS) 是一个安全功能，它告诉浏览器只能通过HTTPS访问当前资源, 禁止HTTP方式.\n\n  HTTPS比HTTP安全这个就不用说了，嘿嘿，启用这个的好处也就不多说了，本博客也是启用了HSTS的，强制不允许HTTP访问。\n\n  语法：\n  > Strict-Transport-Security: max-age=expireTime [; includeSubdomains]\n  \n  max-age设置过期时间，单位是秒，includeSubdomains是是否包含过子域名的意思。\n\n  Nginx配置: add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\n\n  ### Content-Security-Policy\n\n  这个叫“内容安全政策”，最终设置的东西也会展示在Response Header里，内容比较多，建议直接上MDN学习，给出的很详细，网址如下:\n\n  [Content-Security-Policy MDN解释](https://developer.mozilla.org/zh-CN/docs/Web/Security/CSP/Using_Content_Security_Policy)\n\n\n","slug":"HTTP安全相关响应首部","published":1,"updated":"2017-06-29T09:03:12.909Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2v0005m4smg1vr43yy","content":"<p>  上一篇文章记录了一下X-Frame-Options响应首部，这次记录下其他的与HTTP安全相关的首部字段与信息。</p>\n<h3 id=\"X-XSS-Protection\"><a href=\"#X-XSS-Protection\" class=\"headerlink\" title=\"X-XSS-Protection\"></a>X-XSS-Protection</h3><p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-XSS-Protection\" target=\"_blank\" rel=\"noopener\">X-XSS-Protection MDN解释</a></p>\n<blockquote>\n<p>HTTP X-XSS-Protection 响应头是Internet Explorer，Chrome和Safari的一个功能，当检测到跨站脚本攻击 (XSS)时，浏览器将停止加载页面。虽然这些保护在现代浏览器中基本上是不必要的，当网站实施一个强大的Content-Security-Policy来 禁用内联的JavaScript (‘unsafe-inline’)时, 他们仍然可以为尚不支持 CSP 的旧版浏览器的用户提供保护。</p>\n</blockquote>\n<blockquote>\n<p>X-XSS-Protection: 0 禁止XSS过滤。<br>  X-XSS-Protection: 1 启用XSS过滤（通常浏览器是默认的）。 如果检测到跨站脚本攻击，浏览器将清除页面（删除不安全的部分）。<br>  X-XSS-Protection: 1; mode=block 启用XSS过滤。 如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载。<br>  X-XSS-Protection: 1; report=<reporting-uri> 启用XSS过滤。 如果检测到跨站脚本攻击，浏览器将清除页面并使用CSP report-uri指令的功能发送违规报告。</reporting-uri></p>\n</blockquote>\n<p>  Nginx配置方法：add_header X-XSS-Protection “1; mode=block”;</p>\n<h3 id=\"X-Content-Type-Options\"><a href=\"#X-Content-Type-Options\" class=\"headerlink\" title=\"X-Content-Type-Options\"></a>X-Content-Type-Options</h3><p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Content-Type-Options\" target=\"_blank\" rel=\"noopener\">X-Content-Type-Options MDN解释</a></p>\n<blockquote>\n<p>X-Content-Type-Options 响应首部相当于一个提示标志，被服务器用来提示客户端一定要遵循在 Content-Type 首部中对  MIME 类型 的设定，而不能对其进行修改。这就禁用了客户端的 MIME 类型嗅探行为，换句话说，也就是意味着网站管理员确定自己的设置没有问题。</p>\n</blockquote>\n<blockquote>\n<p>X-Content-Type-Options: nosniff<br>  nosniff<br>  假如请求类型为以下两种，那么阻止请求的发生：<br>  “style” 但是 MIME 类型不是 “text/css”，<br>  “script” 但是 MIME 类型不是  JavaScript MIME 类型。</p>\n</blockquote>\n<p>  这个首部主要解决的问题是MIME嗅探问题。</p>\n<p>  MIME嗅探是什么呢？MIME嗅探是浏览器对接收到的文件类型（可能传输说明的是text，但是实际上却是image）进行解析，然后按照自己解析出来的文件类型进行处理，目的是为了解决有些文件类型错误导致无法正确显示或者执行的问题。</p>\n<p>  好心但是带来了大问题，因为按照自己嗅探的结果执行那就有了被攻击的可能，比如一个上传图片的过程，图片上传时实际上是一个js，MIME嗅探完毕后认为这个是JS，然后就执行js代码，js为XSS等攻击代码，导致问题出现。</p>\n<p>  有了X-Content-Type-Options的设置，要求客户端一定遵循content-type的设定，那么就能够比较好的解决这个问题，不让坏人有机可乘。</p>\n<p>  Nginx配置：add_header X-Content-Type-Options nosniff;</p>\n<h3 id=\"Strict-Transport-Security\"><a href=\"#Strict-Transport-Security\" class=\"headerlink\" title=\"Strict-Transport-Security\"></a>Strict-Transport-Security</h3><p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Security/HTTP_Strict_Transport_Security\" target=\"_blank\" rel=\"noopener\">Strict-Transport-Security MDN解释</a></p>\n<blockquote>\n<p>HTTP Strict Transport Security (通常简称为HSTS) 是一个安全功能，它告诉浏览器只能通过HTTPS访问当前资源, 禁止HTTP方式.</p>\n</blockquote>\n<p>  HTTPS比HTTP安全这个就不用说了，嘿嘿，启用这个的好处也就不多说了，本博客也是启用了HSTS的，强制不允许HTTP访问。</p>\n<p>  语法：</p>\n<blockquote>\n<p>Strict-Transport-Security: max-age=expireTime [; includeSubdomains]</p>\n</blockquote>\n<p>  max-age设置过期时间，单位是秒，includeSubdomains是是否包含过子域名的意思。</p>\n<p>  Nginx配置: add_header Strict-Transport-Security “max-age=31536000; includeSubDomains” always;</p>\n<h3 id=\"Content-Security-Policy\"><a href=\"#Content-Security-Policy\" class=\"headerlink\" title=\"Content-Security-Policy\"></a>Content-Security-Policy</h3><p>  这个叫“内容安全政策”，最终设置的东西也会展示在Response Header里，内容比较多，建议直接上MDN学习，给出的很详细，网址如下:</p>\n<p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Security/CSP/Using_Content_Security_Policy\" target=\"_blank\" rel=\"noopener\">Content-Security-Policy MDN解释</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>  上一篇文章记录了一下X-Frame-Options响应首部，这次记录下其他的与HTTP安全相关的首部字段与信息。</p>\n<h3 id=\"X-XSS-Protection\"><a href=\"#X-XSS-Protection\" class=\"headerlink\" title=\"X-XSS-Protection\"></a>X-XSS-Protection</h3><p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-XSS-Protection\" target=\"_blank\" rel=\"noopener\">X-XSS-Protection MDN解释</a></p>\n<blockquote>\n<p>HTTP X-XSS-Protection 响应头是Internet Explorer，Chrome和Safari的一个功能，当检测到跨站脚本攻击 (XSS)时，浏览器将停止加载页面。虽然这些保护在现代浏览器中基本上是不必要的，当网站实施一个强大的Content-Security-Policy来 禁用内联的JavaScript (‘unsafe-inline’)时, 他们仍然可以为尚不支持 CSP 的旧版浏览器的用户提供保护。</p>\n</blockquote>\n<blockquote>\n<p>X-XSS-Protection: 0 禁止XSS过滤。<br>  X-XSS-Protection: 1 启用XSS过滤（通常浏览器是默认的）。 如果检测到跨站脚本攻击，浏览器将清除页面（删除不安全的部分）。<br>  X-XSS-Protection: 1; mode=block 启用XSS过滤。 如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载。<br>  X-XSS-Protection: 1; report=<reporting-uri> 启用XSS过滤。 如果检测到跨站脚本攻击，浏览器将清除页面并使用CSP report-uri指令的功能发送违规报告。</reporting-uri></p>\n</blockquote>\n<p>  Nginx配置方法：add_header X-XSS-Protection “1; mode=block”;</p>\n<h3 id=\"X-Content-Type-Options\"><a href=\"#X-Content-Type-Options\" class=\"headerlink\" title=\"X-Content-Type-Options\"></a>X-Content-Type-Options</h3><p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Content-Type-Options\" target=\"_blank\" rel=\"noopener\">X-Content-Type-Options MDN解释</a></p>\n<blockquote>\n<p>X-Content-Type-Options 响应首部相当于一个提示标志，被服务器用来提示客户端一定要遵循在 Content-Type 首部中对  MIME 类型 的设定，而不能对其进行修改。这就禁用了客户端的 MIME 类型嗅探行为，换句话说，也就是意味着网站管理员确定自己的设置没有问题。</p>\n</blockquote>\n<blockquote>\n<p>X-Content-Type-Options: nosniff<br>  nosniff<br>  假如请求类型为以下两种，那么阻止请求的发生：<br>  “style” 但是 MIME 类型不是 “text/css”，<br>  “script” 但是 MIME 类型不是  JavaScript MIME 类型。</p>\n</blockquote>\n<p>  这个首部主要解决的问题是MIME嗅探问题。</p>\n<p>  MIME嗅探是什么呢？MIME嗅探是浏览器对接收到的文件类型（可能传输说明的是text，但是实际上却是image）进行解析，然后按照自己解析出来的文件类型进行处理，目的是为了解决有些文件类型错误导致无法正确显示或者执行的问题。</p>\n<p>  好心但是带来了大问题，因为按照自己嗅探的结果执行那就有了被攻击的可能，比如一个上传图片的过程，图片上传时实际上是一个js，MIME嗅探完毕后认为这个是JS，然后就执行js代码，js为XSS等攻击代码，导致问题出现。</p>\n<p>  有了X-Content-Type-Options的设置，要求客户端一定遵循content-type的设定，那么就能够比较好的解决这个问题，不让坏人有机可乘。</p>\n<p>  Nginx配置：add_header X-Content-Type-Options nosniff;</p>\n<h3 id=\"Strict-Transport-Security\"><a href=\"#Strict-Transport-Security\" class=\"headerlink\" title=\"Strict-Transport-Security\"></a>Strict-Transport-Security</h3><p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Security/HTTP_Strict_Transport_Security\" target=\"_blank\" rel=\"noopener\">Strict-Transport-Security MDN解释</a></p>\n<blockquote>\n<p>HTTP Strict Transport Security (通常简称为HSTS) 是一个安全功能，它告诉浏览器只能通过HTTPS访问当前资源, 禁止HTTP方式.</p>\n</blockquote>\n<p>  HTTPS比HTTP安全这个就不用说了，嘿嘿，启用这个的好处也就不多说了，本博客也是启用了HSTS的，强制不允许HTTP访问。</p>\n<p>  语法：</p>\n<blockquote>\n<p>Strict-Transport-Security: max-age=expireTime [; includeSubdomains]</p>\n</blockquote>\n<p>  max-age设置过期时间，单位是秒，includeSubdomains是是否包含过子域名的意思。</p>\n<p>  Nginx配置: add_header Strict-Transport-Security “max-age=31536000; includeSubDomains” always;</p>\n<h3 id=\"Content-Security-Policy\"><a href=\"#Content-Security-Policy\" class=\"headerlink\" title=\"Content-Security-Policy\"></a>Content-Security-Policy</h3><p>  这个叫“内容安全政策”，最终设置的东西也会展示在Response Header里，内容比较多，建议直接上MDN学习，给出的很详细，网址如下:</p>\n<p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Security/CSP/Using_Content_Security_Policy\" target=\"_blank\" rel=\"noopener\">Content-Security-Policy MDN解释</a></p>\n"},{"title":"JavaScript中Array的some等方法对比学习记录","date":"2017-04-20T10:08:31.000Z","_content":"### JavaScript的方法\n\n1\\. [Array.prototype.some方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n  some方法是用来对数组中的元素进行判断，只要有一个元素满足判断条件就返回true。\n  代码示例，来自MDN\n  \n```javascript\nfunction isBigEnough(element, index, array) { \n  return element >= 10; \n} \n\n[12, 5, 8, 130, 44].every(isBigEnough);   // false \n[12, 54, 18, 130, 44].every(isBigEnough); // true\n```\n\n2\\. [Array.prototype.every方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every)\n\n  every方法与上面的some正好相反，对于数组元素进行判断，要求所有的元素都能满足条件才返回true。\n  代码示例，来自MDN：\n  \n```javascript\nfunction isBigEnough(element, index, array) { \n  return element >= 10; \n} \n\n[12, 5, 8, 130, 44].every(isBigEnough);   // false \n[12, 54, 18, 130, 44].every(isBigEnough); // true\n```\n想起了其他几个类似的方法，都在这里记录下：\n\n3\\. [Array.prototype.find方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n\n  find方法找到**第一个**满足要求的数组元素，然后返回该元素。\n  代码示例，来自MDN；\n  \n```javascript\nfunction isBigEnough(element) {\n  return element >= 15;\n}\n\n[12, 5, 8, 130, 44].find(isBigEnough); // 130\n```\n4\\. [Array.prototype.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n\n  filter方法将会返回所有满足条件的数组元素，元素在一个数组中存储。\n  代码示例，来自MDN：\n  \n```javascript\nvar words = [\"spray\", \"limit\", \"elite\", \"exuberant\", \"destruction\", \"present\"];\n\nvar longWords = words.filter(function(word){\n  return word.length > 6;\n})\n\n// Filtered array longWords is [\"exuberant\", \"destruction\", \"present\"]\n```\n\n5\\. [Array.prototype.map方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n\n  map方法是对数组中的所有元素按照某种方式做修改，然后返回一个修改后的新数组。\n  代码示例，来自MDN：\n  \n```javascript\nvar numbers = [1, 5, 10, 15];\nvar roots = numbers.map(function(x) {\n   return x * 2;\n});\n// roots is now [2, 10, 20, 30]\n// numbers is still [1, 5, 10, 15]\n```\n\n这里就是做一个集中的记录，没有涉及每个方法的详细用法，只做最基础的介绍与整理，想要详细看的可以进入上面每个方法的MDN链接中进行学习，也可以搜索其他的资料深入学习。\n\n","source":"_posts/JavaScript中Array的some等方法对比学习记录.md","raw":"---\ntitle: JavaScript中Array的some等方法对比学习记录\ndate: 2017-04-20 18:08:31\ntags:\n---\n### JavaScript的方法\n\n1\\. [Array.prototype.some方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n  some方法是用来对数组中的元素进行判断，只要有一个元素满足判断条件就返回true。\n  代码示例，来自MDN\n  \n```javascript\nfunction isBigEnough(element, index, array) { \n  return element >= 10; \n} \n\n[12, 5, 8, 130, 44].every(isBigEnough);   // false \n[12, 54, 18, 130, 44].every(isBigEnough); // true\n```\n\n2\\. [Array.prototype.every方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every)\n\n  every方法与上面的some正好相反，对于数组元素进行判断，要求所有的元素都能满足条件才返回true。\n  代码示例，来自MDN：\n  \n```javascript\nfunction isBigEnough(element, index, array) { \n  return element >= 10; \n} \n\n[12, 5, 8, 130, 44].every(isBigEnough);   // false \n[12, 54, 18, 130, 44].every(isBigEnough); // true\n```\n想起了其他几个类似的方法，都在这里记录下：\n\n3\\. [Array.prototype.find方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n\n  find方法找到**第一个**满足要求的数组元素，然后返回该元素。\n  代码示例，来自MDN；\n  \n```javascript\nfunction isBigEnough(element) {\n  return element >= 15;\n}\n\n[12, 5, 8, 130, 44].find(isBigEnough); // 130\n```\n4\\. [Array.prototype.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n\n  filter方法将会返回所有满足条件的数组元素，元素在一个数组中存储。\n  代码示例，来自MDN：\n  \n```javascript\nvar words = [\"spray\", \"limit\", \"elite\", \"exuberant\", \"destruction\", \"present\"];\n\nvar longWords = words.filter(function(word){\n  return word.length > 6;\n})\n\n// Filtered array longWords is [\"exuberant\", \"destruction\", \"present\"]\n```\n\n5\\. [Array.prototype.map方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n\n  map方法是对数组中的所有元素按照某种方式做修改，然后返回一个修改后的新数组。\n  代码示例，来自MDN：\n  \n```javascript\nvar numbers = [1, 5, 10, 15];\nvar roots = numbers.map(function(x) {\n   return x * 2;\n});\n// roots is now [2, 10, 20, 30]\n// numbers is still [1, 5, 10, 15]\n```\n\n这里就是做一个集中的记录，没有涉及每个方法的详细用法，只做最基础的介绍与整理，想要详细看的可以进入上面每个方法的MDN链接中进行学习，也可以搜索其他的资料深入学习。\n\n","slug":"JavaScript中Array的some等方法对比学习记录","published":1,"updated":"2017-04-20T10:08:48.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2v0006m4smk4p7kfcn","content":"<h3 id=\"JavaScript的方法\"><a href=\"#JavaScript的方法\" class=\"headerlink\" title=\"JavaScript的方法\"></a>JavaScript的方法</h3><p>1. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\" target=\"_blank\" rel=\"noopener\">Array.prototype.some方法</a><br>  some方法是用来对数组中的元素进行判断，只要有一个元素满足判断条件就返回true。<br>  代码示例，来自MDN</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBigEnough</span>(<span class=\"params\">element, index, array</span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> element &gt;= <span class=\"number\">10</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(isBigEnough);   <span class=\"comment\">// false </span></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">54</span>, <span class=\"number\">18</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(isBigEnough); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>2. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\" target=\"_blank\" rel=\"noopener\">Array.prototype.every方法</a></p>\n<p>  every方法与上面的some正好相反，对于数组元素进行判断，要求所有的元素都能满足条件才返回true。<br>  代码示例，来自MDN：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBigEnough</span>(<span class=\"params\">element, index, array</span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> element &gt;= <span class=\"number\">10</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(isBigEnough);   <span class=\"comment\">// false </span></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">54</span>, <span class=\"number\">18</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(isBigEnough); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>想起了其他几个类似的方法，都在这里记录下：</p>\n<p>3. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\" target=\"_blank\" rel=\"noopener\">Array.prototype.find方法</a></p>\n<p>  find方法找到<strong>第一个</strong>满足要求的数组元素，然后返回该元素。<br>  代码示例，来自MDN；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBigEnough</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> element &gt;= <span class=\"number\">15</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].find(isBigEnough); <span class=\"comment\">// 130</span></span><br></pre></td></tr></table></figure>\n<p>4. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\" target=\"_blank\" rel=\"noopener\">Array.prototype.filter</a></p>\n<p>  filter方法将会返回所有满足条件的数组元素，元素在一个数组中存储。<br>  代码示例，来自MDN：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> words = [<span class=\"string\">\"spray\"</span>, <span class=\"string\">\"limit\"</span>, <span class=\"string\">\"elite\"</span>, <span class=\"string\">\"exuberant\"</span>, <span class=\"string\">\"destruction\"</span>, <span class=\"string\">\"present\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> longWords = words.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">word</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> word.length &gt; <span class=\"number\">6</span>;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Filtered array longWords is [\"exuberant\", \"destruction\", \"present\"]</span></span><br></pre></td></tr></table></figure>\n<p>5. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\" target=\"_blank\" rel=\"noopener\">Array.prototype.map方法</a></p>\n<p>  map方法是对数组中的所有元素按照某种方式做修改，然后返回一个修改后的新数组。<br>  代码示例，来自MDN：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> roots = numbers.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> x * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// roots is now [2, 10, 20, 30]</span></span><br><span class=\"line\"><span class=\"comment\">// numbers is still [1, 5, 10, 15]</span></span><br></pre></td></tr></table></figure>\n<p>这里就是做一个集中的记录，没有涉及每个方法的详细用法，只做最基础的介绍与整理，想要详细看的可以进入上面每个方法的MDN链接中进行学习，也可以搜索其他的资料深入学习。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"JavaScript的方法\"><a href=\"#JavaScript的方法\" class=\"headerlink\" title=\"JavaScript的方法\"></a>JavaScript的方法</h3><p>1. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\" target=\"_blank\" rel=\"noopener\">Array.prototype.some方法</a><br>  some方法是用来对数组中的元素进行判断，只要有一个元素满足判断条件就返回true。<br>  代码示例，来自MDN</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBigEnough</span>(<span class=\"params\">element, index, array</span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> element &gt;= <span class=\"number\">10</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(isBigEnough);   <span class=\"comment\">// false </span></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">54</span>, <span class=\"number\">18</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(isBigEnough); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>2. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\" target=\"_blank\" rel=\"noopener\">Array.prototype.every方法</a></p>\n<p>  every方法与上面的some正好相反，对于数组元素进行判断，要求所有的元素都能满足条件才返回true。<br>  代码示例，来自MDN：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBigEnough</span>(<span class=\"params\">element, index, array</span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> element &gt;= <span class=\"number\">10</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(isBigEnough);   <span class=\"comment\">// false </span></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">54</span>, <span class=\"number\">18</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(isBigEnough); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>想起了其他几个类似的方法，都在这里记录下：</p>\n<p>3. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\" target=\"_blank\" rel=\"noopener\">Array.prototype.find方法</a></p>\n<p>  find方法找到<strong>第一个</strong>满足要求的数组元素，然后返回该元素。<br>  代码示例，来自MDN；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBigEnough</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> element &gt;= <span class=\"number\">15</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].find(isBigEnough); <span class=\"comment\">// 130</span></span><br></pre></td></tr></table></figure>\n<p>4. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\" target=\"_blank\" rel=\"noopener\">Array.prototype.filter</a></p>\n<p>  filter方法将会返回所有满足条件的数组元素，元素在一个数组中存储。<br>  代码示例，来自MDN：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> words = [<span class=\"string\">\"spray\"</span>, <span class=\"string\">\"limit\"</span>, <span class=\"string\">\"elite\"</span>, <span class=\"string\">\"exuberant\"</span>, <span class=\"string\">\"destruction\"</span>, <span class=\"string\">\"present\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> longWords = words.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">word</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> word.length &gt; <span class=\"number\">6</span>;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Filtered array longWords is [\"exuberant\", \"destruction\", \"present\"]</span></span><br></pre></td></tr></table></figure>\n<p>5. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\" target=\"_blank\" rel=\"noopener\">Array.prototype.map方法</a></p>\n<p>  map方法是对数组中的所有元素按照某种方式做修改，然后返回一个修改后的新数组。<br>  代码示例，来自MDN：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> roots = numbers.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> x * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// roots is now [2, 10, 20, 30]</span></span><br><span class=\"line\"><span class=\"comment\">// numbers is still [1, 5, 10, 15]</span></span><br></pre></td></tr></table></figure>\n<p>这里就是做一个集中的记录，没有涉及每个方法的详细用法，只做最基础的介绍与整理，想要详细看的可以进入上面每个方法的MDN链接中进行学习，也可以搜索其他的资料深入学习。</p>\n"},{"title":"JS的bind函数","date":"2017-04-17T03:06:03.000Z","_content":"  今天看到谷歌developer的官方文档，看到了对bind方法的运用，这个函数可以创建一个新的函数，并且通过传递参数修改原函数的this对象，可以修改this对象也就表示可以传递原来函数本身，bind函数的第一个函数必须是要修改的对象，而后面的参数才是原来的函数使用的参数。\n\n  MDN官网的解释：\n> bind()方法会创建一个新函数。当这个新函数被调用时，bind()的第一个参数将作为它运行时的 this, 之后的一序列参数将会在传递的实参前传入作为它的参数。\n\n  [Function.prototype.bind链接](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind)\n\n这里插入下之前部分代码示例：\n\n```javascript\nfunction spawn(generatorFunc) {\n  function continuer(verb, arg) {\n    var result;\n    try {\n      result = generator[verb](arg);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (result.done) {\n      return result.value;\n    } else {\n      return Promise.resolve(result.value).then(callback, errback);\n    }\n  }\n  var generator = generatorFunc();\n  var callback = continuer.bind(continuer, \"next\");\n  var errback = continuer.bind(continuer, \"throw\");\n  return callback();\n}\n\nspawn(function *() {\n  \"use strict\";\n  try {\n    // 'yield' effectively does an async wait, returning the result of the promise\n    let story = yield getJson('story.json');\n    addHtmlToPage(story.heading);\n    // Map our array of chapter urls\n    // to an array of chapter json promises.\n    // This makes sure they all download parallel.\n    let chapterPromises = story.chapterUrls.map(getJson);\n    // Can't use chapterPromises.forEach, because yielding within doesn't work\n    for (let i = 0, chapterPromise; chapterPromise = chapterPromises[i]; i++) {\n      // Wait for each chapter to be ready, then add it to the page\n      let chapter = yield chapterPromise;\n      addHtmlToPage(chapter.html);\n    }\n    addTextToPage(\"All done\");\n  }\n  catch (err) {\n    // try/catch just works, rejected promises are thrown here\n    addTextToPage(\"Argh, broken: \" + err.message);\n  }\n  document.querySelector('.spinner').style.display = 'none';\n});\n```\n  代码出现在promise文章里，[链接](https://developers.google.com/web/fundamentals/getting-started/primers/promises)\n\n\n  有很多文章分析js方法的call apply bind的区别，这里就做简单的记录，call apply都是直接执行原来的方法，然后传递新对象以及参数，bind是生成一个新的函数。call与apply都是执行，但是还是有区别，主要是参数传递的不同，call用于传递确定个数的参数，而apply用于传递个数不确定的参数，用类似于数组的形式将参数传递进去，然后进行处理。\n\n","source":"_posts/JS的bind函数.md","raw":"---\ntitle: JS的bind函数\ndate: 2017-04-17 11:06:03\ntags:\n---\n  今天看到谷歌developer的官方文档，看到了对bind方法的运用，这个函数可以创建一个新的函数，并且通过传递参数修改原函数的this对象，可以修改this对象也就表示可以传递原来函数本身，bind函数的第一个函数必须是要修改的对象，而后面的参数才是原来的函数使用的参数。\n\n  MDN官网的解释：\n> bind()方法会创建一个新函数。当这个新函数被调用时，bind()的第一个参数将作为它运行时的 this, 之后的一序列参数将会在传递的实参前传入作为它的参数。\n\n  [Function.prototype.bind链接](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind)\n\n这里插入下之前部分代码示例：\n\n```javascript\nfunction spawn(generatorFunc) {\n  function continuer(verb, arg) {\n    var result;\n    try {\n      result = generator[verb](arg);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (result.done) {\n      return result.value;\n    } else {\n      return Promise.resolve(result.value).then(callback, errback);\n    }\n  }\n  var generator = generatorFunc();\n  var callback = continuer.bind(continuer, \"next\");\n  var errback = continuer.bind(continuer, \"throw\");\n  return callback();\n}\n\nspawn(function *() {\n  \"use strict\";\n  try {\n    // 'yield' effectively does an async wait, returning the result of the promise\n    let story = yield getJson('story.json');\n    addHtmlToPage(story.heading);\n    // Map our array of chapter urls\n    // to an array of chapter json promises.\n    // This makes sure they all download parallel.\n    let chapterPromises = story.chapterUrls.map(getJson);\n    // Can't use chapterPromises.forEach, because yielding within doesn't work\n    for (let i = 0, chapterPromise; chapterPromise = chapterPromises[i]; i++) {\n      // Wait for each chapter to be ready, then add it to the page\n      let chapter = yield chapterPromise;\n      addHtmlToPage(chapter.html);\n    }\n    addTextToPage(\"All done\");\n  }\n  catch (err) {\n    // try/catch just works, rejected promises are thrown here\n    addTextToPage(\"Argh, broken: \" + err.message);\n  }\n  document.querySelector('.spinner').style.display = 'none';\n});\n```\n  代码出现在promise文章里，[链接](https://developers.google.com/web/fundamentals/getting-started/primers/promises)\n\n\n  有很多文章分析js方法的call apply bind的区别，这里就做简单的记录，call apply都是直接执行原来的方法，然后传递新对象以及参数，bind是生成一个新的函数。call与apply都是执行，但是还是有区别，主要是参数传递的不同，call用于传递确定个数的参数，而apply用于传递个数不确定的参数，用类似于数组的形式将参数传递进去，然后进行处理。\n\n","slug":"JS的bind函数","published":1,"updated":"2017-04-17T03:09:31.089Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2v0008m4smd3dlxf6p","content":"<p>  今天看到谷歌developer的官方文档，看到了对bind方法的运用，这个函数可以创建一个新的函数，并且通过传递参数修改原函数的this对象，可以修改this对象也就表示可以传递原来函数本身，bind函数的第一个函数必须是要修改的对象，而后面的参数才是原来的函数使用的参数。</p>\n<p>  MDN官网的解释：</p>\n<blockquote>\n<p>bind()方法会创建一个新函数。当这个新函数被调用时，bind()的第一个参数将作为它运行时的 this, 之后的一序列参数将会在传递的实参前传入作为它的参数。</p>\n</blockquote>\n<p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\" target=\"_blank\" rel=\"noopener\">Function.prototype.bind链接</a></p>\n<p>这里插入下之前部分代码示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">spawn</span>(<span class=\"params\">generatorFunc</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">continuer</span>(<span class=\"params\">verb, arg</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      result = generator[verb](arg);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (result.done) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> result.value;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(result.value).then(callback, errback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> generator = generatorFunc();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> callback = continuer.bind(continuer, <span class=\"string\">\"next\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> errback = continuer.bind(continuer, <span class=\"string\">\"throw\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">spawn(<span class=\"function\"><span class=\"keyword\">function</span> *(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 'yield' effectively does an async wait, returning the result of the promise</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> story = <span class=\"keyword\">yield</span> getJson(<span class=\"string\">'story.json'</span>);</span><br><span class=\"line\">    addHtmlToPage(story.heading);</span><br><span class=\"line\">    <span class=\"comment\">// Map our array of chapter urls</span></span><br><span class=\"line\">    <span class=\"comment\">// to an array of chapter json promises.</span></span><br><span class=\"line\">    <span class=\"comment\">// This makes sure they all download parallel.</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> chapterPromises = story.chapterUrls.map(getJson);</span><br><span class=\"line\">    <span class=\"comment\">// Can't use chapterPromises.forEach, because yielding within doesn't work</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, chapterPromise; chapterPromise = chapterPromises[i]; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Wait for each chapter to be ready, then add it to the page</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> chapter = <span class=\"keyword\">yield</span> chapterPromise;</span><br><span class=\"line\">      addHtmlToPage(chapter.html);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    addTextToPage(<span class=\"string\">\"All done\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// try/catch just works, rejected promises are thrown here</span></span><br><span class=\"line\">    addTextToPage(<span class=\"string\">\"Argh, broken: \"</span> + err.message);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.spinner'</span>).style.display = <span class=\"string\">'none'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>  代码出现在promise文章里，<a href=\"https://developers.google.com/web/fundamentals/getting-started/primers/promises\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<p>  有很多文章分析js方法的call apply bind的区别，这里就做简单的记录，call apply都是直接执行原来的方法，然后传递新对象以及参数，bind是生成一个新的函数。call与apply都是执行，但是还是有区别，主要是参数传递的不同，call用于传递确定个数的参数，而apply用于传递个数不确定的参数，用类似于数组的形式将参数传递进去，然后进行处理。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>  今天看到谷歌developer的官方文档，看到了对bind方法的运用，这个函数可以创建一个新的函数，并且通过传递参数修改原函数的this对象，可以修改this对象也就表示可以传递原来函数本身，bind函数的第一个函数必须是要修改的对象，而后面的参数才是原来的函数使用的参数。</p>\n<p>  MDN官网的解释：</p>\n<blockquote>\n<p>bind()方法会创建一个新函数。当这个新函数被调用时，bind()的第一个参数将作为它运行时的 this, 之后的一序列参数将会在传递的实参前传入作为它的参数。</p>\n</blockquote>\n<p>  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\" target=\"_blank\" rel=\"noopener\">Function.prototype.bind链接</a></p>\n<p>这里插入下之前部分代码示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">spawn</span>(<span class=\"params\">generatorFunc</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">continuer</span>(<span class=\"params\">verb, arg</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      result = generator[verb](arg);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (result.done) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> result.value;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(result.value).then(callback, errback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> generator = generatorFunc();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> callback = continuer.bind(continuer, <span class=\"string\">\"next\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> errback = continuer.bind(continuer, <span class=\"string\">\"throw\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">spawn(<span class=\"function\"><span class=\"keyword\">function</span> *(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 'yield' effectively does an async wait, returning the result of the promise</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> story = <span class=\"keyword\">yield</span> getJson(<span class=\"string\">'story.json'</span>);</span><br><span class=\"line\">    addHtmlToPage(story.heading);</span><br><span class=\"line\">    <span class=\"comment\">// Map our array of chapter urls</span></span><br><span class=\"line\">    <span class=\"comment\">// to an array of chapter json promises.</span></span><br><span class=\"line\">    <span class=\"comment\">// This makes sure they all download parallel.</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> chapterPromises = story.chapterUrls.map(getJson);</span><br><span class=\"line\">    <span class=\"comment\">// Can't use chapterPromises.forEach, because yielding within doesn't work</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, chapterPromise; chapterPromise = chapterPromises[i]; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Wait for each chapter to be ready, then add it to the page</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> chapter = <span class=\"keyword\">yield</span> chapterPromise;</span><br><span class=\"line\">      addHtmlToPage(chapter.html);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    addTextToPage(<span class=\"string\">\"All done\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// try/catch just works, rejected promises are thrown here</span></span><br><span class=\"line\">    addTextToPage(<span class=\"string\">\"Argh, broken: \"</span> + err.message);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.spinner'</span>).style.display = <span class=\"string\">'none'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>  代码出现在promise文章里，<a href=\"https://developers.google.com/web/fundamentals/getting-started/primers/promises\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<p>  有很多文章分析js方法的call apply bind的区别，这里就做简单的记录，call apply都是直接执行原来的方法，然后传递新对象以及参数，bind是生成一个新的函数。call与apply都是执行，但是还是有区别，主要是参数传递的不同，call用于传递确定个数的参数，而apply用于传递个数不确定的参数，用类似于数组的形式将参数传递进去，然后进行处理。</p>\n"},{"title":"HTTP首部之X-Frame-Options","date":"2017-06-29T01:16:44.000Z","_content":"\n  这几天在阅读HTTP相关的书籍，先从简单的入手，先看别人推荐的《图解HTTP》。\n  \n  看到HTTP首部的讲解，看到了一个首部名为X-Frame-Options，这个字段是响应首部字段，也就是说是在我们浏览器调试中显示的response headers里面显示的。\n\n  那么这个首部字段是做什么的呢?定义就不展示了直接贴上MDN的定义：\n  > X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在frame,iframe或者object 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。\n\n  >X-Frame-Options 有三个值:\n  DENY\n  表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。\n  SAMEORIGIN\n  表示该页面可以在相同域名页面的 frame 中展示。\n  ALLOW-FROM uri\n  表示该页面可以在指定来源的 frame 中展示。  \n  \n  这个说的更直白一点就是可以防止直接盗链，大家可以找相关的网址测试。\n\n  如果不设置X-Frame-Options这个字段，默认的情况就是这个网站可以被frame引用，也就是可以被连接嵌入，这样就产生了盗链问题。\n\n  以下面的例子展示一下：（用了百度跟Google，嘿嘿）\n\n  ```html\n\n  <iframe src=\"https://www.baidu.com\" width=\"100%\" height=\"300px\"></iframe>\n  <iframe src=\"https://www.google.com\" width=\"100%\" height=\"200px\"></iframe>\n\n  ```\n\n  代码运行[jsfiddle](https://jsfiddle.net/dazhizhemu/1z8cd9mg/)\n\n  想起之前的新闻，乐视与优酷之间的因为盗链引发的官司，优酷状告乐视盗链，我看了下两家的网站都没有启用这个选项，不知道为什么，可能是为了分享视频方便？我觉得应该不是这个问题。\n  去看了一下youtube的视频外链处理方式，首先播放页面是不允许盗链的，设置了X-Frame-Options同源可以引入。外站要引入视频是 \"https://www.youtube.com/embed/0nhrzAUeOVo\" 这种格式的，有上下文/embed/,这个网址的X-Frame-Options没有设置，可以在任何网站嵌入。\n\n  所以说吧有些问题可能就不是单纯的从技术角度可以考虑或者理解的了，我真的不信优酷、乐视等网站不懂这些东西，可能有别的原因。\n\n  另外就是有了X-Frame-Options就能解决盗链问题了？\n\n  找到了chrome extension的一个工具可以解决这个不准盗链的问题，这个扩展直接把返回的请求头里面的X-Frame-options给移除了，哈哈哈，不过这个是利用工具了，也就是浏览器行为了，不是网站可以处理的。\n\n  忘了写Nginx如何添加X-Frame-Options支持了，在server里：add_header X-Frame-Options \"SAMEORIGIN\";\n  其他的Apache IIS等在 [MDN网址](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) 上有相关说明。\n","source":"_posts/HTTP首部之X-Frame-Options.md","raw":"---\ntitle: HTTP首部之X-Frame-Options\ndate: 2017-06-29 09:16:44\ntags:\n- HTTP首部\n- 盗链\n- X-Frame-Options\n---\n\n  这几天在阅读HTTP相关的书籍，先从简单的入手，先看别人推荐的《图解HTTP》。\n  \n  看到HTTP首部的讲解，看到了一个首部名为X-Frame-Options，这个字段是响应首部字段，也就是说是在我们浏览器调试中显示的response headers里面显示的。\n\n  那么这个首部字段是做什么的呢?定义就不展示了直接贴上MDN的定义：\n  > X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在frame,iframe或者object 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。\n\n  >X-Frame-Options 有三个值:\n  DENY\n  表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。\n  SAMEORIGIN\n  表示该页面可以在相同域名页面的 frame 中展示。\n  ALLOW-FROM uri\n  表示该页面可以在指定来源的 frame 中展示。  \n  \n  这个说的更直白一点就是可以防止直接盗链，大家可以找相关的网址测试。\n\n  如果不设置X-Frame-Options这个字段，默认的情况就是这个网站可以被frame引用，也就是可以被连接嵌入，这样就产生了盗链问题。\n\n  以下面的例子展示一下：（用了百度跟Google，嘿嘿）\n\n  ```html\n\n  <iframe src=\"https://www.baidu.com\" width=\"100%\" height=\"300px\"></iframe>\n  <iframe src=\"https://www.google.com\" width=\"100%\" height=\"200px\"></iframe>\n\n  ```\n\n  代码运行[jsfiddle](https://jsfiddle.net/dazhizhemu/1z8cd9mg/)\n\n  想起之前的新闻，乐视与优酷之间的因为盗链引发的官司，优酷状告乐视盗链，我看了下两家的网站都没有启用这个选项，不知道为什么，可能是为了分享视频方便？我觉得应该不是这个问题。\n  去看了一下youtube的视频外链处理方式，首先播放页面是不允许盗链的，设置了X-Frame-Options同源可以引入。外站要引入视频是 \"https://www.youtube.com/embed/0nhrzAUeOVo\" 这种格式的，有上下文/embed/,这个网址的X-Frame-Options没有设置，可以在任何网站嵌入。\n\n  所以说吧有些问题可能就不是单纯的从技术角度可以考虑或者理解的了，我真的不信优酷、乐视等网站不懂这些东西，可能有别的原因。\n\n  另外就是有了X-Frame-Options就能解决盗链问题了？\n\n  找到了chrome extension的一个工具可以解决这个不准盗链的问题，这个扩展直接把返回的请求头里面的X-Frame-options给移除了，哈哈哈，不过这个是利用工具了，也就是浏览器行为了，不是网站可以处理的。\n\n  忘了写Nginx如何添加X-Frame-Options支持了，在server里：add_header X-Frame-Options \"SAMEORIGIN\";\n  其他的Apache IIS等在 [MDN网址](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) 上有相关说明。\n","slug":"HTTP首部之X-Frame-Options","published":1,"updated":"2017-06-29T02:40:37.149Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2v0009m4sma0zevym2","content":"<p>  这几天在阅读HTTP相关的书籍，先从简单的入手，先看别人推荐的《图解HTTP》。</p>\n<p>  看到HTTP首部的讲解，看到了一个首部名为X-Frame-Options，这个字段是响应首部字段，也就是说是在我们浏览器调试中显示的response headers里面显示的。</p>\n<p>  那么这个首部字段是做什么的呢?定义就不展示了直接贴上MDN的定义：</p>\n<blockquote>\n<p>X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在frame,iframe或者object 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。</p>\n</blockquote>\n<blockquote>\n<p>X-Frame-Options 有三个值:<br>  DENY<br>  表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。<br>  SAMEORIGIN<br>  表示该页面可以在相同域名页面的 frame 中展示。<br>  ALLOW-FROM uri<br>  表示该页面可以在指定来源的 frame 中展示。  </p>\n</blockquote>\n<p>  这个说的更直白一点就是可以防止直接盗链，大家可以找相关的网址测试。</p>\n<p>  如果不设置X-Frame-Options这个字段，默认的情况就是这个网站可以被frame引用，也就是可以被连接嵌入，这样就产生了盗链问题。</p>\n<p>  以下面的例子展示一下：（用了百度跟Google，嘿嘿）</p>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.baidu.com\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.google.com\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"200px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>  代码运行<a href=\"https://jsfiddle.net/dazhizhemu/1z8cd9mg/\" target=\"_blank\" rel=\"noopener\">jsfiddle</a></p>\n<p>  想起之前的新闻，乐视与优酷之间的因为盗链引发的官司，优酷状告乐视盗链，我看了下两家的网站都没有启用这个选项，不知道为什么，可能是为了分享视频方便？我觉得应该不是这个问题。<br>  去看了一下youtube的视频外链处理方式，首先播放页面是不允许盗链的，设置了X-Frame-Options同源可以引入。外站要引入视频是 “<a href=\"https://www.youtube.com/embed/0nhrzAUeOVo&quot;\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/embed/0nhrzAUeOVo&quot;</a> 这种格式的，有上下文/embed/,这个网址的X-Frame-Options没有设置，可以在任何网站嵌入。</p>\n<p>  所以说吧有些问题可能就不是单纯的从技术角度可以考虑或者理解的了，我真的不信优酷、乐视等网站不懂这些东西，可能有别的原因。</p>\n<p>  另外就是有了X-Frame-Options就能解决盗链问题了？</p>\n<p>  找到了chrome extension的一个工具可以解决这个不准盗链的问题，这个扩展直接把返回的请求头里面的X-Frame-options给移除了，哈哈哈，不过这个是利用工具了，也就是浏览器行为了，不是网站可以处理的。</p>\n<p>  忘了写Nginx如何添加X-Frame-Options支持了，在server里：add_header X-Frame-Options “SAMEORIGIN”;<br>  其他的Apache IIS等在 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options\" target=\"_blank\" rel=\"noopener\">MDN网址</a> 上有相关说明。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>  这几天在阅读HTTP相关的书籍，先从简单的入手，先看别人推荐的《图解HTTP》。</p>\n<p>  看到HTTP首部的讲解，看到了一个首部名为X-Frame-Options，这个字段是响应首部字段，也就是说是在我们浏览器调试中显示的response headers里面显示的。</p>\n<p>  那么这个首部字段是做什么的呢?定义就不展示了直接贴上MDN的定义：</p>\n<blockquote>\n<p>X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在frame,iframe或者object 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。</p>\n</blockquote>\n<blockquote>\n<p>X-Frame-Options 有三个值:<br>  DENY<br>  表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。<br>  SAMEORIGIN<br>  表示该页面可以在相同域名页面的 frame 中展示。<br>  ALLOW-FROM uri<br>  表示该页面可以在指定来源的 frame 中展示。  </p>\n</blockquote>\n<p>  这个说的更直白一点就是可以防止直接盗链，大家可以找相关的网址测试。</p>\n<p>  如果不设置X-Frame-Options这个字段，默认的情况就是这个网站可以被frame引用，也就是可以被连接嵌入，这样就产生了盗链问题。</p>\n<p>  以下面的例子展示一下：（用了百度跟Google，嘿嘿）</p>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.baidu.com\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.google.com\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"200px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>  代码运行<a href=\"https://jsfiddle.net/dazhizhemu/1z8cd9mg/\" target=\"_blank\" rel=\"noopener\">jsfiddle</a></p>\n<p>  想起之前的新闻，乐视与优酷之间的因为盗链引发的官司，优酷状告乐视盗链，我看了下两家的网站都没有启用这个选项，不知道为什么，可能是为了分享视频方便？我觉得应该不是这个问题。<br>  去看了一下youtube的视频外链处理方式，首先播放页面是不允许盗链的，设置了X-Frame-Options同源可以引入。外站要引入视频是 “<a href=\"https://www.youtube.com/embed/0nhrzAUeOVo&quot;\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/embed/0nhrzAUeOVo&quot;</a> 这种格式的，有上下文/embed/,这个网址的X-Frame-Options没有设置，可以在任何网站嵌入。</p>\n<p>  所以说吧有些问题可能就不是单纯的从技术角度可以考虑或者理解的了，我真的不信优酷、乐视等网站不懂这些东西，可能有别的原因。</p>\n<p>  另外就是有了X-Frame-Options就能解决盗链问题了？</p>\n<p>  找到了chrome extension的一个工具可以解决这个不准盗链的问题，这个扩展直接把返回的请求头里面的X-Frame-options给移除了，哈哈哈，不过这个是利用工具了，也就是浏览器行为了，不是网站可以处理的。</p>\n<p>  忘了写Nginx如何添加X-Frame-Options支持了，在server里：add_header X-Frame-Options “SAMEORIGIN”;<br>  其他的Apache IIS等在 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options\" target=\"_blank\" rel=\"noopener\">MDN网址</a> 上有相关说明。</p>\n"},{"title":"MIUI解除ROOT授权25秒等待的方法","date":"2017-04-17T02:37:49.000Z","_content":"用MIUI需要root权限的软件，第一次申请root权限时需要等待25秒，用下面这个工具可以去掉25秒的等待时间，那就是“MIUI助手”。\n\n软件下载链接：**[MIUI助手](http://m.coolapk.com/apk/com.kdfly.miuihelper)**\n\n下载下软件后打开按照提示就能解决问题了。\n![](/images/example.png)\n","source":"_posts/MIUI解除ROOT授权25秒等待的方法.md","raw":"---\ntitle: MIUI解除ROOT授权25秒等待的方法\ndate: 2017-04-17 10:37:49\ntags:\n---\n用MIUI需要root权限的软件，第一次申请root权限时需要等待25秒，用下面这个工具可以去掉25秒的等待时间，那就是“MIUI助手”。\n\n软件下载链接：**[MIUI助手](http://m.coolapk.com/apk/com.kdfly.miuihelper)**\n\n下载下软件后打开按照提示就能解决问题了。\n![](/images/example.png)\n","slug":"MIUI解除ROOT授权25秒等待的方法","published":1,"updated":"2017-11-15T07:02:57.835Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2v000bm4sm9zvv5p4z","content":"<p>用MIUI需要root权限的软件，第一次申请root权限时需要等待25秒，用下面这个工具可以去掉25秒的等待时间，那就是“MIUI助手”。</p>\n<p>软件下载链接：<strong><a href=\"http://m.coolapk.com/apk/com.kdfly.miuihelper\" target=\"_blank\" rel=\"noopener\">MIUI助手</a></strong></p>\n<p>下载下软件后打开按照提示就能解决问题了。<br><img src=\"/images/example.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>用MIUI需要root权限的软件，第一次申请root权限时需要等待25秒，用下面这个工具可以去掉25秒的等待时间，那就是“MIUI助手”。</p>\n<p>软件下载链接：<strong><a href=\"http://m.coolapk.com/apk/com.kdfly.miuihelper\" target=\"_blank\" rel=\"noopener\">MIUI助手</a></strong></p>\n<p>下载下软件后打开按照提示就能解决问题了。<br><img src=\"/images/example.png\" alt=\"\"></p>\n"},{"title":"chrome扩展推荐（2017/05/26更新）","date":"2017-05-26T03:20:15.000Z","_content":"\n本文记录所有自己喜欢的chrome扩展，会不断更新。\n\n因为本人是开发狗，所以会有很一些开发相关的插件，如不需要直接略过。\n\n对于想看插件源码的开发人员，相关的项目如果有github地址，就附上github项目地址了。\n\n## 非开发类：\n\n***\n\n### 简体繁体转换工具    [新同文堂](https://chrome.google.com/webstore/detail/new-tong-wen-tang/ldmgbgaoglmaiblpnphffibpbfchjaeg)\n\n这个是一款chrome插件，用来进行简体繁体转换的工具： [Github项目地址](https://github.com/softcup/New-Tongwentang-for-Chrome)\n\nGithub上没有readme，哈哈，就是一款简繁体转换工具，支持直接网页转换，对于动态加载的数据可以使用右键菜单进行转换。\n\n可以设置通用转换规则，也可以自订转换规则，对于特殊的网站进行特殊转换，还可以自己设置转换词汇。\n\n繁体网站转换前：\n![繁体网站转换前](/images/chrome-extension-suggest/tongwen0.PNG)\n繁体网站转换后：\n![繁体网站转换后](/images/chrome-extension-suggest/tongwen1.PNG)\n\n扩展设置图\n![设置界面](/images/chrome-extension-suggest/tongwen3.PNG)\n\n***\n\n### 代理设置扩展    [Proxy SwitchyOmega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif)\n\n这个是扶墙必备啊，在chrome上特别好用，当然还有类似的其他应用，不在这里推荐了，只推荐这一款。\n**这里要明确 一点就是，这个扩展本身不是扶墙工具，只是能够让你的浏览器通过代理扶墙，所以还是要有自己的扶墙通道的，否则不能用**\n\n扩展支持多种模式的代理，支持常见的HTTP HTTPS SOCKS4 SOCKS5等协议。\n[Github项目地址](https://github.com/FelisCatus/SwitchyOmega)\n\n看下图片：\n![设置界面](/images/chrome-extension-suggest/omega0.PNG)\n![设置界面](/images/chrome-extension-suggest/omega1.PNG)\n![设置界面](/images/chrome-extension-suggest/omega2.PNG)\n![设置界面](/images/chrome-extension-suggest/omega3.PNG)\n\n***\n\n### chrome经典蓝色主题    [Default Blue Theme](https://chrome.google.com/webstore/detail/default-blue-theme/fiofpkllbibbpfigiafejadpekddaoic)\n\n这个就比较简单了，就是原来windows xp系统上的chrome展示样子。\n\n[Github项目地址](https://github.com/wuzhizhe/ChromeClassicBlueTheme)\n\n效果展示：\n![设置界面](/images/chrome-extension-suggest/bluethme.PNG)\n\n***\n\n### 扩展管理工具 [SimpleExtManager](https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk)\n\n为什么推荐这个扩展管理工具呢？如果你有非常多的扩展，用肉眼已经无法一眼或者很快就找到的时候就只能靠搜索功能了，目前其他的扩展管理工具，什么一键扩展管理等都是没有搜索功能的（我之前用的时候没有，可能现在有了），所以就推荐它了，如果你与我这种情况类似，一大堆扩展想启用的时候找不到，这个工具绝对满足你的需求。\n\n![展示界面](/images/chrome-extension-suggest/simpleextmanager.png)\n\n\n***\n\n### [listen1音乐](http://listen1.github.io/listen1/)\n\n这个是一个听歌的软件，不光支持chrome扩展，但是它有chrome扩展，所以也就在这推荐了。\n\n它可以搜索网易、QQ、虾米音乐的歌曲。\n![展示界面](http://i.imgur.com/Ae6ItmA.png)\n\n***\n\n### 剪贴板历史纪录  [Clipboard History 2](https://chrome.google.com/webstore/detail/clipboard-history-2/ajiejmhbejpdgkkigpddefnjmgcbkenk)\n\n有过刚刚剪贴的内容找不到的这种痛苦吗？现在有办法解决了，找一个可以记录剪贴板历史纪录的工具，记录你的剪贴内容。\n\n展示界面：\n可以选择要处理的记录，导出成数据，也可以删除，可以加喜欢标签。\n![展示界面](/images/chrome-extension-suggest/clipboard.png)\n\n设置界面, 在设置界面可以设置以下几项：\n\nA. 超时，如果剪贴记录已经超过多少（分钟/小时/天/周/月），就删除记录。\n\nB. 最大存储量，最多存储多少条数据。\n\nC. 超过多少字符的剪贴内容不要保存。\n\n还有其他的一些简单设置，**以上三条建议一定设置并开启**，否则数据量过大过多没有多大的意义，并且占用内存。\n\n![设置界面](/images/chrome-extension-suggest/clipboardsetting.png)\n\n\n## 开发类扩展：\n\n### ","source":"_posts/chrome扩展推荐.md","raw":"---\ntitle: chrome扩展推荐（2017/05/26更新）\ndate: 2017-05-26 11:20:15\ntags:\n- chrome\n- chrome extension\n- github\n---\n\n本文记录所有自己喜欢的chrome扩展，会不断更新。\n\n因为本人是开发狗，所以会有很一些开发相关的插件，如不需要直接略过。\n\n对于想看插件源码的开发人员，相关的项目如果有github地址，就附上github项目地址了。\n\n## 非开发类：\n\n***\n\n### 简体繁体转换工具    [新同文堂](https://chrome.google.com/webstore/detail/new-tong-wen-tang/ldmgbgaoglmaiblpnphffibpbfchjaeg)\n\n这个是一款chrome插件，用来进行简体繁体转换的工具： [Github项目地址](https://github.com/softcup/New-Tongwentang-for-Chrome)\n\nGithub上没有readme，哈哈，就是一款简繁体转换工具，支持直接网页转换，对于动态加载的数据可以使用右键菜单进行转换。\n\n可以设置通用转换规则，也可以自订转换规则，对于特殊的网站进行特殊转换，还可以自己设置转换词汇。\n\n繁体网站转换前：\n![繁体网站转换前](/images/chrome-extension-suggest/tongwen0.PNG)\n繁体网站转换后：\n![繁体网站转换后](/images/chrome-extension-suggest/tongwen1.PNG)\n\n扩展设置图\n![设置界面](/images/chrome-extension-suggest/tongwen3.PNG)\n\n***\n\n### 代理设置扩展    [Proxy SwitchyOmega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif)\n\n这个是扶墙必备啊，在chrome上特别好用，当然还有类似的其他应用，不在这里推荐了，只推荐这一款。\n**这里要明确 一点就是，这个扩展本身不是扶墙工具，只是能够让你的浏览器通过代理扶墙，所以还是要有自己的扶墙通道的，否则不能用**\n\n扩展支持多种模式的代理，支持常见的HTTP HTTPS SOCKS4 SOCKS5等协议。\n[Github项目地址](https://github.com/FelisCatus/SwitchyOmega)\n\n看下图片：\n![设置界面](/images/chrome-extension-suggest/omega0.PNG)\n![设置界面](/images/chrome-extension-suggest/omega1.PNG)\n![设置界面](/images/chrome-extension-suggest/omega2.PNG)\n![设置界面](/images/chrome-extension-suggest/omega3.PNG)\n\n***\n\n### chrome经典蓝色主题    [Default Blue Theme](https://chrome.google.com/webstore/detail/default-blue-theme/fiofpkllbibbpfigiafejadpekddaoic)\n\n这个就比较简单了，就是原来windows xp系统上的chrome展示样子。\n\n[Github项目地址](https://github.com/wuzhizhe/ChromeClassicBlueTheme)\n\n效果展示：\n![设置界面](/images/chrome-extension-suggest/bluethme.PNG)\n\n***\n\n### 扩展管理工具 [SimpleExtManager](https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk)\n\n为什么推荐这个扩展管理工具呢？如果你有非常多的扩展，用肉眼已经无法一眼或者很快就找到的时候就只能靠搜索功能了，目前其他的扩展管理工具，什么一键扩展管理等都是没有搜索功能的（我之前用的时候没有，可能现在有了），所以就推荐它了，如果你与我这种情况类似，一大堆扩展想启用的时候找不到，这个工具绝对满足你的需求。\n\n![展示界面](/images/chrome-extension-suggest/simpleextmanager.png)\n\n\n***\n\n### [listen1音乐](http://listen1.github.io/listen1/)\n\n这个是一个听歌的软件，不光支持chrome扩展，但是它有chrome扩展，所以也就在这推荐了。\n\n它可以搜索网易、QQ、虾米音乐的歌曲。\n![展示界面](http://i.imgur.com/Ae6ItmA.png)\n\n***\n\n### 剪贴板历史纪录  [Clipboard History 2](https://chrome.google.com/webstore/detail/clipboard-history-2/ajiejmhbejpdgkkigpddefnjmgcbkenk)\n\n有过刚刚剪贴的内容找不到的这种痛苦吗？现在有办法解决了，找一个可以记录剪贴板历史纪录的工具，记录你的剪贴内容。\n\n展示界面：\n可以选择要处理的记录，导出成数据，也可以删除，可以加喜欢标签。\n![展示界面](/images/chrome-extension-suggest/clipboard.png)\n\n设置界面, 在设置界面可以设置以下几项：\n\nA. 超时，如果剪贴记录已经超过多少（分钟/小时/天/周/月），就删除记录。\n\nB. 最大存储量，最多存储多少条数据。\n\nC. 超过多少字符的剪贴内容不要保存。\n\n还有其他的一些简单设置，**以上三条建议一定设置并开启**，否则数据量过大过多没有多大的意义，并且占用内存。\n\n![设置界面](/images/chrome-extension-suggest/clipboardsetting.png)\n\n\n## 开发类扩展：\n\n### ","slug":"chrome扩展推荐","published":1,"updated":"2017-06-15T06:02:54.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2v000cm4sm64a4gv42","content":"<p>本文记录所有自己喜欢的chrome扩展，会不断更新。</p>\n<p>因为本人是开发狗，所以会有很一些开发相关的插件，如不需要直接略过。</p>\n<p>对于想看插件源码的开发人员，相关的项目如果有github地址，就附上github项目地址了。</p>\n<h2 id=\"非开发类：\"><a href=\"#非开发类：\" class=\"headerlink\" title=\"非开发类：\"></a>非开发类：</h2><hr>\n<h3 id=\"简体繁体转换工具-新同文堂\"><a href=\"#简体繁体转换工具-新同文堂\" class=\"headerlink\" title=\"简体繁体转换工具    新同文堂\"></a>简体繁体转换工具    <a href=\"https://chrome.google.com/webstore/detail/new-tong-wen-tang/ldmgbgaoglmaiblpnphffibpbfchjaeg\" target=\"_blank\" rel=\"noopener\">新同文堂</a></h3><p>这个是一款chrome插件，用来进行简体繁体转换的工具： <a href=\"https://github.com/softcup/New-Tongwentang-for-Chrome\" target=\"_blank\" rel=\"noopener\">Github项目地址</a></p>\n<p>Github上没有readme，哈哈，就是一款简繁体转换工具，支持直接网页转换，对于动态加载的数据可以使用右键菜单进行转换。</p>\n<p>可以设置通用转换规则，也可以自订转换规则，对于特殊的网站进行特殊转换，还可以自己设置转换词汇。</p>\n<p>繁体网站转换前：<br><img src=\"/images/chrome-extension-suggest/tongwen0.PNG\" alt=\"繁体网站转换前\"><br>繁体网站转换后：<br><img src=\"/images/chrome-extension-suggest/tongwen1.PNG\" alt=\"繁体网站转换后\"></p>\n<p>扩展设置图<br><img src=\"/images/chrome-extension-suggest/tongwen3.PNG\" alt=\"设置界面\"></p>\n<hr>\n<h3 id=\"代理设置扩展-Proxy-SwitchyOmega\"><a href=\"#代理设置扩展-Proxy-SwitchyOmega\" class=\"headerlink\" title=\"代理设置扩展    Proxy SwitchyOmega\"></a>代理设置扩展    <a href=\"https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif\" target=\"_blank\" rel=\"noopener\">Proxy SwitchyOmega</a></h3><p>这个是扶墙必备啊，在chrome上特别好用，当然还有类似的其他应用，不在这里推荐了，只推荐这一款。<br><strong>这里要明确 一点就是，这个扩展本身不是扶墙工具，只是能够让你的浏览器通过代理扶墙，所以还是要有自己的扶墙通道的，否则不能用</strong></p>\n<p>扩展支持多种模式的代理，支持常见的HTTP HTTPS SOCKS4 SOCKS5等协议。<br><a href=\"https://github.com/FelisCatus/SwitchyOmega\" target=\"_blank\" rel=\"noopener\">Github项目地址</a></p>\n<p>看下图片：<br><img src=\"/images/chrome-extension-suggest/omega0.PNG\" alt=\"设置界面\"><br><img src=\"/images/chrome-extension-suggest/omega1.PNG\" alt=\"设置界面\"><br><img src=\"/images/chrome-extension-suggest/omega2.PNG\" alt=\"设置界面\"><br><img src=\"/images/chrome-extension-suggest/omega3.PNG\" alt=\"设置界面\"></p>\n<hr>\n<h3 id=\"chrome经典蓝色主题-Default-Blue-Theme\"><a href=\"#chrome经典蓝色主题-Default-Blue-Theme\" class=\"headerlink\" title=\"chrome经典蓝色主题    Default Blue Theme\"></a>chrome经典蓝色主题    <a href=\"https://chrome.google.com/webstore/detail/default-blue-theme/fiofpkllbibbpfigiafejadpekddaoic\" target=\"_blank\" rel=\"noopener\">Default Blue Theme</a></h3><p>这个就比较简单了，就是原来windows xp系统上的chrome展示样子。</p>\n<p><a href=\"https://github.com/wuzhizhe/ChromeClassicBlueTheme\" target=\"_blank\" rel=\"noopener\">Github项目地址</a></p>\n<p>效果展示：<br><img src=\"/images/chrome-extension-suggest/bluethme.PNG\" alt=\"设置界面\"></p>\n<hr>\n<h3 id=\"扩展管理工具-SimpleExtManager\"><a href=\"#扩展管理工具-SimpleExtManager\" class=\"headerlink\" title=\"扩展管理工具 SimpleExtManager\"></a>扩展管理工具 <a href=\"https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk\" target=\"_blank\" rel=\"noopener\">SimpleExtManager</a></h3><p>为什么推荐这个扩展管理工具呢？如果你有非常多的扩展，用肉眼已经无法一眼或者很快就找到的时候就只能靠搜索功能了，目前其他的扩展管理工具，什么一键扩展管理等都是没有搜索功能的（我之前用的时候没有，可能现在有了），所以就推荐它了，如果你与我这种情况类似，一大堆扩展想启用的时候找不到，这个工具绝对满足你的需求。</p>\n<p><img src=\"/images/chrome-extension-suggest/simpleextmanager.png\" alt=\"展示界面\"></p>\n<hr>\n<h3 id=\"listen1音乐\"><a href=\"#listen1音乐\" class=\"headerlink\" title=\"listen1音乐\"></a><a href=\"http://listen1.github.io/listen1/\" target=\"_blank\" rel=\"noopener\">listen1音乐</a></h3><p>这个是一个听歌的软件，不光支持chrome扩展，但是它有chrome扩展，所以也就在这推荐了。</p>\n<p>它可以搜索网易、QQ、虾米音乐的歌曲。<br><img src=\"http://i.imgur.com/Ae6ItmA.png\" alt=\"展示界面\"></p>\n<hr>\n<h3 id=\"剪贴板历史纪录-Clipboard-History-2\"><a href=\"#剪贴板历史纪录-Clipboard-History-2\" class=\"headerlink\" title=\"剪贴板历史纪录  Clipboard History 2\"></a>剪贴板历史纪录  <a href=\"https://chrome.google.com/webstore/detail/clipboard-history-2/ajiejmhbejpdgkkigpddefnjmgcbkenk\" target=\"_blank\" rel=\"noopener\">Clipboard History 2</a></h3><p>有过刚刚剪贴的内容找不到的这种痛苦吗？现在有办法解决了，找一个可以记录剪贴板历史纪录的工具，记录你的剪贴内容。</p>\n<p>展示界面：<br>可以选择要处理的记录，导出成数据，也可以删除，可以加喜欢标签。<br><img src=\"/images/chrome-extension-suggest/clipboard.png\" alt=\"展示界面\"></p>\n<p>设置界面, 在设置界面可以设置以下几项：</p>\n<p>A. 超时，如果剪贴记录已经超过多少（分钟/小时/天/周/月），就删除记录。</p>\n<p>B. 最大存储量，最多存储多少条数据。</p>\n<p>C. 超过多少字符的剪贴内容不要保存。</p>\n<p>还有其他的一些简单设置，<strong>以上三条建议一定设置并开启</strong>，否则数据量过大过多没有多大的意义，并且占用内存。</p>\n<p><img src=\"/images/chrome-extension-suggest/clipboardsetting.png\" alt=\"设置界面\"></p>\n<h2 id=\"开发类扩展：\"><a href=\"#开发类扩展：\" class=\"headerlink\" title=\"开发类扩展：\"></a>开发类扩展：</h2><p>### </p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文记录所有自己喜欢的chrome扩展，会不断更新。</p>\n<p>因为本人是开发狗，所以会有很一些开发相关的插件，如不需要直接略过。</p>\n<p>对于想看插件源码的开发人员，相关的项目如果有github地址，就附上github项目地址了。</p>\n<h2 id=\"非开发类：\"><a href=\"#非开发类：\" class=\"headerlink\" title=\"非开发类：\"></a>非开发类：</h2><hr>\n<h3 id=\"简体繁体转换工具-新同文堂\"><a href=\"#简体繁体转换工具-新同文堂\" class=\"headerlink\" title=\"简体繁体转换工具    新同文堂\"></a>简体繁体转换工具    <a href=\"https://chrome.google.com/webstore/detail/new-tong-wen-tang/ldmgbgaoglmaiblpnphffibpbfchjaeg\" target=\"_blank\" rel=\"noopener\">新同文堂</a></h3><p>这个是一款chrome插件，用来进行简体繁体转换的工具： <a href=\"https://github.com/softcup/New-Tongwentang-for-Chrome\" target=\"_blank\" rel=\"noopener\">Github项目地址</a></p>\n<p>Github上没有readme，哈哈，就是一款简繁体转换工具，支持直接网页转换，对于动态加载的数据可以使用右键菜单进行转换。</p>\n<p>可以设置通用转换规则，也可以自订转换规则，对于特殊的网站进行特殊转换，还可以自己设置转换词汇。</p>\n<p>繁体网站转换前：<br><img src=\"/images/chrome-extension-suggest/tongwen0.PNG\" alt=\"繁体网站转换前\"><br>繁体网站转换后：<br><img src=\"/images/chrome-extension-suggest/tongwen1.PNG\" alt=\"繁体网站转换后\"></p>\n<p>扩展设置图<br><img src=\"/images/chrome-extension-suggest/tongwen3.PNG\" alt=\"设置界面\"></p>\n<hr>\n<h3 id=\"代理设置扩展-Proxy-SwitchyOmega\"><a href=\"#代理设置扩展-Proxy-SwitchyOmega\" class=\"headerlink\" title=\"代理设置扩展    Proxy SwitchyOmega\"></a>代理设置扩展    <a href=\"https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif\" target=\"_blank\" rel=\"noopener\">Proxy SwitchyOmega</a></h3><p>这个是扶墙必备啊，在chrome上特别好用，当然还有类似的其他应用，不在这里推荐了，只推荐这一款。<br><strong>这里要明确 一点就是，这个扩展本身不是扶墙工具，只是能够让你的浏览器通过代理扶墙，所以还是要有自己的扶墙通道的，否则不能用</strong></p>\n<p>扩展支持多种模式的代理，支持常见的HTTP HTTPS SOCKS4 SOCKS5等协议。<br><a href=\"https://github.com/FelisCatus/SwitchyOmega\" target=\"_blank\" rel=\"noopener\">Github项目地址</a></p>\n<p>看下图片：<br><img src=\"/images/chrome-extension-suggest/omega0.PNG\" alt=\"设置界面\"><br><img src=\"/images/chrome-extension-suggest/omega1.PNG\" alt=\"设置界面\"><br><img src=\"/images/chrome-extension-suggest/omega2.PNG\" alt=\"设置界面\"><br><img src=\"/images/chrome-extension-suggest/omega3.PNG\" alt=\"设置界面\"></p>\n<hr>\n<h3 id=\"chrome经典蓝色主题-Default-Blue-Theme\"><a href=\"#chrome经典蓝色主题-Default-Blue-Theme\" class=\"headerlink\" title=\"chrome经典蓝色主题    Default Blue Theme\"></a>chrome经典蓝色主题    <a href=\"https://chrome.google.com/webstore/detail/default-blue-theme/fiofpkllbibbpfigiafejadpekddaoic\" target=\"_blank\" rel=\"noopener\">Default Blue Theme</a></h3><p>这个就比较简单了，就是原来windows xp系统上的chrome展示样子。</p>\n<p><a href=\"https://github.com/wuzhizhe/ChromeClassicBlueTheme\" target=\"_blank\" rel=\"noopener\">Github项目地址</a></p>\n<p>效果展示：<br><img src=\"/images/chrome-extension-suggest/bluethme.PNG\" alt=\"设置界面\"></p>\n<hr>\n<h3 id=\"扩展管理工具-SimpleExtManager\"><a href=\"#扩展管理工具-SimpleExtManager\" class=\"headerlink\" title=\"扩展管理工具 SimpleExtManager\"></a>扩展管理工具 <a href=\"https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk\" target=\"_blank\" rel=\"noopener\">SimpleExtManager</a></h3><p>为什么推荐这个扩展管理工具呢？如果你有非常多的扩展，用肉眼已经无法一眼或者很快就找到的时候就只能靠搜索功能了，目前其他的扩展管理工具，什么一键扩展管理等都是没有搜索功能的（我之前用的时候没有，可能现在有了），所以就推荐它了，如果你与我这种情况类似，一大堆扩展想启用的时候找不到，这个工具绝对满足你的需求。</p>\n<p><img src=\"/images/chrome-extension-suggest/simpleextmanager.png\" alt=\"展示界面\"></p>\n<hr>\n<h3 id=\"listen1音乐\"><a href=\"#listen1音乐\" class=\"headerlink\" title=\"listen1音乐\"></a><a href=\"http://listen1.github.io/listen1/\" target=\"_blank\" rel=\"noopener\">listen1音乐</a></h3><p>这个是一个听歌的软件，不光支持chrome扩展，但是它有chrome扩展，所以也就在这推荐了。</p>\n<p>它可以搜索网易、QQ、虾米音乐的歌曲。<br><img src=\"http://i.imgur.com/Ae6ItmA.png\" alt=\"展示界面\"></p>\n<hr>\n<h3 id=\"剪贴板历史纪录-Clipboard-History-2\"><a href=\"#剪贴板历史纪录-Clipboard-History-2\" class=\"headerlink\" title=\"剪贴板历史纪录  Clipboard History 2\"></a>剪贴板历史纪录  <a href=\"https://chrome.google.com/webstore/detail/clipboard-history-2/ajiejmhbejpdgkkigpddefnjmgcbkenk\" target=\"_blank\" rel=\"noopener\">Clipboard History 2</a></h3><p>有过刚刚剪贴的内容找不到的这种痛苦吗？现在有办法解决了，找一个可以记录剪贴板历史纪录的工具，记录你的剪贴内容。</p>\n<p>展示界面：<br>可以选择要处理的记录，导出成数据，也可以删除，可以加喜欢标签。<br><img src=\"/images/chrome-extension-suggest/clipboard.png\" alt=\"展示界面\"></p>\n<p>设置界面, 在设置界面可以设置以下几项：</p>\n<p>A. 超时，如果剪贴记录已经超过多少（分钟/小时/天/周/月），就删除记录。</p>\n<p>B. 最大存储量，最多存储多少条数据。</p>\n<p>C. 超过多少字符的剪贴内容不要保存。</p>\n<p>还有其他的一些简单设置，<strong>以上三条建议一定设置并开启</strong>，否则数据量过大过多没有多大的意义，并且占用内存。</p>\n<p><img src=\"/images/chrome-extension-suggest/clipboardsetting.png\" alt=\"设置界面\"></p>\n<h2 id=\"开发类扩展：\"><a href=\"#开发类扩展：\" class=\"headerlink\" title=\"开发类扩展：\"></a>开发类扩展：</h2><p>### </p>\n"},{"title":"css3-box-sizing","date":"2017-05-15T03:31:07.000Z","_content":"\n## box-sizing\n\n  之前一直没有发现这个东西，今天研究时发现的。原来写css样式时，元素的padding border margin的值在元素中计算元素最终的宽高值是需要再次相加的，因此如果想要元素总高度不变的话，需要设置border padding的时候需要重新设置里面元素的高度，这个是个很苦恼的事情，用css检测工具检测的时候经常会提醒这样写代码会导致元素宽高不受控制表现。\n\n  但是现在有了box-sizing可以完美解决这个问题。\n\n  目前的box-sizing有以下两个主要属性：\n\n### box-sizing: content-box\n\n  这个属性与之前不设置时是一样的，就是宽度高度只包括内容，不包括margin padding border等值。\n\n### box-sizing: border-box\n\n  border-box值就是一个比较神奇的东西了，在盒子模型里，你如果使用了box-sizing:boder-box;那么所有的这些属性加起来的值才是最终设置的值。\n  >width = border + padding + width of the content;\n  height = border + padding + height of the content;\n\n## 实战展示\n\n具体的效果以及代码见下面：\n\n灰色部分是使用了border-box属性的div,而蓝紫色部分是使用了content-box属性的div，上面的两个50% div能完美的包含在父元素中，而下面的div因为border padding等属性成为两行。\n\n以下展示具体代码运行示例见: [Jsfiddle box-sizing](https://jsfiddle.net/dazhizhemu/4qhnyq95/)\n\n![使用box-sizing](/images/box-sizing/box-sizing.png)\n\n具体代码：\n\n```html\n\n<!DOCTYPE html> \n<html> \n<head> \n<style> \n* {\n    font-size: 16px;\n}\ndiv.border-box-container {\n    height: 5em;\n    width: 30em;\n    border: 1em solid red;\n}\ndiv.content-box-container {\n    margin-top: 1.2em;\n    height: 5em;\n    width: 30em;\n    border: 1em solid red;\n}\ndiv.border-box-container  div.box { \n    box-sizing:border-box;\n    -moz-box-sizing:border-box; \n    -webkit-box-sizing:border-box;\n    width:50%; \n    height: 100%;\n    border:0.8em solid gray; \n    text-align: center;\n    float:left;\n    display: flex;\n    align-items: center;\n    justify-content: center; \n}\ndiv.content-box-container div.box {\n    box-sizing:content-box;\n    -moz-box-sizing:content-box; \n    -webkit-box-sizing:content-box;\n    width:50%; \n    height: 100%;\n    border:0.8em solid #8181d2; \n    text-align: center;\n    float:left; \n}\n\n</style> \n</head> \n<body> \n    <div class=\"border-box-container\">\n      <div class=\"box\">这个 div 占据左半部分。</div> \n      <div class=\"box\">这个 div 占据右半部分。</div> \n    </div>\n    <div class=\"content-box-container\">\n      <div class=\"box\">这个 div 占据左半部分。</div> \n      <div class=\"box\">这个 div 占据右半部分。</div> \n    </div>\n</body> \n</html>\n\n```\n","source":"_posts/css3-box-sizing.md","raw":"---\ntitle: css3-box-sizing\ndate: 2017-05-15 11:31:07\ntags:\n- css3\n- box-sizing\n- 盒子模型\n---\n\n## box-sizing\n\n  之前一直没有发现这个东西，今天研究时发现的。原来写css样式时，元素的padding border margin的值在元素中计算元素最终的宽高值是需要再次相加的，因此如果想要元素总高度不变的话，需要设置border padding的时候需要重新设置里面元素的高度，这个是个很苦恼的事情，用css检测工具检测的时候经常会提醒这样写代码会导致元素宽高不受控制表现。\n\n  但是现在有了box-sizing可以完美解决这个问题。\n\n  目前的box-sizing有以下两个主要属性：\n\n### box-sizing: content-box\n\n  这个属性与之前不设置时是一样的，就是宽度高度只包括内容，不包括margin padding border等值。\n\n### box-sizing: border-box\n\n  border-box值就是一个比较神奇的东西了，在盒子模型里，你如果使用了box-sizing:boder-box;那么所有的这些属性加起来的值才是最终设置的值。\n  >width = border + padding + width of the content;\n  height = border + padding + height of the content;\n\n## 实战展示\n\n具体的效果以及代码见下面：\n\n灰色部分是使用了border-box属性的div,而蓝紫色部分是使用了content-box属性的div，上面的两个50% div能完美的包含在父元素中，而下面的div因为border padding等属性成为两行。\n\n以下展示具体代码运行示例见: [Jsfiddle box-sizing](https://jsfiddle.net/dazhizhemu/4qhnyq95/)\n\n![使用box-sizing](/images/box-sizing/box-sizing.png)\n\n具体代码：\n\n```html\n\n<!DOCTYPE html> \n<html> \n<head> \n<style> \n* {\n    font-size: 16px;\n}\ndiv.border-box-container {\n    height: 5em;\n    width: 30em;\n    border: 1em solid red;\n}\ndiv.content-box-container {\n    margin-top: 1.2em;\n    height: 5em;\n    width: 30em;\n    border: 1em solid red;\n}\ndiv.border-box-container  div.box { \n    box-sizing:border-box;\n    -moz-box-sizing:border-box; \n    -webkit-box-sizing:border-box;\n    width:50%; \n    height: 100%;\n    border:0.8em solid gray; \n    text-align: center;\n    float:left;\n    display: flex;\n    align-items: center;\n    justify-content: center; \n}\ndiv.content-box-container div.box {\n    box-sizing:content-box;\n    -moz-box-sizing:content-box; \n    -webkit-box-sizing:content-box;\n    width:50%; \n    height: 100%;\n    border:0.8em solid #8181d2; \n    text-align: center;\n    float:left; \n}\n\n</style> \n</head> \n<body> \n    <div class=\"border-box-container\">\n      <div class=\"box\">这个 div 占据左半部分。</div> \n      <div class=\"box\">这个 div 占据右半部分。</div> \n    </div>\n    <div class=\"content-box-container\">\n      <div class=\"box\">这个 div 占据左半部分。</div> \n      <div class=\"box\">这个 div 占据右半部分。</div> \n    </div>\n</body> \n</html>\n\n```\n","slug":"css3-box-sizing","published":1,"updated":"2017-05-15T05:06:08.790Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl2v000em4smilkoej6e","content":"<h2 id=\"box-sizing\"><a href=\"#box-sizing\" class=\"headerlink\" title=\"box-sizing\"></a>box-sizing</h2><p>  之前一直没有发现这个东西，今天研究时发现的。原来写css样式时，元素的padding border margin的值在元素中计算元素最终的宽高值是需要再次相加的，因此如果想要元素总高度不变的话，需要设置border padding的时候需要重新设置里面元素的高度，这个是个很苦恼的事情，用css检测工具检测的时候经常会提醒这样写代码会导致元素宽高不受控制表现。</p>\n<p>  但是现在有了box-sizing可以完美解决这个问题。</p>\n<p>  目前的box-sizing有以下两个主要属性：</p>\n<h3 id=\"box-sizing-content-box\"><a href=\"#box-sizing-content-box\" class=\"headerlink\" title=\"box-sizing: content-box\"></a>box-sizing: content-box</h3><p>  这个属性与之前不设置时是一样的，就是宽度高度只包括内容，不包括margin padding border等值。</p>\n<h3 id=\"box-sizing-border-box\"><a href=\"#box-sizing-border-box\" class=\"headerlink\" title=\"box-sizing: border-box\"></a>box-sizing: border-box</h3><p>  border-box值就是一个比较神奇的东西了，在盒子模型里，你如果使用了box-sizing:boder-box;那么所有的这些属性加起来的值才是最终设置的值。</p>\n<blockquote>\n<p>width = border + padding + width of the content;<br>  height = border + padding + height of the content;</p>\n</blockquote>\n<h2 id=\"实战展示\"><a href=\"#实战展示\" class=\"headerlink\" title=\"实战展示\"></a>实战展示</h2><p>具体的效果以及代码见下面：</p>\n<p>灰色部分是使用了border-box属性的div,而蓝紫色部分是使用了content-box属性的div，上面的两个50% div能完美的包含在父元素中，而下面的div因为border padding等属性成为两行。</p>\n<p>以下展示具体代码运行示例见: <a href=\"https://jsfiddle.net/dazhizhemu/4qhnyq95/\" target=\"_blank\" rel=\"noopener\">Jsfiddle box-sizing</a></p>\n<p><img src=\"/images/box-sizing/box-sizing.png\" alt=\"使用box-sizing\"></p>\n<p>具体代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"undefined\">* &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    font-size: 16px;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">div.border-box-container &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    height: 5em;</span></span><br><span class=\"line\"><span class=\"undefined\">    width: 30em;</span></span><br><span class=\"line\"><span class=\"undefined\">    border: 1em solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">div.content-box-container &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-top: 1.2em;</span></span><br><span class=\"line\"><span class=\"undefined\">    height: 5em;</span></span><br><span class=\"line\"><span class=\"undefined\">    width: 30em;</span></span><br><span class=\"line\"><span class=\"undefined\">    border: 1em solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">div.border-box-container  div.box &#123; </span></span><br><span class=\"line\"><span class=\"undefined\">    box-sizing:border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">    -moz-box-sizing:border-box; </span></span><br><span class=\"line\"><span class=\"undefined\">    -webkit-box-sizing:border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">    width:50%; </span></span><br><span class=\"line\"><span class=\"undefined\">    height: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">    border:0.8em solid gray; </span></span><br><span class=\"line\"><span class=\"undefined\">    text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">    float:left;</span></span><br><span class=\"line\"><span class=\"undefined\">    display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">    align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">    justify-content: center; </span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">div.content-box-container div.box &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    box-sizing:content-box;</span></span><br><span class=\"line\"><span class=\"undefined\">    -moz-box-sizing:content-box; </span></span><br><span class=\"line\"><span class=\"undefined\">    -webkit-box-sizing:content-box;</span></span><br><span class=\"line\"><span class=\"undefined\">    width:50%; </span></span><br><span class=\"line\"><span class=\"undefined\">    height: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">    border:0.8em solid #8181d2; </span></span><br><span class=\"line\"><span class=\"undefined\">    text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">    float:left; </span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"border-box-container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>这个 div 占据左半部分。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>这个 div 占据右半部分。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-box-container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>这个 div 占据左半部分。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>这个 div 占据右半部分。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"box-sizing\"><a href=\"#box-sizing\" class=\"headerlink\" title=\"box-sizing\"></a>box-sizing</h2><p>  之前一直没有发现这个东西，今天研究时发现的。原来写css样式时，元素的padding border margin的值在元素中计算元素最终的宽高值是需要再次相加的，因此如果想要元素总高度不变的话，需要设置border padding的时候需要重新设置里面元素的高度，这个是个很苦恼的事情，用css检测工具检测的时候经常会提醒这样写代码会导致元素宽高不受控制表现。</p>\n<p>  但是现在有了box-sizing可以完美解决这个问题。</p>\n<p>  目前的box-sizing有以下两个主要属性：</p>\n<h3 id=\"box-sizing-content-box\"><a href=\"#box-sizing-content-box\" class=\"headerlink\" title=\"box-sizing: content-box\"></a>box-sizing: content-box</h3><p>  这个属性与之前不设置时是一样的，就是宽度高度只包括内容，不包括margin padding border等值。</p>\n<h3 id=\"box-sizing-border-box\"><a href=\"#box-sizing-border-box\" class=\"headerlink\" title=\"box-sizing: border-box\"></a>box-sizing: border-box</h3><p>  border-box值就是一个比较神奇的东西了，在盒子模型里，你如果使用了box-sizing:boder-box;那么所有的这些属性加起来的值才是最终设置的值。</p>\n<blockquote>\n<p>width = border + padding + width of the content;<br>  height = border + padding + height of the content;</p>\n</blockquote>\n<h2 id=\"实战展示\"><a href=\"#实战展示\" class=\"headerlink\" title=\"实战展示\"></a>实战展示</h2><p>具体的效果以及代码见下面：</p>\n<p>灰色部分是使用了border-box属性的div,而蓝紫色部分是使用了content-box属性的div，上面的两个50% div能完美的包含在父元素中，而下面的div因为border padding等属性成为两行。</p>\n<p>以下展示具体代码运行示例见: <a href=\"https://jsfiddle.net/dazhizhemu/4qhnyq95/\" target=\"_blank\" rel=\"noopener\">Jsfiddle box-sizing</a></p>\n<p><img src=\"/images/box-sizing/box-sizing.png\" alt=\"使用box-sizing\"></p>\n<p>具体代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"undefined\">* &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    font-size: 16px;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">div.border-box-container &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    height: 5em;</span></span><br><span class=\"line\"><span class=\"undefined\">    width: 30em;</span></span><br><span class=\"line\"><span class=\"undefined\">    border: 1em solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">div.content-box-container &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-top: 1.2em;</span></span><br><span class=\"line\"><span class=\"undefined\">    height: 5em;</span></span><br><span class=\"line\"><span class=\"undefined\">    width: 30em;</span></span><br><span class=\"line\"><span class=\"undefined\">    border: 1em solid red;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">div.border-box-container  div.box &#123; </span></span><br><span class=\"line\"><span class=\"undefined\">    box-sizing:border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">    -moz-box-sizing:border-box; </span></span><br><span class=\"line\"><span class=\"undefined\">    -webkit-box-sizing:border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">    width:50%; </span></span><br><span class=\"line\"><span class=\"undefined\">    height: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">    border:0.8em solid gray; </span></span><br><span class=\"line\"><span class=\"undefined\">    text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">    float:left;</span></span><br><span class=\"line\"><span class=\"undefined\">    display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">    align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">    justify-content: center; </span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">div.content-box-container div.box &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    box-sizing:content-box;</span></span><br><span class=\"line\"><span class=\"undefined\">    -moz-box-sizing:content-box; </span></span><br><span class=\"line\"><span class=\"undefined\">    -webkit-box-sizing:content-box;</span></span><br><span class=\"line\"><span class=\"undefined\">    width:50%; </span></span><br><span class=\"line\"><span class=\"undefined\">    height: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">    border:0.8em solid #8181d2; </span></span><br><span class=\"line\"><span class=\"undefined\">    text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">    float:left; </span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"border-box-container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>这个 div 占据左半部分。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>这个 div 占据右半部分。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-box-container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>这个 div 占据左半部分。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span>这个 div 占据右半部分。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"chrome经典蓝色主题","date":"2017-04-21T08:54:33.000Z","_content":"### Chrome浏览器在Xp系统上的经典蓝色主题\n\n应用商店地址：[chrome蓝色经典主题](https://chrome.google.com/webstore/detail/default-blue-theme/fiofpkllbibbpfigiafejadpekddaoic)\n\nGithub:[ChromeClassicBlueTheme](https://github.com/wuzhizhe/ChromeClassicBlueTheme)\n\n图片效果:\n\n![](/images/chrome-theme/example.png)","source":"_posts/chrome经典蓝色主题.md","raw":"---\ntitle: chrome经典蓝色主题\ndate: 2017-04-21 16:54:33\ntags:\n- chrome\n- theme\n---\n### Chrome浏览器在Xp系统上的经典蓝色主题\n\n应用商店地址：[chrome蓝色经典主题](https://chrome.google.com/webstore/detail/default-blue-theme/fiofpkllbibbpfigiafejadpekddaoic)\n\nGithub:[ChromeClassicBlueTheme](https://github.com/wuzhizhe/ChromeClassicBlueTheme)\n\n图片效果:\n\n![](/images/chrome-theme/example.png)","slug":"chrome经典蓝色主题","published":1,"updated":"2017-04-21T08:59:29.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000fm4smnuqseadb","content":"<h3 id=\"Chrome浏览器在Xp系统上的经典蓝色主题\"><a href=\"#Chrome浏览器在Xp系统上的经典蓝色主题\" class=\"headerlink\" title=\"Chrome浏览器在Xp系统上的经典蓝色主题\"></a>Chrome浏览器在Xp系统上的经典蓝色主题</h3><p>应用商店地址：<a href=\"https://chrome.google.com/webstore/detail/default-blue-theme/fiofpkllbibbpfigiafejadpekddaoic\" target=\"_blank\" rel=\"noopener\">chrome蓝色经典主题</a></p>\n<p>Github:<a href=\"https://github.com/wuzhizhe/ChromeClassicBlueTheme\" target=\"_blank\" rel=\"noopener\">ChromeClassicBlueTheme</a></p>\n<p>图片效果:</p>\n<p><img src=\"/images/chrome-theme/example.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Chrome浏览器在Xp系统上的经典蓝色主题\"><a href=\"#Chrome浏览器在Xp系统上的经典蓝色主题\" class=\"headerlink\" title=\"Chrome浏览器在Xp系统上的经典蓝色主题\"></a>Chrome浏览器在Xp系统上的经典蓝色主题</h3><p>应用商店地址：<a href=\"https://chrome.google.com/webstore/detail/default-blue-theme/fiofpkllbibbpfigiafejadpekddaoic\" target=\"_blank\" rel=\"noopener\">chrome蓝色经典主题</a></p>\n<p>Github:<a href=\"https://github.com/wuzhizhe/ChromeClassicBlueTheme\" target=\"_blank\" rel=\"noopener\">ChromeClassicBlueTheme</a></p>\n<p>图片效果:</p>\n<p><img src=\"/images/chrome-theme/example.png\" alt=\"\"></p>\n"},{"title":"crontab脚本与环境变量","date":"2017-08-07T03:21:14.000Z","_content":"\n  最近在执行linux script的时候发现原来自己写的脚本可以正常执行，但是放在crontab的时候就不能正常执行了。\n\n  于是查找原因，想起之前学习shell的时候书中说最好把PATH变量设置一下，防止有些因为PATH的问题导致无法执行，但是脚本又没有问题。\n\n  哈哈哈，最终一番查找，终于确定了是PATH问题，要么用绝对路径解决问题，要么设置PATH变量。\n\n  脚本一开始是没有问题的，因为路径全部都是用的绝对路径，但是脚本不断的维护，自己写的脚本把这些规则都忘了，所以出现了脚本更新后还是不好使的问题，何况如果脚本还有其他人维护的话可能的问题就更多了。\n\n  所以还是按照书上要求的给脚本老老实实的加上了PATH变量设置。\n\n  这个事情还是要记录下，很多东西都是以往的人的经验的总结，所以还是要认真的听取的，不应该自己大意，可能一时能记住并遵守，但是时间长了可能就忘了，就好比好脑子不如烂笔头，这个就是经验真的很重要，要重视，可以帮忙避免很多不必要的麻烦。\n\n  关于crontab的一些其他问题这里还有一篇写的不错的文章，做个链接引用过来了，是51的一篇博客。\n\n  [Linux基础：crontab 与 环境变量，以及应该注意的问题](http://skypegnu1.blog.51cto.com/8991766/1428632)","source":"_posts/crontab脚本与环境变量.md","raw":"---\ntitle: crontab脚本与环境变量\ndate: 2017-08-07 11:21:14\ntags:\n- linux\n- 环境变量\n- crobtab\n---\n\n  最近在执行linux script的时候发现原来自己写的脚本可以正常执行，但是放在crontab的时候就不能正常执行了。\n\n  于是查找原因，想起之前学习shell的时候书中说最好把PATH变量设置一下，防止有些因为PATH的问题导致无法执行，但是脚本又没有问题。\n\n  哈哈哈，最终一番查找，终于确定了是PATH问题，要么用绝对路径解决问题，要么设置PATH变量。\n\n  脚本一开始是没有问题的，因为路径全部都是用的绝对路径，但是脚本不断的维护，自己写的脚本把这些规则都忘了，所以出现了脚本更新后还是不好使的问题，何况如果脚本还有其他人维护的话可能的问题就更多了。\n\n  所以还是按照书上要求的给脚本老老实实的加上了PATH变量设置。\n\n  这个事情还是要记录下，很多东西都是以往的人的经验的总结，所以还是要认真的听取的，不应该自己大意，可能一时能记住并遵守，但是时间长了可能就忘了，就好比好脑子不如烂笔头，这个就是经验真的很重要，要重视，可以帮忙避免很多不必要的麻烦。\n\n  关于crontab的一些其他问题这里还有一篇写的不错的文章，做个链接引用过来了，是51的一篇博客。\n\n  [Linux基础：crontab 与 环境变量，以及应该注意的问题](http://skypegnu1.blog.51cto.com/8991766/1428632)","slug":"crontab脚本与环境变量","published":1,"updated":"2017-08-07T03:32:06.642Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000hm4smo2lhojlv","content":"<p>  最近在执行linux script的时候发现原来自己写的脚本可以正常执行，但是放在crontab的时候就不能正常执行了。</p>\n<p>  于是查找原因，想起之前学习shell的时候书中说最好把PATH变量设置一下，防止有些因为PATH的问题导致无法执行，但是脚本又没有问题。</p>\n<p>  哈哈哈，最终一番查找，终于确定了是PATH问题，要么用绝对路径解决问题，要么设置PATH变量。</p>\n<p>  脚本一开始是没有问题的，因为路径全部都是用的绝对路径，但是脚本不断的维护，自己写的脚本把这些规则都忘了，所以出现了脚本更新后还是不好使的问题，何况如果脚本还有其他人维护的话可能的问题就更多了。</p>\n<p>  所以还是按照书上要求的给脚本老老实实的加上了PATH变量设置。</p>\n<p>  这个事情还是要记录下，很多东西都是以往的人的经验的总结，所以还是要认真的听取的，不应该自己大意，可能一时能记住并遵守，但是时间长了可能就忘了，就好比好脑子不如烂笔头，这个就是经验真的很重要，要重视，可以帮忙避免很多不必要的麻烦。</p>\n<p>  关于crontab的一些其他问题这里还有一篇写的不错的文章，做个链接引用过来了，是51的一篇博客。</p>\n<p>  <a href=\"http://skypegnu1.blog.51cto.com/8991766/1428632\" target=\"_blank\" rel=\"noopener\">Linux基础：crontab 与 环境变量，以及应该注意的问题</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>  最近在执行linux script的时候发现原来自己写的脚本可以正常执行，但是放在crontab的时候就不能正常执行了。</p>\n<p>  于是查找原因，想起之前学习shell的时候书中说最好把PATH变量设置一下，防止有些因为PATH的问题导致无法执行，但是脚本又没有问题。</p>\n<p>  哈哈哈，最终一番查找，终于确定了是PATH问题，要么用绝对路径解决问题，要么设置PATH变量。</p>\n<p>  脚本一开始是没有问题的，因为路径全部都是用的绝对路径，但是脚本不断的维护，自己写的脚本把这些规则都忘了，所以出现了脚本更新后还是不好使的问题，何况如果脚本还有其他人维护的话可能的问题就更多了。</p>\n<p>  所以还是按照书上要求的给脚本老老实实的加上了PATH变量设置。</p>\n<p>  这个事情还是要记录下，很多东西都是以往的人的经验的总结，所以还是要认真的听取的，不应该自己大意，可能一时能记住并遵守，但是时间长了可能就忘了，就好比好脑子不如烂笔头，这个就是经验真的很重要，要重视，可以帮忙避免很多不必要的麻烦。</p>\n<p>  关于crontab的一些其他问题这里还有一篇写的不错的文章，做个链接引用过来了，是51的一篇博客。</p>\n<p>  <a href=\"http://skypegnu1.blog.51cto.com/8991766/1428632\" target=\"_blank\" rel=\"noopener\">Linux基础：crontab 与 环境变量，以及应该注意的问题</a></p>\n"},{"title":"windows下强力删除文件工具推荐","date":"2017-10-31T09:08:03.000Z","_content":"\n## 文件无法删除的烦恼\n\n  好久没有遇到这种情况了，今天下载了一个便携软件，免安装，下载下来后试用，发现不好用，于是退出软件，然后删除软件，这个时候恶心的事情发生了，进程占用，无法删除软件，于是只能找工具进行强力删除。\n\n  多吐槽一句，软件官方发布的这种便携软件，不是第三方的人修改的，竟然在退出软件后还存在进程不退出继续占用的问题，要么是别有用心的在后台做什么事情，要么就说明软件开发的时候这些细节处理不好。总之一句话：坑货软件。\n\n## 如何利用工具强制删除被锁定的文件\n\n### 杀死占用进程\n  \n  找到占用文件的进程，杀死进程，然后删除文件。这个是第一想法，因为删除的时候说了，因为某些进程正在使用它所以无法删除，所以第一想到的方法就是找到占用的进程，然后杀死进程，杀死进程后就可以删除了。\n\n  有这样的工具吗？\n\n  答案是：有。\n\n  什么名字呢？\n\n  lockhunter。\n\n  官网[lockhunter.com](http://lockhunter.com/)\n\n  直接去官网下载即可，请不要到国内的那些软件园/下载网站去下载，直接去官网下载。\n\n  安装完成后对着要删除的文件/目录右键，如下图：\n\n  ![001](/images/force-delete-file/lockhunter1.png)\n  \n  右键后点击对应的菜单，可以看到当前正在占用文件/目录的进程文件：\n\n  ![003](/images/force-delete-file/lockhunter2.png)\n\n  对进程文件右键，有对应的操作菜单显示，有三个选项，第一个是unlock占用的进程，我试过这个基本没用，然后就是第二个，杀死占用的进程，这个一般可用，如果不能用也可以试试第三个直接删除占用的进程文件。\n\n  ![002](/images/force-delete-file/lockhunter3.png)\n\n  一般无法删除的文件用这个工具就行了，但是我发现，这个工具也有不可用的时候，于是又找到了另一款更加强力的工具。\n\n### 暴力删除所有要删除的文件\n \n  这个工具是FileASSASSIN，打开工具后，找到你想删除的文件：直接暴力删除。\n\n  个人感觉非常好用。\n\n  官网地址：[FILEASSASSIN](https://www.malwarebytes.com/fileassassin/)\n\n  软件介绍就一句话：Eradicates any type of locked files————彻底删除任何类型的锁定文件。\n\n  软件界面如下图：\n\n  ![002](/images/force-delete-file/lockhunter4.png)","source":"_posts/windows下强力删除文件工具推荐.md","raw":"---\ntitle: windows下强力删除文件工具推荐\ndate: 2017-10-31 17:08:03\ntags:\n- windows\n- 卸载\n- 强制\n---\n\n## 文件无法删除的烦恼\n\n  好久没有遇到这种情况了，今天下载了一个便携软件，免安装，下载下来后试用，发现不好用，于是退出软件，然后删除软件，这个时候恶心的事情发生了，进程占用，无法删除软件，于是只能找工具进行强力删除。\n\n  多吐槽一句，软件官方发布的这种便携软件，不是第三方的人修改的，竟然在退出软件后还存在进程不退出继续占用的问题，要么是别有用心的在后台做什么事情，要么就说明软件开发的时候这些细节处理不好。总之一句话：坑货软件。\n\n## 如何利用工具强制删除被锁定的文件\n\n### 杀死占用进程\n  \n  找到占用文件的进程，杀死进程，然后删除文件。这个是第一想法，因为删除的时候说了，因为某些进程正在使用它所以无法删除，所以第一想到的方法就是找到占用的进程，然后杀死进程，杀死进程后就可以删除了。\n\n  有这样的工具吗？\n\n  答案是：有。\n\n  什么名字呢？\n\n  lockhunter。\n\n  官网[lockhunter.com](http://lockhunter.com/)\n\n  直接去官网下载即可，请不要到国内的那些软件园/下载网站去下载，直接去官网下载。\n\n  安装完成后对着要删除的文件/目录右键，如下图：\n\n  ![001](/images/force-delete-file/lockhunter1.png)\n  \n  右键后点击对应的菜单，可以看到当前正在占用文件/目录的进程文件：\n\n  ![003](/images/force-delete-file/lockhunter2.png)\n\n  对进程文件右键，有对应的操作菜单显示，有三个选项，第一个是unlock占用的进程，我试过这个基本没用，然后就是第二个，杀死占用的进程，这个一般可用，如果不能用也可以试试第三个直接删除占用的进程文件。\n\n  ![002](/images/force-delete-file/lockhunter3.png)\n\n  一般无法删除的文件用这个工具就行了，但是我发现，这个工具也有不可用的时候，于是又找到了另一款更加强力的工具。\n\n### 暴力删除所有要删除的文件\n \n  这个工具是FileASSASSIN，打开工具后，找到你想删除的文件：直接暴力删除。\n\n  个人感觉非常好用。\n\n  官网地址：[FILEASSASSIN](https://www.malwarebytes.com/fileassassin/)\n\n  软件介绍就一句话：Eradicates any type of locked files————彻底删除任何类型的锁定文件。\n\n  软件界面如下图：\n\n  ![002](/images/force-delete-file/lockhunter4.png)","slug":"windows下强力删除文件工具推荐","published":1,"updated":"2017-10-31T09:44:59.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000im4smsz4dp8y6","content":"<h2 id=\"文件无法删除的烦恼\"><a href=\"#文件无法删除的烦恼\" class=\"headerlink\" title=\"文件无法删除的烦恼\"></a>文件无法删除的烦恼</h2><p>  好久没有遇到这种情况了，今天下载了一个便携软件，免安装，下载下来后试用，发现不好用，于是退出软件，然后删除软件，这个时候恶心的事情发生了，进程占用，无法删除软件，于是只能找工具进行强力删除。</p>\n<p>  多吐槽一句，软件官方发布的这种便携软件，不是第三方的人修改的，竟然在退出软件后还存在进程不退出继续占用的问题，要么是别有用心的在后台做什么事情，要么就说明软件开发的时候这些细节处理不好。总之一句话：坑货软件。</p>\n<h2 id=\"如何利用工具强制删除被锁定的文件\"><a href=\"#如何利用工具强制删除被锁定的文件\" class=\"headerlink\" title=\"如何利用工具强制删除被锁定的文件\"></a>如何利用工具强制删除被锁定的文件</h2><h3 id=\"杀死占用进程\"><a href=\"#杀死占用进程\" class=\"headerlink\" title=\"杀死占用进程\"></a>杀死占用进程</h3><p>  找到占用文件的进程，杀死进程，然后删除文件。这个是第一想法，因为删除的时候说了，因为某些进程正在使用它所以无法删除，所以第一想到的方法就是找到占用的进程，然后杀死进程，杀死进程后就可以删除了。</p>\n<p>  有这样的工具吗？</p>\n<p>  答案是：有。</p>\n<p>  什么名字呢？</p>\n<p>  lockhunter。</p>\n<p>  官网<a href=\"http://lockhunter.com/\" target=\"_blank\" rel=\"noopener\">lockhunter.com</a></p>\n<p>  直接去官网下载即可，请不要到国内的那些软件园/下载网站去下载，直接去官网下载。</p>\n<p>  安装完成后对着要删除的文件/目录右键，如下图：</p>\n<p>  <img src=\"/images/force-delete-file/lockhunter1.png\" alt=\"001\"></p>\n<p>  右键后点击对应的菜单，可以看到当前正在占用文件/目录的进程文件：</p>\n<p>  <img src=\"/images/force-delete-file/lockhunter2.png\" alt=\"003\"></p>\n<p>  对进程文件右键，有对应的操作菜单显示，有三个选项，第一个是unlock占用的进程，我试过这个基本没用，然后就是第二个，杀死占用的进程，这个一般可用，如果不能用也可以试试第三个直接删除占用的进程文件。</p>\n<p>  <img src=\"/images/force-delete-file/lockhunter3.png\" alt=\"002\"></p>\n<p>  一般无法删除的文件用这个工具就行了，但是我发现，这个工具也有不可用的时候，于是又找到了另一款更加强力的工具。</p>\n<h3 id=\"暴力删除所有要删除的文件\"><a href=\"#暴力删除所有要删除的文件\" class=\"headerlink\" title=\"暴力删除所有要删除的文件\"></a>暴力删除所有要删除的文件</h3><p>  这个工具是FileASSASSIN，打开工具后，找到你想删除的文件：直接暴力删除。</p>\n<p>  个人感觉非常好用。</p>\n<p>  官网地址：<a href=\"https://www.malwarebytes.com/fileassassin/\" target=\"_blank\" rel=\"noopener\">FILEASSASSIN</a></p>\n<p>  软件介绍就一句话：Eradicates any type of locked files————彻底删除任何类型的锁定文件。</p>\n<p>  软件界面如下图：</p>\n<p>  <img src=\"/images/force-delete-file/lockhunter4.png\" alt=\"002\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"文件无法删除的烦恼\"><a href=\"#文件无法删除的烦恼\" class=\"headerlink\" title=\"文件无法删除的烦恼\"></a>文件无法删除的烦恼</h2><p>  好久没有遇到这种情况了，今天下载了一个便携软件，免安装，下载下来后试用，发现不好用，于是退出软件，然后删除软件，这个时候恶心的事情发生了，进程占用，无法删除软件，于是只能找工具进行强力删除。</p>\n<p>  多吐槽一句，软件官方发布的这种便携软件，不是第三方的人修改的，竟然在退出软件后还存在进程不退出继续占用的问题，要么是别有用心的在后台做什么事情，要么就说明软件开发的时候这些细节处理不好。总之一句话：坑货软件。</p>\n<h2 id=\"如何利用工具强制删除被锁定的文件\"><a href=\"#如何利用工具强制删除被锁定的文件\" class=\"headerlink\" title=\"如何利用工具强制删除被锁定的文件\"></a>如何利用工具强制删除被锁定的文件</h2><h3 id=\"杀死占用进程\"><a href=\"#杀死占用进程\" class=\"headerlink\" title=\"杀死占用进程\"></a>杀死占用进程</h3><p>  找到占用文件的进程，杀死进程，然后删除文件。这个是第一想法，因为删除的时候说了，因为某些进程正在使用它所以无法删除，所以第一想到的方法就是找到占用的进程，然后杀死进程，杀死进程后就可以删除了。</p>\n<p>  有这样的工具吗？</p>\n<p>  答案是：有。</p>\n<p>  什么名字呢？</p>\n<p>  lockhunter。</p>\n<p>  官网<a href=\"http://lockhunter.com/\" target=\"_blank\" rel=\"noopener\">lockhunter.com</a></p>\n<p>  直接去官网下载即可，请不要到国内的那些软件园/下载网站去下载，直接去官网下载。</p>\n<p>  安装完成后对着要删除的文件/目录右键，如下图：</p>\n<p>  <img src=\"/images/force-delete-file/lockhunter1.png\" alt=\"001\"></p>\n<p>  右键后点击对应的菜单，可以看到当前正在占用文件/目录的进程文件：</p>\n<p>  <img src=\"/images/force-delete-file/lockhunter2.png\" alt=\"003\"></p>\n<p>  对进程文件右键，有对应的操作菜单显示，有三个选项，第一个是unlock占用的进程，我试过这个基本没用，然后就是第二个，杀死占用的进程，这个一般可用，如果不能用也可以试试第三个直接删除占用的进程文件。</p>\n<p>  <img src=\"/images/force-delete-file/lockhunter3.png\" alt=\"002\"></p>\n<p>  一般无法删除的文件用这个工具就行了，但是我发现，这个工具也有不可用的时候，于是又找到了另一款更加强力的工具。</p>\n<h3 id=\"暴力删除所有要删除的文件\"><a href=\"#暴力删除所有要删除的文件\" class=\"headerlink\" title=\"暴力删除所有要删除的文件\"></a>暴力删除所有要删除的文件</h3><p>  这个工具是FileASSASSIN，打开工具后，找到你想删除的文件：直接暴力删除。</p>\n<p>  个人感觉非常好用。</p>\n<p>  官网地址：<a href=\"https://www.malwarebytes.com/fileassassin/\" target=\"_blank\" rel=\"noopener\">FILEASSASSIN</a></p>\n<p>  软件介绍就一句话：Eradicates any type of locked files————彻底删除任何类型的锁定文件。</p>\n<p>  软件界面如下图：</p>\n<p>  <img src=\"/images/force-delete-file/lockhunter4.png\" alt=\"002\"></p>\n"},{"title":"phantomjs抓取动态加载的网页数据","date":"2017-06-01T02:26:47.000Z","_content":"\n## 为什么要抓取数据\n\n  其实需求来源非常简单，我要看一本小说，发现这个小说只在某个网站上有，可以免费观看，但是网站体验实在太差，有非常多的广告，一直出现，无法屏蔽，并且内容低劣。这就想起来为什么不能自己抓取这里面的内容呢？自己做个像爬虫的工具，把小说内容全部爬取出来就可以了。\n\n## 具体实践\n\n  说做就做，首先查找资料发现python是这方面的最厉害的工具，但是没接触过python，上手比较麻烦，就查找别的工具Node、Java都可以，于是选择了Node。\n\n  用Node的superagent进行http网络请求，获取小说页面的数据（这里也可以用自带的HTTP模块进行也可以，因为比较简单，就是获取页面内容，没有复杂的东西）。\n\n  superagent介绍:\n  > SuperAgent is a small progressive client-side HTTP request library, and Node.js module with the same API, sporting many high-level HTTP client features. \n\n  [Github地址](https://github.com/visionmedia/superagent)\n\n  有了工具能够获取回网页的内容后，就可以对获取到的HTML元素进行DOM解析，获取章节数据，根据章节数据获取每章每节的小说具体内容，然后整理生成小说。\n\n  Node是服务端的Js脚本，如何处理DOM呢？在前端处理DOM的工具特别多，可以直接用JavaScript，也可以用比较常见的工具比如JQuery。\n\n  这里推荐一个Node处理HTML DOM元素的工具，名字是cheerio, [Github地址](https://github.com/cheeriojs/cheerio)\n  简介：\n  >Fast, flexible & lean implementation of core jQuery designed specifically for the server.\n\n  使用cheerio可以像使用jquery那样在Node端处理DOM，具体的api以及常用方法详见Git。\n\n  至于具体的Node web项目或者什么项目开发就不具体介绍了，如果想做成web型的，可以用express/koa等做中间件，然后找具体的template进行开发，不在此做进一步记录。\n\n## 新的问题\n\n  做到这里就能满足一般的抓取需求了，只需要根据不同的网站做不同的规则解析就可以了。\n\n  但是前几天上了一个网站，发现了一个新的问题，小说网站也有动态加载内容的。。。。，这个真的特别少见，因为基本上都是纯文字，完全没有什么流量压力之类的，但是确实有的网站就是这么做了，网页初次加载完之后会有一个延时的ajax请求，获取完整的小说数据，然后更新当前页面。\n\n  这个就真的比较尴尬，因为一般http请求就是把这次http请求的数据抓取回来就完了，不会在处理后续的数据，这样无法处理上面这种延时加载的情况，于是需要找新的工具支持。\n\n  此时就有了下面的新工具。\n\n## 支持延时获取数据的爬虫工具phantomjs\n\n  phantom是一个神奇的工具，基于webkit的服务器Javscript api工具，这个就很神奇了，它可以支持上面想要的延时功能，当然phantomjs不止是这一点功能，不过是这里的需求只要用它的这个功能而已。\n\n  [官网](http://phantomjs.org/)\n  [Git地址](https://github.com/ariya/phantomjs)\n  官网简介:\n  >PhantomJS is a headless WebKit scriptable with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG.\n\n  在这里可以使用延时，延时之后再进行数据获取，这样就能获取到相关的完整内容了。\n\n  可以直接使用phantomjs执行js代码进行数据抓取，因为是node项目，也可以使用node的phantomjs-node模块进行开发。\n  [Github phantomjs-node](https://github.com/amir20/phantomjs-node)\n\n  phantomjs-node使用简单示例\n\n  ```javascript\n    \n  function getContent(url, array, index, cb, length, repeat) {\n    const instance = await phantom.create();\n    const page = await instance.createPage();\n    try {\n        await page.on(\"onResourceRequested\", function (requestData) {\n        });\n\n        await page.on('onResourceReceived', function(response) {\n        });\n        //打开页面\n        const status = await page.open(url);\n\n        //延时\n        await sleep(2000);\n        //获取页面内容\n        const content = await page.property('content');\n        let $ = cheerio.load(content);\n        let title = $('.headline').html();\n        let novel = $('#content').html();\n        handleContent(title, novel);\n        cb();\n        await instance.exit();\n    } catch (err) {\n        handleErr(err);\n        return;\n    }\n  }\n\n  ```\n\n  最后这里有个自用的简单小说爬虫程序，代码非常简陋，有点乱，主要用来抓取小说内容，[Git地址](https://github.com/wuzhizhe/my-little-spider)\n\n\n  ## 新发现的问题\n\n  **2017-06-01 新发现phantomjs没有被杀死的问题**\n\n  用的是node的phantom模块，电脑安装了phantomjs后，node模块可以与之通信。\n\n  今天发现存在一个问题，有些情况下，phantomjs无法退出，进入查看进程没有被杀死一直在那挂着。因为是异步调用用了await等待instance.exit()成功后才能继续，现在显然是失败了，这种情况下需要去手动杀死进程。。。。。，然后返回结果后下面的程序继续执行。\n\n  暂时没有找到好的解决办法，先记录下来，等有了办法了再更新上去。\n\n\n\n","source":"_posts/phantomjs抓取动态加载的网页数据.md","raw":"---\ntitle: phantomjs抓取动态加载的网页数据\ndate: 2017-06-01 10:26:47\ntags:\n- phantom\n- 爬虫\n- nodejs\n- superagent\n---\n\n## 为什么要抓取数据\n\n  其实需求来源非常简单，我要看一本小说，发现这个小说只在某个网站上有，可以免费观看，但是网站体验实在太差，有非常多的广告，一直出现，无法屏蔽，并且内容低劣。这就想起来为什么不能自己抓取这里面的内容呢？自己做个像爬虫的工具，把小说内容全部爬取出来就可以了。\n\n## 具体实践\n\n  说做就做，首先查找资料发现python是这方面的最厉害的工具，但是没接触过python，上手比较麻烦，就查找别的工具Node、Java都可以，于是选择了Node。\n\n  用Node的superagent进行http网络请求，获取小说页面的数据（这里也可以用自带的HTTP模块进行也可以，因为比较简单，就是获取页面内容，没有复杂的东西）。\n\n  superagent介绍:\n  > SuperAgent is a small progressive client-side HTTP request library, and Node.js module with the same API, sporting many high-level HTTP client features. \n\n  [Github地址](https://github.com/visionmedia/superagent)\n\n  有了工具能够获取回网页的内容后，就可以对获取到的HTML元素进行DOM解析，获取章节数据，根据章节数据获取每章每节的小说具体内容，然后整理生成小说。\n\n  Node是服务端的Js脚本，如何处理DOM呢？在前端处理DOM的工具特别多，可以直接用JavaScript，也可以用比较常见的工具比如JQuery。\n\n  这里推荐一个Node处理HTML DOM元素的工具，名字是cheerio, [Github地址](https://github.com/cheeriojs/cheerio)\n  简介：\n  >Fast, flexible & lean implementation of core jQuery designed specifically for the server.\n\n  使用cheerio可以像使用jquery那样在Node端处理DOM，具体的api以及常用方法详见Git。\n\n  至于具体的Node web项目或者什么项目开发就不具体介绍了，如果想做成web型的，可以用express/koa等做中间件，然后找具体的template进行开发，不在此做进一步记录。\n\n## 新的问题\n\n  做到这里就能满足一般的抓取需求了，只需要根据不同的网站做不同的规则解析就可以了。\n\n  但是前几天上了一个网站，发现了一个新的问题，小说网站也有动态加载内容的。。。。，这个真的特别少见，因为基本上都是纯文字，完全没有什么流量压力之类的，但是确实有的网站就是这么做了，网页初次加载完之后会有一个延时的ajax请求，获取完整的小说数据，然后更新当前页面。\n\n  这个就真的比较尴尬，因为一般http请求就是把这次http请求的数据抓取回来就完了，不会在处理后续的数据，这样无法处理上面这种延时加载的情况，于是需要找新的工具支持。\n\n  此时就有了下面的新工具。\n\n## 支持延时获取数据的爬虫工具phantomjs\n\n  phantom是一个神奇的工具，基于webkit的服务器Javscript api工具，这个就很神奇了，它可以支持上面想要的延时功能，当然phantomjs不止是这一点功能，不过是这里的需求只要用它的这个功能而已。\n\n  [官网](http://phantomjs.org/)\n  [Git地址](https://github.com/ariya/phantomjs)\n  官网简介:\n  >PhantomJS is a headless WebKit scriptable with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG.\n\n  在这里可以使用延时，延时之后再进行数据获取，这样就能获取到相关的完整内容了。\n\n  可以直接使用phantomjs执行js代码进行数据抓取，因为是node项目，也可以使用node的phantomjs-node模块进行开发。\n  [Github phantomjs-node](https://github.com/amir20/phantomjs-node)\n\n  phantomjs-node使用简单示例\n\n  ```javascript\n    \n  function getContent(url, array, index, cb, length, repeat) {\n    const instance = await phantom.create();\n    const page = await instance.createPage();\n    try {\n        await page.on(\"onResourceRequested\", function (requestData) {\n        });\n\n        await page.on('onResourceReceived', function(response) {\n        });\n        //打开页面\n        const status = await page.open(url);\n\n        //延时\n        await sleep(2000);\n        //获取页面内容\n        const content = await page.property('content');\n        let $ = cheerio.load(content);\n        let title = $('.headline').html();\n        let novel = $('#content').html();\n        handleContent(title, novel);\n        cb();\n        await instance.exit();\n    } catch (err) {\n        handleErr(err);\n        return;\n    }\n  }\n\n  ```\n\n  最后这里有个自用的简单小说爬虫程序，代码非常简陋，有点乱，主要用来抓取小说内容，[Git地址](https://github.com/wuzhizhe/my-little-spider)\n\n\n  ## 新发现的问题\n\n  **2017-06-01 新发现phantomjs没有被杀死的问题**\n\n  用的是node的phantom模块，电脑安装了phantomjs后，node模块可以与之通信。\n\n  今天发现存在一个问题，有些情况下，phantomjs无法退出，进入查看进程没有被杀死一直在那挂着。因为是异步调用用了await等待instance.exit()成功后才能继续，现在显然是失败了，这种情况下需要去手动杀死进程。。。。。，然后返回结果后下面的程序继续执行。\n\n  暂时没有找到好的解决办法，先记录下来，等有了办法了再更新上去。\n\n\n\n","slug":"phantomjs抓取动态加载的网页数据","published":1,"updated":"2017-06-01T03:25:30.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000jm4smdsjp7ki7","content":"<h2 id=\"为什么要抓取数据\"><a href=\"#为什么要抓取数据\" class=\"headerlink\" title=\"为什么要抓取数据\"></a>为什么要抓取数据</h2><p>  其实需求来源非常简单，我要看一本小说，发现这个小说只在某个网站上有，可以免费观看，但是网站体验实在太差，有非常多的广告，一直出现，无法屏蔽，并且内容低劣。这就想起来为什么不能自己抓取这里面的内容呢？自己做个像爬虫的工具，把小说内容全部爬取出来就可以了。</p>\n<h2 id=\"具体实践\"><a href=\"#具体实践\" class=\"headerlink\" title=\"具体实践\"></a>具体实践</h2><p>  说做就做，首先查找资料发现python是这方面的最厉害的工具，但是没接触过python，上手比较麻烦，就查找别的工具Node、Java都可以，于是选择了Node。</p>\n<p>  用Node的superagent进行http网络请求，获取小说页面的数据（这里也可以用自带的HTTP模块进行也可以，因为比较简单，就是获取页面内容，没有复杂的东西）。</p>\n<p>  superagent介绍:</p>\n<blockquote>\n<p>SuperAgent is a small progressive client-side HTTP request library, and Node.js module with the same API, sporting many high-level HTTP client features. </p>\n</blockquote>\n<p>  <a href=\"https://github.com/visionmedia/superagent\" target=\"_blank\" rel=\"noopener\">Github地址</a></p>\n<p>  有了工具能够获取回网页的内容后，就可以对获取到的HTML元素进行DOM解析，获取章节数据，根据章节数据获取每章每节的小说具体内容，然后整理生成小说。</p>\n<p>  Node是服务端的Js脚本，如何处理DOM呢？在前端处理DOM的工具特别多，可以直接用JavaScript，也可以用比较常见的工具比如JQuery。</p>\n<p>  这里推荐一个Node处理HTML DOM元素的工具，名字是cheerio, <a href=\"https://github.com/cheeriojs/cheerio\" target=\"_blank\" rel=\"noopener\">Github地址</a><br>  简介：</p>\n<blockquote>\n<p>Fast, flexible &amp; lean implementation of core jQuery designed specifically for the server.</p>\n</blockquote>\n<p>  使用cheerio可以像使用jquery那样在Node端处理DOM，具体的api以及常用方法详见Git。</p>\n<p>  至于具体的Node web项目或者什么项目开发就不具体介绍了，如果想做成web型的，可以用express/koa等做中间件，然后找具体的template进行开发，不在此做进一步记录。</p>\n<h2 id=\"新的问题\"><a href=\"#新的问题\" class=\"headerlink\" title=\"新的问题\"></a>新的问题</h2><p>  做到这里就能满足一般的抓取需求了，只需要根据不同的网站做不同的规则解析就可以了。</p>\n<p>  但是前几天上了一个网站，发现了一个新的问题，小说网站也有动态加载内容的。。。。，这个真的特别少见，因为基本上都是纯文字，完全没有什么流量压力之类的，但是确实有的网站就是这么做了，网页初次加载完之后会有一个延时的ajax请求，获取完整的小说数据，然后更新当前页面。</p>\n<p>  这个就真的比较尴尬，因为一般http请求就是把这次http请求的数据抓取回来就完了，不会在处理后续的数据，这样无法处理上面这种延时加载的情况，于是需要找新的工具支持。</p>\n<p>  此时就有了下面的新工具。</p>\n<h2 id=\"支持延时获取数据的爬虫工具phantomjs\"><a href=\"#支持延时获取数据的爬虫工具phantomjs\" class=\"headerlink\" title=\"支持延时获取数据的爬虫工具phantomjs\"></a>支持延时获取数据的爬虫工具phantomjs</h2><p>  phantom是一个神奇的工具，基于webkit的服务器Javscript api工具，这个就很神奇了，它可以支持上面想要的延时功能，当然phantomjs不止是这一点功能，不过是这里的需求只要用它的这个功能而已。</p>\n<p>  <a href=\"http://phantomjs.org/\" target=\"_blank\" rel=\"noopener\">官网</a><br>  <a href=\"https://github.com/ariya/phantomjs\" target=\"_blank\" rel=\"noopener\">Git地址</a><br>  官网简介:</p>\n<blockquote>\n<p>PhantomJS is a headless WebKit scriptable with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG.</p>\n</blockquote>\n<p>  在这里可以使用延时，延时之后再进行数据获取，这样就能获取到相关的完整内容了。</p>\n<p>  可以直接使用phantomjs执行js代码进行数据抓取，因为是node项目，也可以使用node的phantomjs-node模块进行开发。<br>  <a href=\"https://github.com/amir20/phantomjs-node\" target=\"_blank\" rel=\"noopener\">Github phantomjs-node</a></p>\n<p>  phantomjs-node使用简单示例</p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getContent</span>(<span class=\"params\">url, array, index, cb, length, repeat</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> instance = <span class=\"keyword\">await</span> phantom.create();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> page = <span class=\"keyword\">await</span> instance.createPage();</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> page.on(<span class=\"string\">\"onResourceRequested\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">requestData</span>) </span>&#123;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">await</span> page.on(<span class=\"string\">'onResourceReceived'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//打开页面</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> status = <span class=\"keyword\">await</span> page.open(url);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//延时</span></span><br><span class=\"line\">      <span class=\"keyword\">await</span> sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">      <span class=\"comment\">//获取页面内容</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> content = <span class=\"keyword\">await</span> page.property(<span class=\"string\">'content'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> $ = cheerio.load(content);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> title = $(<span class=\"string\">'.headline'</span>).html();</span><br><span class=\"line\">      <span class=\"keyword\">let</span> novel = $(<span class=\"string\">'#content'</span>).html();</span><br><span class=\"line\">      handleContent(title, novel);</span><br><span class=\"line\">      cb();</span><br><span class=\"line\">      <span class=\"keyword\">await</span> instance.exit();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      handleErr(err);</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>  最后这里有个自用的简单小说爬虫程序，代码非常简陋，有点乱，主要用来抓取小说内容，<a href=\"https://github.com/wuzhizhe/my-little-spider\" target=\"_blank\" rel=\"noopener\">Git地址</a></p>\n<h2 id=\"新发现的问题\"><a href=\"#新发现的问题\" class=\"headerlink\" title=\"新发现的问题\"></a>新发现的问题</h2><p>  <strong>2017-06-01 新发现phantomjs没有被杀死的问题</strong></p>\n<p>  用的是node的phantom模块，电脑安装了phantomjs后，node模块可以与之通信。</p>\n<p>  今天发现存在一个问题，有些情况下，phantomjs无法退出，进入查看进程没有被杀死一直在那挂着。因为是异步调用用了await等待instance.exit()成功后才能继续，现在显然是失败了，这种情况下需要去手动杀死进程。。。。。，然后返回结果后下面的程序继续执行。</p>\n<p>  暂时没有找到好的解决办法，先记录下来，等有了办法了再更新上去。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"为什么要抓取数据\"><a href=\"#为什么要抓取数据\" class=\"headerlink\" title=\"为什么要抓取数据\"></a>为什么要抓取数据</h2><p>  其实需求来源非常简单，我要看一本小说，发现这个小说只在某个网站上有，可以免费观看，但是网站体验实在太差，有非常多的广告，一直出现，无法屏蔽，并且内容低劣。这就想起来为什么不能自己抓取这里面的内容呢？自己做个像爬虫的工具，把小说内容全部爬取出来就可以了。</p>\n<h2 id=\"具体实践\"><a href=\"#具体实践\" class=\"headerlink\" title=\"具体实践\"></a>具体实践</h2><p>  说做就做，首先查找资料发现python是这方面的最厉害的工具，但是没接触过python，上手比较麻烦，就查找别的工具Node、Java都可以，于是选择了Node。</p>\n<p>  用Node的superagent进行http网络请求，获取小说页面的数据（这里也可以用自带的HTTP模块进行也可以，因为比较简单，就是获取页面内容，没有复杂的东西）。</p>\n<p>  superagent介绍:</p>\n<blockquote>\n<p>SuperAgent is a small progressive client-side HTTP request library, and Node.js module with the same API, sporting many high-level HTTP client features. </p>\n</blockquote>\n<p>  <a href=\"https://github.com/visionmedia/superagent\" target=\"_blank\" rel=\"noopener\">Github地址</a></p>\n<p>  有了工具能够获取回网页的内容后，就可以对获取到的HTML元素进行DOM解析，获取章节数据，根据章节数据获取每章每节的小说具体内容，然后整理生成小说。</p>\n<p>  Node是服务端的Js脚本，如何处理DOM呢？在前端处理DOM的工具特别多，可以直接用JavaScript，也可以用比较常见的工具比如JQuery。</p>\n<p>  这里推荐一个Node处理HTML DOM元素的工具，名字是cheerio, <a href=\"https://github.com/cheeriojs/cheerio\" target=\"_blank\" rel=\"noopener\">Github地址</a><br>  简介：</p>\n<blockquote>\n<p>Fast, flexible &amp; lean implementation of core jQuery designed specifically for the server.</p>\n</blockquote>\n<p>  使用cheerio可以像使用jquery那样在Node端处理DOM，具体的api以及常用方法详见Git。</p>\n<p>  至于具体的Node web项目或者什么项目开发就不具体介绍了，如果想做成web型的，可以用express/koa等做中间件，然后找具体的template进行开发，不在此做进一步记录。</p>\n<h2 id=\"新的问题\"><a href=\"#新的问题\" class=\"headerlink\" title=\"新的问题\"></a>新的问题</h2><p>  做到这里就能满足一般的抓取需求了，只需要根据不同的网站做不同的规则解析就可以了。</p>\n<p>  但是前几天上了一个网站，发现了一个新的问题，小说网站也有动态加载内容的。。。。，这个真的特别少见，因为基本上都是纯文字，完全没有什么流量压力之类的，但是确实有的网站就是这么做了，网页初次加载完之后会有一个延时的ajax请求，获取完整的小说数据，然后更新当前页面。</p>\n<p>  这个就真的比较尴尬，因为一般http请求就是把这次http请求的数据抓取回来就完了，不会在处理后续的数据，这样无法处理上面这种延时加载的情况，于是需要找新的工具支持。</p>\n<p>  此时就有了下面的新工具。</p>\n<h2 id=\"支持延时获取数据的爬虫工具phantomjs\"><a href=\"#支持延时获取数据的爬虫工具phantomjs\" class=\"headerlink\" title=\"支持延时获取数据的爬虫工具phantomjs\"></a>支持延时获取数据的爬虫工具phantomjs</h2><p>  phantom是一个神奇的工具，基于webkit的服务器Javscript api工具，这个就很神奇了，它可以支持上面想要的延时功能，当然phantomjs不止是这一点功能，不过是这里的需求只要用它的这个功能而已。</p>\n<p>  <a href=\"http://phantomjs.org/\" target=\"_blank\" rel=\"noopener\">官网</a><br>  <a href=\"https://github.com/ariya/phantomjs\" target=\"_blank\" rel=\"noopener\">Git地址</a><br>  官网简介:</p>\n<blockquote>\n<p>PhantomJS is a headless WebKit scriptable with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG.</p>\n</blockquote>\n<p>  在这里可以使用延时，延时之后再进行数据获取，这样就能获取到相关的完整内容了。</p>\n<p>  可以直接使用phantomjs执行js代码进行数据抓取，因为是node项目，也可以使用node的phantomjs-node模块进行开发。<br>  <a href=\"https://github.com/amir20/phantomjs-node\" target=\"_blank\" rel=\"noopener\">Github phantomjs-node</a></p>\n<p>  phantomjs-node使用简单示例</p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getContent</span>(<span class=\"params\">url, array, index, cb, length, repeat</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> instance = <span class=\"keyword\">await</span> phantom.create();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> page = <span class=\"keyword\">await</span> instance.createPage();</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> page.on(<span class=\"string\">\"onResourceRequested\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">requestData</span>) </span>&#123;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">await</span> page.on(<span class=\"string\">'onResourceReceived'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//打开页面</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> status = <span class=\"keyword\">await</span> page.open(url);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//延时</span></span><br><span class=\"line\">      <span class=\"keyword\">await</span> sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">      <span class=\"comment\">//获取页面内容</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> content = <span class=\"keyword\">await</span> page.property(<span class=\"string\">'content'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> $ = cheerio.load(content);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> title = $(<span class=\"string\">'.headline'</span>).html();</span><br><span class=\"line\">      <span class=\"keyword\">let</span> novel = $(<span class=\"string\">'#content'</span>).html();</span><br><span class=\"line\">      handleContent(title, novel);</span><br><span class=\"line\">      cb();</span><br><span class=\"line\">      <span class=\"keyword\">await</span> instance.exit();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      handleErr(err);</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>  最后这里有个自用的简单小说爬虫程序，代码非常简陋，有点乱，主要用来抓取小说内容，<a href=\"https://github.com/wuzhizhe/my-little-spider\" target=\"_blank\" rel=\"noopener\">Git地址</a></p>\n<h2 id=\"新发现的问题\"><a href=\"#新发现的问题\" class=\"headerlink\" title=\"新发现的问题\"></a>新发现的问题</h2><p>  <strong>2017-06-01 新发现phantomjs没有被杀死的问题</strong></p>\n<p>  用的是node的phantom模块，电脑安装了phantomjs后，node模块可以与之通信。</p>\n<p>  今天发现存在一个问题，有些情况下，phantomjs无法退出，进入查看进程没有被杀死一直在那挂着。因为是异步调用用了await等待instance.exit()成功后才能继续，现在显然是失败了，这种情况下需要去手动杀死进程。。。。。，然后返回结果后下面的程序继续执行。</p>\n<p>  暂时没有找到好的解决办法，先记录下来，等有了办法了再更新上去。</p>\n"},{"title":"几个windows/linux应用推荐网址","date":"2017-04-19T02:32:44.000Z","_content":"  浏览Github时发现了几个跟应用推荐有关的网址，在这里记录下，如果能对大家有帮助那就再好不过了，哈哈。\n\n#### windows应用\n  1. [Awesome-windows](https://github.com/Awesome-Windows/Awesome)\n    An awesome & curated list of best applications and tools for Windows.\n    这个是老外搞得一个list，专门推荐了一些好用的windows应用，涉及到各个方面的工具。\n  2. [Windows绝赞应用](https://github.com/EMLVIRUS/Amazing-Windows-Apps)\n    这个是国人受上面的项目启发写出来的list，比较贴近国内的用户使用习惯，但是大多数国内的大厂的app都被他加入黑名单了，哈哈哈。\n\n#### linux应用\n  1. [awesome-linux](https://github.com/aleksandar-todorovic/awesome-linux)\n    因为linux有众多的distribution，所以在里面还简单介绍了一下众多的distribution，以及各版本下的优秀软件，总是用linux的可以进入，看看能不能找到自己喜欢的linux版本或者喜欢的软件。\n\n    ","source":"_posts/几个windows-linux应用推荐网址.md","raw":"---\ntitle: 几个windows/linux应用推荐网址\ndate: 2017-04-19 10:32:44\ntags:\n---\n  浏览Github时发现了几个跟应用推荐有关的网址，在这里记录下，如果能对大家有帮助那就再好不过了，哈哈。\n\n#### windows应用\n  1. [Awesome-windows](https://github.com/Awesome-Windows/Awesome)\n    An awesome & curated list of best applications and tools for Windows.\n    这个是老外搞得一个list，专门推荐了一些好用的windows应用，涉及到各个方面的工具。\n  2. [Windows绝赞应用](https://github.com/EMLVIRUS/Amazing-Windows-Apps)\n    这个是国人受上面的项目启发写出来的list，比较贴近国内的用户使用习惯，但是大多数国内的大厂的app都被他加入黑名单了，哈哈哈。\n\n#### linux应用\n  1. [awesome-linux](https://github.com/aleksandar-todorovic/awesome-linux)\n    因为linux有众多的distribution，所以在里面还简单介绍了一下众多的distribution，以及各版本下的优秀软件，总是用linux的可以进入，看看能不能找到自己喜欢的linux版本或者喜欢的软件。\n\n    ","slug":"几个windows-linux应用推荐网址","published":1,"updated":"2017-04-19T02:41:15.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000lm4smlp6cyan2","content":"<p>  浏览Github时发现了几个跟应用推荐有关的网址，在这里记录下，如果能对大家有帮助那就再好不过了，哈哈。</p>\n<h4 id=\"windows应用\"><a href=\"#windows应用\" class=\"headerlink\" title=\"windows应用\"></a>windows应用</h4><ol>\n<li><a href=\"https://github.com/Awesome-Windows/Awesome\" target=\"_blank\" rel=\"noopener\">Awesome-windows</a><br>An awesome &amp; curated list of best applications and tools for Windows.<br>这个是老外搞得一个list，专门推荐了一些好用的windows应用，涉及到各个方面的工具。</li>\n<li><a href=\"https://github.com/EMLVIRUS/Amazing-Windows-Apps\" target=\"_blank\" rel=\"noopener\">Windows绝赞应用</a><br>这个是国人受上面的项目启发写出来的list，比较贴近国内的用户使用习惯，但是大多数国内的大厂的app都被他加入黑名单了，哈哈哈。</li>\n</ol>\n<h4 id=\"linux应用\"><a href=\"#linux应用\" class=\"headerlink\" title=\"linux应用\"></a>linux应用</h4><ol>\n<li><a href=\"https://github.com/aleksandar-todorovic/awesome-linux\" target=\"_blank\" rel=\"noopener\">awesome-linux</a><br>因为linux有众多的distribution，所以在里面还简单介绍了一下众多的distribution，以及各版本下的优秀软件，总是用linux的可以进入，看看能不能找到自己喜欢的linux版本或者喜欢的软件。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>  浏览Github时发现了几个跟应用推荐有关的网址，在这里记录下，如果能对大家有帮助那就再好不过了，哈哈。</p>\n<h4 id=\"windows应用\"><a href=\"#windows应用\" class=\"headerlink\" title=\"windows应用\"></a>windows应用</h4><ol>\n<li><a href=\"https://github.com/Awesome-Windows/Awesome\" target=\"_blank\" rel=\"noopener\">Awesome-windows</a><br>An awesome &amp; curated list of best applications and tools for Windows.<br>这个是老外搞得一个list，专门推荐了一些好用的windows应用，涉及到各个方面的工具。</li>\n<li><a href=\"https://github.com/EMLVIRUS/Amazing-Windows-Apps\" target=\"_blank\" rel=\"noopener\">Windows绝赞应用</a><br>这个是国人受上面的项目启发写出来的list，比较贴近国内的用户使用习惯，但是大多数国内的大厂的app都被他加入黑名单了，哈哈哈。</li>\n</ol>\n<h4 id=\"linux应用\"><a href=\"#linux应用\" class=\"headerlink\" title=\"linux应用\"></a>linux应用</h4><ol>\n<li><a href=\"https://github.com/aleksandar-todorovic/awesome-linux\" target=\"_blank\" rel=\"noopener\">awesome-linux</a><br>因为linux有众多的distribution，所以在里面还简单介绍了一下众多的distribution，以及各版本下的优秀软件，总是用linux的可以进入，看看能不能找到自己喜欢的linux版本或者喜欢的软件。</li>\n</ol>\n"},{"title":"国外离线下载网站seedr","date":"2017-05-25T02:44:02.000Z","_content":"\n最近发现国内的离线工具似乎越来越差了，没办法了，只能向国外寻找了。\n\n## 国内离线工具现状\n\n吐槽下国内的这些垃圾东西，我最常用的几个网站/软件：\n\nA. 迅雷离线\n  \n  这个早期是收费的，没有免费可用，不记得是多少钱了，那时是个学生狗，不舍得花钱，用的很少。后来开始使用，但是用了一段时间后，迅雷因为版权的问题不得不妥协，一大堆东西都是“因为版权问题。。。。”，无法下载，吐了，不再缴纳会员费，就正常非会员使用了，非会员直接限速，这个是绝对可以肯定的，没办法，抛弃。\n\nB. QQ旋风\n  \n  这个从我接触互联网开始就有了，我接触互联网比较晚，旋风大概是05年的产品？不是很清楚，反正刚开始接触互联网是08年，那时候就用旋风下载，没有感觉有什么特殊的，后来离线下载来了，QQ旋风有积分制度，积分够了可以赠送免费离线下载空间，这个简直就觉了，学生时代天天刷分，终于够了，能够好好的离线了，最大文件有限制不记得多大了，总空间25GB，够用了，但是跟迅雷一样版权问题，还有个比迅雷还严重的问题经常出现，离线成功了，下载到本地没有速度（**不是限速，是没速度**），真是日了狗了。。。\n\nC. 115网盘\n\n  这个是真心神器啊，但是现在的费用问题就不多说了，虽然说收费是一个企业存活发展的正常途径，但是这个费用真的不是一般的贵啊，抛弃。。。\n\nD. 百度网盘\n\n  这个用的次数最少了，它的离线下载检测不是很清楚，感觉很一般，然后就是这个家伙做大了之后的限速问题，简直丧心病狂。百度这个没节操的公司，真是无语。。。\n\n## 转向国外工具\n\n国外的工具都是比较良性的，一般都是收费的，免费的一般不够用。.\n\n但是国外还是有很多优秀的工具的，比较好的有filestream, furk, seedr等\n\n这里就是介绍下seedr：\n\n这个网站真的很好啊，首先免费用户有2.5G的空间大小，然后有一个下载槽，关键是没有下载速度限制，一般的文件2.5G大小就够用了。没有成人视频等限制。\n\n**seedr目前只支持BT下载**\n\n空间扩展：如果觉得2.5GB不够用，可以通过邀请好友以及社交网站宣传来免费升级，最多可以再扩展5.5GB，这样就是8GB，这样的空间应对一般的文件真的足够了。。。\n\n下面是网站官网：[https://www.seedr.cc](https://www.seedr.cc/?r=636708)，点击就可以进入注册账号，使用服务。\n\n下面是一段从[raymond](https://www.raymond.cc/blog/how-to-download-torrent-if-you-cant-install-and-run-bittorrent-client/)引用的文字:\n>Seedr accepts local torrent files, magnet links or a URL of a remote torrent file. You can only transfer one torrent at a time to the Seedr servers but can download multiple completed torrents from Seedr. We found the download speed very good and all our files downloaded at the maximum speed. There’s also a [Seedr Chrome extension](https://chrome.google.com/webstore/detail/seedr/abfimpkhacgimamjbiegeoponlepcbob)  for directly adding links.","source":"_posts/国外离线下载网站seedr.md","raw":"---\ntitle: 国外离线下载网站seedr\ndate: 2017-05-25 10:44:02\ntags:\n- offline download\n- 离线下载\n- seedr\n---\n\n最近发现国内的离线工具似乎越来越差了，没办法了，只能向国外寻找了。\n\n## 国内离线工具现状\n\n吐槽下国内的这些垃圾东西，我最常用的几个网站/软件：\n\nA. 迅雷离线\n  \n  这个早期是收费的，没有免费可用，不记得是多少钱了，那时是个学生狗，不舍得花钱，用的很少。后来开始使用，但是用了一段时间后，迅雷因为版权的问题不得不妥协，一大堆东西都是“因为版权问题。。。。”，无法下载，吐了，不再缴纳会员费，就正常非会员使用了，非会员直接限速，这个是绝对可以肯定的，没办法，抛弃。\n\nB. QQ旋风\n  \n  这个从我接触互联网开始就有了，我接触互联网比较晚，旋风大概是05年的产品？不是很清楚，反正刚开始接触互联网是08年，那时候就用旋风下载，没有感觉有什么特殊的，后来离线下载来了，QQ旋风有积分制度，积分够了可以赠送免费离线下载空间，这个简直就觉了，学生时代天天刷分，终于够了，能够好好的离线了，最大文件有限制不记得多大了，总空间25GB，够用了，但是跟迅雷一样版权问题，还有个比迅雷还严重的问题经常出现，离线成功了，下载到本地没有速度（**不是限速，是没速度**），真是日了狗了。。。\n\nC. 115网盘\n\n  这个是真心神器啊，但是现在的费用问题就不多说了，虽然说收费是一个企业存活发展的正常途径，但是这个费用真的不是一般的贵啊，抛弃。。。\n\nD. 百度网盘\n\n  这个用的次数最少了，它的离线下载检测不是很清楚，感觉很一般，然后就是这个家伙做大了之后的限速问题，简直丧心病狂。百度这个没节操的公司，真是无语。。。\n\n## 转向国外工具\n\n国外的工具都是比较良性的，一般都是收费的，免费的一般不够用。.\n\n但是国外还是有很多优秀的工具的，比较好的有filestream, furk, seedr等\n\n这里就是介绍下seedr：\n\n这个网站真的很好啊，首先免费用户有2.5G的空间大小，然后有一个下载槽，关键是没有下载速度限制，一般的文件2.5G大小就够用了。没有成人视频等限制。\n\n**seedr目前只支持BT下载**\n\n空间扩展：如果觉得2.5GB不够用，可以通过邀请好友以及社交网站宣传来免费升级，最多可以再扩展5.5GB，这样就是8GB，这样的空间应对一般的文件真的足够了。。。\n\n下面是网站官网：[https://www.seedr.cc](https://www.seedr.cc/?r=636708)，点击就可以进入注册账号，使用服务。\n\n下面是一段从[raymond](https://www.raymond.cc/blog/how-to-download-torrent-if-you-cant-install-and-run-bittorrent-client/)引用的文字:\n>Seedr accepts local torrent files, magnet links or a URL of a remote torrent file. You can only transfer one torrent at a time to the Seedr servers but can download multiple completed torrents from Seedr. We found the download speed very good and all our files downloaded at the maximum speed. There’s also a [Seedr Chrome extension](https://chrome.google.com/webstore/detail/seedr/abfimpkhacgimamjbiegeoponlepcbob)  for directly adding links.","slug":"国外离线下载网站seedr","published":1,"updated":"2017-11-15T06:53:34.405Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000mm4smhq40a99z","content":"<p>最近发现国内的离线工具似乎越来越差了，没办法了，只能向国外寻找了。</p>\n<h2 id=\"国内离线工具现状\"><a href=\"#国内离线工具现状\" class=\"headerlink\" title=\"国内离线工具现状\"></a>国内离线工具现状</h2><p>吐槽下国内的这些垃圾东西，我最常用的几个网站/软件：</p>\n<p>A. 迅雷离线</p>\n<p>  这个早期是收费的，没有免费可用，不记得是多少钱了，那时是个学生狗，不舍得花钱，用的很少。后来开始使用，但是用了一段时间后，迅雷因为版权的问题不得不妥协，一大堆东西都是“因为版权问题。。。。”，无法下载，吐了，不再缴纳会员费，就正常非会员使用了，非会员直接限速，这个是绝对可以肯定的，没办法，抛弃。</p>\n<p>B. QQ旋风</p>\n<p>  这个从我接触互联网开始就有了，我接触互联网比较晚，旋风大概是05年的产品？不是很清楚，反正刚开始接触互联网是08年，那时候就用旋风下载，没有感觉有什么特殊的，后来离线下载来了，QQ旋风有积分制度，积分够了可以赠送免费离线下载空间，这个简直就觉了，学生时代天天刷分，终于够了，能够好好的离线了，最大文件有限制不记得多大了，总空间25GB，够用了，但是跟迅雷一样版权问题，还有个比迅雷还严重的问题经常出现，离线成功了，下载到本地没有速度（<strong>不是限速，是没速度</strong>），真是日了狗了。。。</p>\n<p>C. 115网盘</p>\n<p>  这个是真心神器啊，但是现在的费用问题就不多说了，虽然说收费是一个企业存活发展的正常途径，但是这个费用真的不是一般的贵啊，抛弃。。。</p>\n<p>D. 百度网盘</p>\n<p>  这个用的次数最少了，它的离线下载检测不是很清楚，感觉很一般，然后就是这个家伙做大了之后的限速问题，简直丧心病狂。百度这个没节操的公司，真是无语。。。</p>\n<h2 id=\"转向国外工具\"><a href=\"#转向国外工具\" class=\"headerlink\" title=\"转向国外工具\"></a>转向国外工具</h2><p>国外的工具都是比较良性的，一般都是收费的，免费的一般不够用。.</p>\n<p>但是国外还是有很多优秀的工具的，比较好的有filestream, furk, seedr等</p>\n<p>这里就是介绍下seedr：</p>\n<p>这个网站真的很好啊，首先免费用户有2.5G的空间大小，然后有一个下载槽，关键是没有下载速度限制，一般的文件2.5G大小就够用了。没有成人视频等限制。</p>\n<p><strong>seedr目前只支持BT下载</strong></p>\n<p>空间扩展：如果觉得2.5GB不够用，可以通过邀请好友以及社交网站宣传来免费升级，最多可以再扩展5.5GB，这样就是8GB，这样的空间应对一般的文件真的足够了。。。</p>\n<p>下面是网站官网：<a href=\"https://www.seedr.cc/?r=636708\" target=\"_blank\" rel=\"noopener\">https://www.seedr.cc</a>，点击就可以进入注册账号，使用服务。</p>\n<p>下面是一段从<a href=\"https://www.raymond.cc/blog/how-to-download-torrent-if-you-cant-install-and-run-bittorrent-client/\" target=\"_blank\" rel=\"noopener\">raymond</a>引用的文字:</p>\n<blockquote>\n<p>Seedr accepts local torrent files, magnet links or a URL of a remote torrent file. You can only transfer one torrent at a time to the Seedr servers but can download multiple completed torrents from Seedr. We found the download speed very good and all our files downloaded at the maximum speed. There’s also a <a href=\"https://chrome.google.com/webstore/detail/seedr/abfimpkhacgimamjbiegeoponlepcbob\" target=\"_blank\" rel=\"noopener\">Seedr Chrome extension</a>  for directly adding links.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>最近发现国内的离线工具似乎越来越差了，没办法了，只能向国外寻找了。</p>\n<h2 id=\"国内离线工具现状\"><a href=\"#国内离线工具现状\" class=\"headerlink\" title=\"国内离线工具现状\"></a>国内离线工具现状</h2><p>吐槽下国内的这些垃圾东西，我最常用的几个网站/软件：</p>\n<p>A. 迅雷离线</p>\n<p>  这个早期是收费的，没有免费可用，不记得是多少钱了，那时是个学生狗，不舍得花钱，用的很少。后来开始使用，但是用了一段时间后，迅雷因为版权的问题不得不妥协，一大堆东西都是“因为版权问题。。。。”，无法下载，吐了，不再缴纳会员费，就正常非会员使用了，非会员直接限速，这个是绝对可以肯定的，没办法，抛弃。</p>\n<p>B. QQ旋风</p>\n<p>  这个从我接触互联网开始就有了，我接触互联网比较晚，旋风大概是05年的产品？不是很清楚，反正刚开始接触互联网是08年，那时候就用旋风下载，没有感觉有什么特殊的，后来离线下载来了，QQ旋风有积分制度，积分够了可以赠送免费离线下载空间，这个简直就觉了，学生时代天天刷分，终于够了，能够好好的离线了，最大文件有限制不记得多大了，总空间25GB，够用了，但是跟迅雷一样版权问题，还有个比迅雷还严重的问题经常出现，离线成功了，下载到本地没有速度（<strong>不是限速，是没速度</strong>），真是日了狗了。。。</p>\n<p>C. 115网盘</p>\n<p>  这个是真心神器啊，但是现在的费用问题就不多说了，虽然说收费是一个企业存活发展的正常途径，但是这个费用真的不是一般的贵啊，抛弃。。。</p>\n<p>D. 百度网盘</p>\n<p>  这个用的次数最少了，它的离线下载检测不是很清楚，感觉很一般，然后就是这个家伙做大了之后的限速问题，简直丧心病狂。百度这个没节操的公司，真是无语。。。</p>\n<h2 id=\"转向国外工具\"><a href=\"#转向国外工具\" class=\"headerlink\" title=\"转向国外工具\"></a>转向国外工具</h2><p>国外的工具都是比较良性的，一般都是收费的，免费的一般不够用。.</p>\n<p>但是国外还是有很多优秀的工具的，比较好的有filestream, furk, seedr等</p>\n<p>这里就是介绍下seedr：</p>\n<p>这个网站真的很好啊，首先免费用户有2.5G的空间大小，然后有一个下载槽，关键是没有下载速度限制，一般的文件2.5G大小就够用了。没有成人视频等限制。</p>\n<p><strong>seedr目前只支持BT下载</strong></p>\n<p>空间扩展：如果觉得2.5GB不够用，可以通过邀请好友以及社交网站宣传来免费升级，最多可以再扩展5.5GB，这样就是8GB，这样的空间应对一般的文件真的足够了。。。</p>\n<p>下面是网站官网：<a href=\"https://www.seedr.cc/?r=636708\" target=\"_blank\" rel=\"noopener\">https://www.seedr.cc</a>，点击就可以进入注册账号，使用服务。</p>\n<p>下面是一段从<a href=\"https://www.raymond.cc/blog/how-to-download-torrent-if-you-cant-install-and-run-bittorrent-client/\" target=\"_blank\" rel=\"noopener\">raymond</a>引用的文字:</p>\n<blockquote>\n<p>Seedr accepts local torrent files, magnet links or a URL of a remote torrent file. You can only transfer one torrent at a time to the Seedr servers but can download multiple completed torrents from Seedr. We found the download speed very good and all our files downloaded at the maximum speed. There’s also a <a href=\"https://chrome.google.com/webstore/detail/seedr/abfimpkhacgimamjbiegeoponlepcbob\" target=\"_blank\" rel=\"noopener\">Seedr Chrome extension</a>  for directly adding links.</p>\n</blockquote>\n"},{"title":"overflow解决父元素因为子元素漂浮没高度的问题","date":"2017-06-13T06:52:42.000Z","_content":"\n## 子元素漂浮导致父元素没有高度\n\n  HTML DOM元素，当子元素设置了float为left或者right时，元素就漂浮起来了，这个时候它就不占用任何的宽高空间了，所以就导致了该元素的父元素的高度不正常，如果全部漂浮，父元素的高度为零。\n\n  这个时候在其他的一些元素的布局时就会出现问题，比如父元素下面的元素，很可能与父元素重叠，并且在一些需要计算高度的情况下会导致布局错误，界面混乱。\n\n\n## 如何解决这问题？\n\n  解决这个问题的方法也很简单，在父元素上使用overflow: auto; 这样就可以解决了这个问题，overflow:auto可以清楚子元素的浮动。\n\n\n## 代码示例\n\n  ```html\n\n    <div class=\"container1\">\n      <div class=\"child1\">飘过来</div>\n      <div class=\"child2\">浮过去</div>\n    </div>\n    <div class=\"clear\"></div>\n    <div class=\"container2\">\n      <div class=\"child1\">飘过来</div>\n      <div class=\"child2\">浮过去</div>\n    </div>\n\n  ```\n  \n  ```css\n\n    .child1,\n    .child2 {\n      float: left;\n    }\n    .container1 {\n      border: 2px solid red;\n      width: 50%;\n    }\n    .clear {\n      clear: both;\n    }\n    .container2 {\n      margin-top:20px;\n      overflow: auto;\n      border: 2px solid red;\n      width: 50%;\n    }\n\n  ```\n\n  [代码运行JSFIDDLE](https://jsfiddle.net/dazhizhemu/25jwjca5/)\n\n  代码运行效果图：\n  ![](/images/overflow-auto.png)","source":"_posts/overflow解决父元素因为子元素漂浮没高度的问题.md","raw":"---\ntitle: overflow解决父元素因为子元素漂浮没高度的问题\ndate: 2017-06-13 14:52:42\ntags:\n- css\n- overflow\n- float\n- height\n---\n\n## 子元素漂浮导致父元素没有高度\n\n  HTML DOM元素，当子元素设置了float为left或者right时，元素就漂浮起来了，这个时候它就不占用任何的宽高空间了，所以就导致了该元素的父元素的高度不正常，如果全部漂浮，父元素的高度为零。\n\n  这个时候在其他的一些元素的布局时就会出现问题，比如父元素下面的元素，很可能与父元素重叠，并且在一些需要计算高度的情况下会导致布局错误，界面混乱。\n\n\n## 如何解决这问题？\n\n  解决这个问题的方法也很简单，在父元素上使用overflow: auto; 这样就可以解决了这个问题，overflow:auto可以清楚子元素的浮动。\n\n\n## 代码示例\n\n  ```html\n\n    <div class=\"container1\">\n      <div class=\"child1\">飘过来</div>\n      <div class=\"child2\">浮过去</div>\n    </div>\n    <div class=\"clear\"></div>\n    <div class=\"container2\">\n      <div class=\"child1\">飘过来</div>\n      <div class=\"child2\">浮过去</div>\n    </div>\n\n  ```\n  \n  ```css\n\n    .child1,\n    .child2 {\n      float: left;\n    }\n    .container1 {\n      border: 2px solid red;\n      width: 50%;\n    }\n    .clear {\n      clear: both;\n    }\n    .container2 {\n      margin-top:20px;\n      overflow: auto;\n      border: 2px solid red;\n      width: 50%;\n    }\n\n  ```\n\n  [代码运行JSFIDDLE](https://jsfiddle.net/dazhizhemu/25jwjca5/)\n\n  代码运行效果图：\n  ![](/images/overflow-auto.png)","slug":"overflow解决父元素因为子元素漂浮没高度的问题","published":1,"updated":"2017-06-13T07:35:11.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000om4smnz4mkn55","content":"<h2 id=\"子元素漂浮导致父元素没有高度\"><a href=\"#子元素漂浮导致父元素没有高度\" class=\"headerlink\" title=\"子元素漂浮导致父元素没有高度\"></a>子元素漂浮导致父元素没有高度</h2><p>  HTML DOM元素，当子元素设置了float为left或者right时，元素就漂浮起来了，这个时候它就不占用任何的宽高空间了，所以就导致了该元素的父元素的高度不正常，如果全部漂浮，父元素的高度为零。</p>\n<p>  这个时候在其他的一些元素的布局时就会出现问题，比如父元素下面的元素，很可能与父元素重叠，并且在一些需要计算高度的情况下会导致布局错误，界面混乱。</p>\n<h2 id=\"如何解决这问题？\"><a href=\"#如何解决这问题？\" class=\"headerlink\" title=\"如何解决这问题？\"></a>如何解决这问题？</h2><p>  解决这个问题的方法也很简单，在父元素上使用overflow: auto; 这样就可以解决了这个问题，overflow:auto可以清楚子元素的浮动。</p>\n<h2 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h2>  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"child1\"</span>&gt;</span>飘过来<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"child2\"</span>&gt;</span>浮过去<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"clear\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container2\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"child1\"</span>&gt;</span>飘过来<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"child2\"</span>&gt;</span>浮过去<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.child1</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.child2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.container1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clear</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.container2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>:<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>  <a href=\"https://jsfiddle.net/dazhizhemu/25jwjca5/\" target=\"_blank\" rel=\"noopener\">代码运行JSFIDDLE</a></p>\n<p>  代码运行效果图：<br>  <img src=\"/images/overflow-auto.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"子元素漂浮导致父元素没有高度\"><a href=\"#子元素漂浮导致父元素没有高度\" class=\"headerlink\" title=\"子元素漂浮导致父元素没有高度\"></a>子元素漂浮导致父元素没有高度</h2><p>  HTML DOM元素，当子元素设置了float为left或者right时，元素就漂浮起来了，这个时候它就不占用任何的宽高空间了，所以就导致了该元素的父元素的高度不正常，如果全部漂浮，父元素的高度为零。</p>\n<p>  这个时候在其他的一些元素的布局时就会出现问题，比如父元素下面的元素，很可能与父元素重叠，并且在一些需要计算高度的情况下会导致布局错误，界面混乱。</p>\n<h2 id=\"如何解决这问题？\"><a href=\"#如何解决这问题？\" class=\"headerlink\" title=\"如何解决这问题？\"></a>如何解决这问题？</h2><p>  解决这个问题的方法也很简单，在父元素上使用overflow: auto; 这样就可以解决了这个问题，overflow:auto可以清楚子元素的浮动。</p>\n<h2 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h2>  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"child1\"</span>&gt;</span>飘过来<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"child2\"</span>&gt;</span>浮过去<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"clear\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container2\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"child1\"</span>&gt;</span>飘过来<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"child2\"</span>&gt;</span>浮过去<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.child1</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.child2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.container1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clear</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.container2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>:<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>  <a href=\"https://jsfiddle.net/dazhizhemu/25jwjca5/\" target=\"_blank\" rel=\"noopener\">代码运行JSFIDDLE</a></p>\n<p>  代码运行效果图：<br>  <img src=\"/images/overflow-auto.png\" alt=\"\"></p>\n"},{"title":"如何让博客支持HTTPS协议(2017-10-31更新cerbot工具)","date":"2017-10-31T08:16:31.000Z","_content":"\n## 申请https证书\n\n今天突然想搞一下https，因为现在确实是https的天下了，国内很多网站都是https的了，感觉新建个博客还是http的好像有点low，所以就想搞个https支持。\n\n说干就干，其实这个事情还真不是特别麻烦，因为https所以要有ssl的证书，所以首先申请一个ssl证书。\n\n好多可以申请证书网站服务，根据推荐选择了[Let's Encrypt](https://letsencrypt.org/)，原因很简单：免费、快捷、支持多个域名。\n\n证书的申请自己也没搞过，直接找的教程，用了这里的申请教程[SSL证书申请](https://imququ.com/post/letsencrypt-certificate.html)。\n我是按照教程里面的申请下来的，中间生成CSR文件时有点差错，openssl.cnf文件的位置与文章里面的不太一样，用find / -name命令找到的我的机器上的该文件的位置，然后其他的就是一样的了。\n\n申请完证书还需要配置，因为博客用的是nginx，所以接下来需要做的就是在nginx上配置ssl，配置证书以及端口、域名等。\n直接贴一下nginx的相关配置代码：\n\n```javascript\n\nlisten 443;\nserver_name muxblog.tk;\nssl on;#开启ssl\nssl_certificate /home/ssl/chained.pem;#公钥\nssl_certificate_key /home/ssl/domain.key;#密钥\nssl_protocols       TLSv1 TLSv1.1 TLSv1.2;#协议\nssl_prefer_server_ciphers on;#优先服务端加密\nssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;#加密套件/方式\nssl_session_timeout 5m;#超时\n\n```\nnginx配置完成之后重启nginx，用https协议就可以访问自己的博客了。\n\n目前发现的问题\n\n1). 用https访问博客，博客内需要的http资源在chrome浏览器会被认为不安全的，浏览器认为https下面的请求都应该是https的协议。\n解决方法:查资料获取到[小胡子李靖的一篇文章](http://www.cnblogs.com/hustskyking/p/upgrade-insecure-requests.html)，用文章中的方法来解决问题，发现浏览器不提示问题了，css文件的访问没有问题，但是博客内的外链http图片没法访问了，目前未找到好的解决办法，先在此记录。\n\n问题更新，因为实在不想在博客上存储图片等文件，小磁盘，顶不住，所以就找了下支持HTTPS的图床，发现了一个，名字就是[图床001](https://www.tuchuang001.com)，很简单，注册账户就能使用，支持https外链。\n现在是暂时的解决办法，不知道这个图床001的可靠性，能撑多久，解析域名最终是浙江金华，国内图床。\n\n**已经不使用图床001了，反正想着这些东西也是公开的可看的，直接扔github上了。（2017-06-07）**\n\n\n## 证书过期遇到的问题\n\n  今日(2017-06-07)遇到let's encrypt提醒我证书要过期了，于是想要续期证书，按照之前设置的东西进行处理时发现了问题。\n\n  因为已经有了HTTPS，现在证书还没有过期，只是将要过期，这个时候续期发现无法续期。原因也很简单，现在强制HTTP转到了HTTPS，然后证书生成校验时用web请求就无法通过了。\n\n  然后怎么处理呢？需要先把HTTPS强制跳转关闭，就是说可以用http访问的情况下更新https证书。。。。，这个真的太蛋疼了，这种续期的方式不可以接受，想一下其他的办法来更新解决这个问题。\n\n  等找到了来这里更新。\n\n### 更新此问题的解决办法  (2017-10-31)\n\n  在github上，有cerbot工具，用github上提供的这个工具，使用脚本一键更新，或者使用定时执行脚本来自动更新。\n  项目地址：[cerbot](https://github.com/certbot/certbot)\n  具体使用详细阅读readme文件","source":"_posts/如何让博客支持HTTPS协议.md","raw":"---\ntitle: 如何让博客支持HTTPS协议(2017-10-31更新cerbot工具)\ndate: 2017-10-31 16:16:31\ntags: \n- https\n- encrypt\n---\n\n## 申请https证书\n\n今天突然想搞一下https，因为现在确实是https的天下了，国内很多网站都是https的了，感觉新建个博客还是http的好像有点low，所以就想搞个https支持。\n\n说干就干，其实这个事情还真不是特别麻烦，因为https所以要有ssl的证书，所以首先申请一个ssl证书。\n\n好多可以申请证书网站服务，根据推荐选择了[Let's Encrypt](https://letsencrypt.org/)，原因很简单：免费、快捷、支持多个域名。\n\n证书的申请自己也没搞过，直接找的教程，用了这里的申请教程[SSL证书申请](https://imququ.com/post/letsencrypt-certificate.html)。\n我是按照教程里面的申请下来的，中间生成CSR文件时有点差错，openssl.cnf文件的位置与文章里面的不太一样，用find / -name命令找到的我的机器上的该文件的位置，然后其他的就是一样的了。\n\n申请完证书还需要配置，因为博客用的是nginx，所以接下来需要做的就是在nginx上配置ssl，配置证书以及端口、域名等。\n直接贴一下nginx的相关配置代码：\n\n```javascript\n\nlisten 443;\nserver_name muxblog.tk;\nssl on;#开启ssl\nssl_certificate /home/ssl/chained.pem;#公钥\nssl_certificate_key /home/ssl/domain.key;#密钥\nssl_protocols       TLSv1 TLSv1.1 TLSv1.2;#协议\nssl_prefer_server_ciphers on;#优先服务端加密\nssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;#加密套件/方式\nssl_session_timeout 5m;#超时\n\n```\nnginx配置完成之后重启nginx，用https协议就可以访问自己的博客了。\n\n目前发现的问题\n\n1). 用https访问博客，博客内需要的http资源在chrome浏览器会被认为不安全的，浏览器认为https下面的请求都应该是https的协议。\n解决方法:查资料获取到[小胡子李靖的一篇文章](http://www.cnblogs.com/hustskyking/p/upgrade-insecure-requests.html)，用文章中的方法来解决问题，发现浏览器不提示问题了，css文件的访问没有问题，但是博客内的外链http图片没法访问了，目前未找到好的解决办法，先在此记录。\n\n问题更新，因为实在不想在博客上存储图片等文件，小磁盘，顶不住，所以就找了下支持HTTPS的图床，发现了一个，名字就是[图床001](https://www.tuchuang001.com)，很简单，注册账户就能使用，支持https外链。\n现在是暂时的解决办法，不知道这个图床001的可靠性，能撑多久，解析域名最终是浙江金华，国内图床。\n\n**已经不使用图床001了，反正想着这些东西也是公开的可看的，直接扔github上了。（2017-06-07）**\n\n\n## 证书过期遇到的问题\n\n  今日(2017-06-07)遇到let's encrypt提醒我证书要过期了，于是想要续期证书，按照之前设置的东西进行处理时发现了问题。\n\n  因为已经有了HTTPS，现在证书还没有过期，只是将要过期，这个时候续期发现无法续期。原因也很简单，现在强制HTTP转到了HTTPS，然后证书生成校验时用web请求就无法通过了。\n\n  然后怎么处理呢？需要先把HTTPS强制跳转关闭，就是说可以用http访问的情况下更新https证书。。。。，这个真的太蛋疼了，这种续期的方式不可以接受，想一下其他的办法来更新解决这个问题。\n\n  等找到了来这里更新。\n\n### 更新此问题的解决办法  (2017-10-31)\n\n  在github上，有cerbot工具，用github上提供的这个工具，使用脚本一键更新，或者使用定时执行脚本来自动更新。\n  项目地址：[cerbot](https://github.com/certbot/certbot)\n  具体使用详细阅读readme文件","slug":"如何让博客支持HTTPS协议","published":1,"updated":"2017-10-31T09:09:45.484Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000qm4smyg11wuyg","content":"<h2 id=\"申请https证书\"><a href=\"#申请https证书\" class=\"headerlink\" title=\"申请https证书\"></a>申请https证书</h2><p>今天突然想搞一下https，因为现在确实是https的天下了，国内很多网站都是https的了，感觉新建个博客还是http的好像有点low，所以就想搞个https支持。</p>\n<p>说干就干，其实这个事情还真不是特别麻烦，因为https所以要有ssl的证书，所以首先申请一个ssl证书。</p>\n<p>好多可以申请证书网站服务，根据推荐选择了<a href=\"https://letsencrypt.org/\" target=\"_blank\" rel=\"noopener\">Let’s Encrypt</a>，原因很简单：免费、快捷、支持多个域名。</p>\n<p>证书的申请自己也没搞过，直接找的教程，用了这里的申请教程<a href=\"https://imququ.com/post/letsencrypt-certificate.html\" target=\"_blank\" rel=\"noopener\">SSL证书申请</a>。<br>我是按照教程里面的申请下来的，中间生成CSR文件时有点差错，openssl.cnf文件的位置与文章里面的不太一样，用find / -name命令找到的我的机器上的该文件的位置，然后其他的就是一样的了。</p>\n<p>申请完证书还需要配置，因为博客用的是nginx，所以接下来需要做的就是在nginx上配置ssl，配置证书以及端口、域名等。<br>直接贴一下nginx的相关配置代码：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">listen <span class=\"number\">443</span>;</span><br><span class=\"line\">server_name muxblog.tk;</span><br><span class=\"line\">ssl on;#开启ssl</span><br><span class=\"line\">ssl_certificate /home/ssl/chained.pem;#公钥</span><br><span class=\"line\">ssl_certificate_key /home/ssl/domain.key;#密钥</span><br><span class=\"line\">ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;#协议</span><br><span class=\"line\">ssl_prefer_server_ciphers on;#优先服务端加密</span><br><span class=\"line\">ssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;#加密套件/方式</span><br><span class=\"line\">ssl_session_timeout 5m;#超时</span><br></pre></td></tr></table></figure>\n<p>nginx配置完成之后重启nginx，用https协议就可以访问自己的博客了。</p>\n<p>目前发现的问题</p>\n<p>1). 用https访问博客，博客内需要的http资源在chrome浏览器会被认为不安全的，浏览器认为https下面的请求都应该是https的协议。<br>解决方法:查资料获取到<a href=\"http://www.cnblogs.com/hustskyking/p/upgrade-insecure-requests.html\" target=\"_blank\" rel=\"noopener\">小胡子李靖的一篇文章</a>，用文章中的方法来解决问题，发现浏览器不提示问题了，css文件的访问没有问题，但是博客内的外链http图片没法访问了，目前未找到好的解决办法，先在此记录。</p>\n<p>问题更新，因为实在不想在博客上存储图片等文件，小磁盘，顶不住，所以就找了下支持HTTPS的图床，发现了一个，名字就是<a href=\"https://www.tuchuang001.com\" target=\"_blank\" rel=\"noopener\">图床001</a>，很简单，注册账户就能使用，支持https外链。<br>现在是暂时的解决办法，不知道这个图床001的可靠性，能撑多久，解析域名最终是浙江金华，国内图床。</p>\n<p><strong>已经不使用图床001了，反正想着这些东西也是公开的可看的，直接扔github上了。（2017-06-07）</strong></p>\n<h2 id=\"证书过期遇到的问题\"><a href=\"#证书过期遇到的问题\" class=\"headerlink\" title=\"证书过期遇到的问题\"></a>证书过期遇到的问题</h2><p>  今日(2017-06-07)遇到let’s encrypt提醒我证书要过期了，于是想要续期证书，按照之前设置的东西进行处理时发现了问题。</p>\n<p>  因为已经有了HTTPS，现在证书还没有过期，只是将要过期，这个时候续期发现无法续期。原因也很简单，现在强制HTTP转到了HTTPS，然后证书生成校验时用web请求就无法通过了。</p>\n<p>  然后怎么处理呢？需要先把HTTPS强制跳转关闭，就是说可以用http访问的情况下更新https证书。。。。，这个真的太蛋疼了，这种续期的方式不可以接受，想一下其他的办法来更新解决这个问题。</p>\n<p>  等找到了来这里更新。</p>\n<h3 id=\"更新此问题的解决办法-2017-10-31\"><a href=\"#更新此问题的解决办法-2017-10-31\" class=\"headerlink\" title=\"更新此问题的解决办法  (2017-10-31)\"></a>更新此问题的解决办法  (2017-10-31)</h3><p>  在github上，有cerbot工具，用github上提供的这个工具，使用脚本一键更新，或者使用定时执行脚本来自动更新。<br>  项目地址：<a href=\"https://github.com/certbot/certbot\" target=\"_blank\" rel=\"noopener\">cerbot</a><br>  具体使用详细阅读readme文件</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"申请https证书\"><a href=\"#申请https证书\" class=\"headerlink\" title=\"申请https证书\"></a>申请https证书</h2><p>今天突然想搞一下https，因为现在确实是https的天下了，国内很多网站都是https的了，感觉新建个博客还是http的好像有点low，所以就想搞个https支持。</p>\n<p>说干就干，其实这个事情还真不是特别麻烦，因为https所以要有ssl的证书，所以首先申请一个ssl证书。</p>\n<p>好多可以申请证书网站服务，根据推荐选择了<a href=\"https://letsencrypt.org/\" target=\"_blank\" rel=\"noopener\">Let’s Encrypt</a>，原因很简单：免费、快捷、支持多个域名。</p>\n<p>证书的申请自己也没搞过，直接找的教程，用了这里的申请教程<a href=\"https://imququ.com/post/letsencrypt-certificate.html\" target=\"_blank\" rel=\"noopener\">SSL证书申请</a>。<br>我是按照教程里面的申请下来的，中间生成CSR文件时有点差错，openssl.cnf文件的位置与文章里面的不太一样，用find / -name命令找到的我的机器上的该文件的位置，然后其他的就是一样的了。</p>\n<p>申请完证书还需要配置，因为博客用的是nginx，所以接下来需要做的就是在nginx上配置ssl，配置证书以及端口、域名等。<br>直接贴一下nginx的相关配置代码：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">listen <span class=\"number\">443</span>;</span><br><span class=\"line\">server_name muxblog.tk;</span><br><span class=\"line\">ssl on;#开启ssl</span><br><span class=\"line\">ssl_certificate /home/ssl/chained.pem;#公钥</span><br><span class=\"line\">ssl_certificate_key /home/ssl/domain.key;#密钥</span><br><span class=\"line\">ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;#协议</span><br><span class=\"line\">ssl_prefer_server_ciphers on;#优先服务端加密</span><br><span class=\"line\">ssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;#加密套件/方式</span><br><span class=\"line\">ssl_session_timeout 5m;#超时</span><br></pre></td></tr></table></figure>\n<p>nginx配置完成之后重启nginx，用https协议就可以访问自己的博客了。</p>\n<p>目前发现的问题</p>\n<p>1). 用https访问博客，博客内需要的http资源在chrome浏览器会被认为不安全的，浏览器认为https下面的请求都应该是https的协议。<br>解决方法:查资料获取到<a href=\"http://www.cnblogs.com/hustskyking/p/upgrade-insecure-requests.html\" target=\"_blank\" rel=\"noopener\">小胡子李靖的一篇文章</a>，用文章中的方法来解决问题，发现浏览器不提示问题了，css文件的访问没有问题，但是博客内的外链http图片没法访问了，目前未找到好的解决办法，先在此记录。</p>\n<p>问题更新，因为实在不想在博客上存储图片等文件，小磁盘，顶不住，所以就找了下支持HTTPS的图床，发现了一个，名字就是<a href=\"https://www.tuchuang001.com\" target=\"_blank\" rel=\"noopener\">图床001</a>，很简单，注册账户就能使用，支持https外链。<br>现在是暂时的解决办法，不知道这个图床001的可靠性，能撑多久，解析域名最终是浙江金华，国内图床。</p>\n<p><strong>已经不使用图床001了，反正想着这些东西也是公开的可看的，直接扔github上了。（2017-06-07）</strong></p>\n<h2 id=\"证书过期遇到的问题\"><a href=\"#证书过期遇到的问题\" class=\"headerlink\" title=\"证书过期遇到的问题\"></a>证书过期遇到的问题</h2><p>  今日(2017-06-07)遇到let’s encrypt提醒我证书要过期了，于是想要续期证书，按照之前设置的东西进行处理时发现了问题。</p>\n<p>  因为已经有了HTTPS，现在证书还没有过期，只是将要过期，这个时候续期发现无法续期。原因也很简单，现在强制HTTP转到了HTTPS，然后证书生成校验时用web请求就无法通过了。</p>\n<p>  然后怎么处理呢？需要先把HTTPS强制跳转关闭，就是说可以用http访问的情况下更新https证书。。。。，这个真的太蛋疼了，这种续期的方式不可以接受，想一下其他的办法来更新解决这个问题。</p>\n<p>  等找到了来这里更新。</p>\n<h3 id=\"更新此问题的解决办法-2017-10-31\"><a href=\"#更新此问题的解决办法-2017-10-31\" class=\"headerlink\" title=\"更新此问题的解决办法  (2017-10-31)\"></a>更新此问题的解决办法  (2017-10-31)</h3><p>  在github上，有cerbot工具，用github上提供的这个工具，使用脚本一键更新，或者使用定时执行脚本来自动更新。<br>  项目地址：<a href=\"https://github.com/certbot/certbot\" target=\"_blank\" rel=\"noopener\">cerbot</a><br>  具体使用详细阅读readme文件</p>\n"},{"title":"关于订阅内容的反思","date":"2017-05-18T02:46:50.000Z","_content":"\n### 为什么订阅？\n\n  为什么会订阅这个RSS/微信文章/...？？\n\n  A. 因为当初读到这个源下分享/发布的某一篇文章，觉得文章真的写的很好，于是就把这个文章源订阅了。\n\n  B. 想查询某些方面的资料，于是就看到了别人写的资源推荐或者或者根据搜索引擎搜索到了，订阅了相关源。\n  \n  C. 一直关注着某个人/网站/...等资源，在那里面进行了推荐，因为出于对这个源/人/网站本身的信任，所以就订阅了。\n\n  一般的订阅原因就是这样的，不出这几种。\n\n\n### 阅读情况如何？\n\n  那订阅之后的阅读情况又如何呢？\n\n  现在的我一般就是这几种情况：\n\n  A. 这个源真的是我的需求，推荐的内容也确实跟我想要想看的符合，我经常看这个源的内容，这种对自己是优质订阅源。\n\n  B. 这个源订阅订阅了，但是发文章/内容不是很频繁，不过内容全部是精品内容，写的人也用心，发出来的东西也是高品质，每次看文章都会给人以相关的收获，无论是知识上，还是工具、内容等其他的东西。这种订阅源对自己就是绝对的优质订阅源了。\n\n  C. 这个订阅源发的东西可能也不多，也不经常看，偶尔看一下，这种对自己就是一般源，不必放弃，放在那里偶尔看一下即可。\n\n  D. 这个源发的内容很多/很少，但是自己几乎从来不看，就是看着它的文章/内容数目不断的增长，这个订阅源对自己而言就是没什么用的订阅源了。\n\n### 如何处理不常阅读的订阅源？\n\n  怎么处理这种不常阅读的订阅源呢？\n\n  A. 对于上面D类的订阅源，应该直接舍弃，**并且要反思自己为什么会订阅它，以后订阅时应该提前甄别**\n\n  B. 对于那种发文章不多，但是也偶尔看一下的订阅源，应该开辟一个专门的处理栏目，将这一类的订阅源规整到里面（如何订阅内容支持自己整理，比如RSS支持，但是微信订阅号就不支持）。\n","source":"_posts/关于订阅内容的反思.md","raw":"---\ntitle: 关于订阅内容的反思\ndate: 2017-05-18 10:46:50\ntags:\n---\n\n### 为什么订阅？\n\n  为什么会订阅这个RSS/微信文章/...？？\n\n  A. 因为当初读到这个源下分享/发布的某一篇文章，觉得文章真的写的很好，于是就把这个文章源订阅了。\n\n  B. 想查询某些方面的资料，于是就看到了别人写的资源推荐或者或者根据搜索引擎搜索到了，订阅了相关源。\n  \n  C. 一直关注着某个人/网站/...等资源，在那里面进行了推荐，因为出于对这个源/人/网站本身的信任，所以就订阅了。\n\n  一般的订阅原因就是这样的，不出这几种。\n\n\n### 阅读情况如何？\n\n  那订阅之后的阅读情况又如何呢？\n\n  现在的我一般就是这几种情况：\n\n  A. 这个源真的是我的需求，推荐的内容也确实跟我想要想看的符合，我经常看这个源的内容，这种对自己是优质订阅源。\n\n  B. 这个源订阅订阅了，但是发文章/内容不是很频繁，不过内容全部是精品内容，写的人也用心，发出来的东西也是高品质，每次看文章都会给人以相关的收获，无论是知识上，还是工具、内容等其他的东西。这种订阅源对自己就是绝对的优质订阅源了。\n\n  C. 这个订阅源发的东西可能也不多，也不经常看，偶尔看一下，这种对自己就是一般源，不必放弃，放在那里偶尔看一下即可。\n\n  D. 这个源发的内容很多/很少，但是自己几乎从来不看，就是看着它的文章/内容数目不断的增长，这个订阅源对自己而言就是没什么用的订阅源了。\n\n### 如何处理不常阅读的订阅源？\n\n  怎么处理这种不常阅读的订阅源呢？\n\n  A. 对于上面D类的订阅源，应该直接舍弃，**并且要反思自己为什么会订阅它，以后订阅时应该提前甄别**\n\n  B. 对于那种发文章不多，但是也偶尔看一下的订阅源，应该开辟一个专门的处理栏目，将这一类的订阅源规整到里面（如何订阅内容支持自己整理，比如RSS支持，但是微信订阅号就不支持）。\n","slug":"关于订阅内容的反思","published":1,"updated":"2017-05-18T03:10:05.839Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000tm4smt2ntx1e4","content":"<h3 id=\"为什么订阅？\"><a href=\"#为什么订阅？\" class=\"headerlink\" title=\"为什么订阅？\"></a>为什么订阅？</h3><p>  为什么会订阅这个RSS/微信文章/…？？</p>\n<p>  A. 因为当初读到这个源下分享/发布的某一篇文章，觉得文章真的写的很好，于是就把这个文章源订阅了。</p>\n<p>  B. 想查询某些方面的资料，于是就看到了别人写的资源推荐或者或者根据搜索引擎搜索到了，订阅了相关源。</p>\n<p>  C. 一直关注着某个人/网站/…等资源，在那里面进行了推荐，因为出于对这个源/人/网站本身的信任，所以就订阅了。</p>\n<p>  一般的订阅原因就是这样的，不出这几种。</p>\n<h3 id=\"阅读情况如何？\"><a href=\"#阅读情况如何？\" class=\"headerlink\" title=\"阅读情况如何？\"></a>阅读情况如何？</h3><p>  那订阅之后的阅读情况又如何呢？</p>\n<p>  现在的我一般就是这几种情况：</p>\n<p>  A. 这个源真的是我的需求，推荐的内容也确实跟我想要想看的符合，我经常看这个源的内容，这种对自己是优质订阅源。</p>\n<p>  B. 这个源订阅订阅了，但是发文章/内容不是很频繁，不过内容全部是精品内容，写的人也用心，发出来的东西也是高品质，每次看文章都会给人以相关的收获，无论是知识上，还是工具、内容等其他的东西。这种订阅源对自己就是绝对的优质订阅源了。</p>\n<p>  C. 这个订阅源发的东西可能也不多，也不经常看，偶尔看一下，这种对自己就是一般源，不必放弃，放在那里偶尔看一下即可。</p>\n<p>  D. 这个源发的内容很多/很少，但是自己几乎从来不看，就是看着它的文章/内容数目不断的增长，这个订阅源对自己而言就是没什么用的订阅源了。</p>\n<h3 id=\"如何处理不常阅读的订阅源？\"><a href=\"#如何处理不常阅读的订阅源？\" class=\"headerlink\" title=\"如何处理不常阅读的订阅源？\"></a>如何处理不常阅读的订阅源？</h3><p>  怎么处理这种不常阅读的订阅源呢？</p>\n<p>  A. 对于上面D类的订阅源，应该直接舍弃，<strong>并且要反思自己为什么会订阅它，以后订阅时应该提前甄别</strong></p>\n<p>  B. 对于那种发文章不多，但是也偶尔看一下的订阅源，应该开辟一个专门的处理栏目，将这一类的订阅源规整到里面（如何订阅内容支持自己整理，比如RSS支持，但是微信订阅号就不支持）。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"为什么订阅？\"><a href=\"#为什么订阅？\" class=\"headerlink\" title=\"为什么订阅？\"></a>为什么订阅？</h3><p>  为什么会订阅这个RSS/微信文章/…？？</p>\n<p>  A. 因为当初读到这个源下分享/发布的某一篇文章，觉得文章真的写的很好，于是就把这个文章源订阅了。</p>\n<p>  B. 想查询某些方面的资料，于是就看到了别人写的资源推荐或者或者根据搜索引擎搜索到了，订阅了相关源。</p>\n<p>  C. 一直关注着某个人/网站/…等资源，在那里面进行了推荐，因为出于对这个源/人/网站本身的信任，所以就订阅了。</p>\n<p>  一般的订阅原因就是这样的，不出这几种。</p>\n<h3 id=\"阅读情况如何？\"><a href=\"#阅读情况如何？\" class=\"headerlink\" title=\"阅读情况如何？\"></a>阅读情况如何？</h3><p>  那订阅之后的阅读情况又如何呢？</p>\n<p>  现在的我一般就是这几种情况：</p>\n<p>  A. 这个源真的是我的需求，推荐的内容也确实跟我想要想看的符合，我经常看这个源的内容，这种对自己是优质订阅源。</p>\n<p>  B. 这个源订阅订阅了，但是发文章/内容不是很频繁，不过内容全部是精品内容，写的人也用心，发出来的东西也是高品质，每次看文章都会给人以相关的收获，无论是知识上，还是工具、内容等其他的东西。这种订阅源对自己就是绝对的优质订阅源了。</p>\n<p>  C. 这个订阅源发的东西可能也不多，也不经常看，偶尔看一下，这种对自己就是一般源，不必放弃，放在那里偶尔看一下即可。</p>\n<p>  D. 这个源发的内容很多/很少，但是自己几乎从来不看，就是看着它的文章/内容数目不断的增长，这个订阅源对自己而言就是没什么用的订阅源了。</p>\n<h3 id=\"如何处理不常阅读的订阅源？\"><a href=\"#如何处理不常阅读的订阅源？\" class=\"headerlink\" title=\"如何处理不常阅读的订阅源？\"></a>如何处理不常阅读的订阅源？</h3><p>  怎么处理这种不常阅读的订阅源呢？</p>\n<p>  A. 对于上面D类的订阅源，应该直接舍弃，<strong>并且要反思自己为什么会订阅它，以后订阅时应该提前甄别</strong></p>\n<p>  B. 对于那种发文章不多，但是也偶尔看一下的订阅源，应该开辟一个专门的处理栏目，将这一类的订阅源规整到里面（如何订阅内容支持自己整理，比如RSS支持，但是微信订阅号就不支持）。</p>\n"},{"title":"如何解读谯周","date":"2018-12-24T09:02:51.000Z","_content":"## 对历史人物的解读\n\n  历史上有很多人，他们都非常有名气，当然名也分好名声与坏名声，有的名扬千古，有的遗臭万年，有的褒贬不一，但是这些人都是历史上重要的人物，是学习研究中华历史不可避免的人物。对这些人物的读解，不同的人有不同的看法。确实，一个人本身是多元的，对人的解读也要从不同的方向、角度进行。\n\n## 谯周\n  \n  三国时期蜀国的谯周，之前我对他的了解都是从别人的嘴里说出来的，没看过相关的典籍，对谯周的印象就是投降派、卖国贼。因为他力主可能还有一战之力蜀国向偷渡阴平成功的邓艾投降，在这个观点上的人对他进行激烈的批判。认为他对蜀汉亡国要付主要的责任。\n\n  今天看到了《三国志》里面对谯周的记载，个人感觉作者陈寿对谯周还是比较推崇的，作者本人也曾与他交流，受过教诲。在书中看到了谯周的一些话语，从书中记载来看他并不是阿谀投降的小人。\n\n  三国志当中有这么一段记载：\n  > 后主立太子，以周为仆，转家令。时后主颇出游观，增广声乐。周上疏谏曰：“昔王莽之败，豪杰并起，跨州据郡，欲弄神器，于是贤才智士思望所归，未必以其势之广狭，惟其德之薄厚也。是故于时更始、公孙述及诸有大众者多已广大，然莫不快情恣欲，怠于为善，游猎饮食，不恤民物。世祖初入河北，冯异等劝之曰：‘当行人所不能为。’遂务理寃狱，节俭饮食，动遵法度，故北州歌叹，声布四远。于是邓禹自南阳追之，吴汉、寇恂未识世祖，遥闻德行，遂以权计举渔阳、上谷突骑迎于广阿。其馀望风慕德者邳肜、耿纯、刘植之徒，至于舆病赍棺，襁负而至者，不可胜数，故能以弱为强，屠王郎，吞铜马，折赤眉而成帝业也。及在洛阳，甞欲小出，车驾已御，铫期谏曰：‘天下未宁，臣诚不愿陛下细行数出。’即时还车。及征隗嚣，颍川盗起，世祖还洛阳，但遣寇恂往，恂曰：‘颍川以陛下远征，故奸猾起叛，未知陛下还，恐不时降；陛下自临，颍川贼必即降。’遂至颍川，竟如恂言。故非急务，欲小出不敢，至于急务，欲自安不为，故帝者之欲善也如此！故传曰‘百姓不徒附’，诚以德先之也。今汉遭厄运，天下三分，雄哲之士思望之时也。陛下天姿至孝，丧逾三年，言及陨涕，虽曾闵不过也。敬贤任才，使之尽力，有逾成康。故国内和一，大小勠力，臣所不能陈。然臣不胜大愿，愿复广人所不能者。夫挽大重者，其用力苦不众，拔大艰者，其善术苦不广，且承事宗庙者，非徒求福佑，所以率民尊上也。至于四时之祀，或有不临，池苑之观，或有仍出，臣之愚滞，私不自安。夫忧责在身者，不暇尽乐，先帝之志，堂构未成，诚非尽乐之时。愿省减乐官、后宫所增造，但奉修先帝所施，下为子孙节俭之教。”徙为中散大夫，犹侍太子。\n\n  谯周因为谏阻刘禅喜游玩、增声乐，被贬官，可见绝对不是那种阿谀之人，为了刘禅统治也好，为了百姓也好，都是有实际行动的，所以这种人不可能是完全因为个人私利劝刘禅投降蜀国的。当然人做事都有目的，他是益州本地氏族，可能不希望在这里再有战争。\n\n  其实蜀国是否投降都决定于一个人身上，那就是刘禅，刘禅如果不投降，谁说什么都没用，所以蜀国投降了，不应该把责任推到其他人身上。中国人有个特点，那就是一把手掌握一切，你既然有了做一切决策的权力，那么做了决策后的所有不良后果就应该都由一把手来承担责任，这就是有多大的权力就有多大的责任。\n\n## 引申\n\n  因为这个事情我又想起了秦桧夫妇一直背负着杀害岳飞的骂名，其实秦桧是替宋高宗背负了骂名啊，因为最终下命令杀岳飞的是皇帝，所以这个责任必须由皇帝来负责。中国古代因为要维护皇帝的名声，要维护皇帝的脸面经常把一些事情的责任推到什么贪官（严嵩）、妃子（妲己、杨贵妃）等等身上，其实目的就是一个，去掉皇帝的责任，推到下面的人身上，维护皇帝，其实这些事情最该负责的就是皇帝，没有其他任何第二责任人。\n\n  但是这些恶劣事情的发生是不可避免的，因为皇帝只是皇帝，是一个位置，皇帝不是圣人，他会有缺点，会有各种欲望。在他这个位置的人会有刻意的隐藏自己的这些爱好、欲望、弱点，但是总是会被抓住然后被利用（相互利用），最终出现各种恶果。\n\n  在这方面也有一些经典的对话记录，比如宇文泰与苏绰对答，用贪官、弃贪官、杀贪官，可谓对人性、对世态分析的极其透彻了。但是却不用在好的方面，只是为了满足自己的个人贪欲。","source":"_posts/如何解读谯周.md","raw":"---\ntitle: 如何解读谯周\ndate: 2018-12-24 17:02:51\ntags: 历史\n---\n## 对历史人物的解读\n\n  历史上有很多人，他们都非常有名气，当然名也分好名声与坏名声，有的名扬千古，有的遗臭万年，有的褒贬不一，但是这些人都是历史上重要的人物，是学习研究中华历史不可避免的人物。对这些人物的读解，不同的人有不同的看法。确实，一个人本身是多元的，对人的解读也要从不同的方向、角度进行。\n\n## 谯周\n  \n  三国时期蜀国的谯周，之前我对他的了解都是从别人的嘴里说出来的，没看过相关的典籍，对谯周的印象就是投降派、卖国贼。因为他力主可能还有一战之力蜀国向偷渡阴平成功的邓艾投降，在这个观点上的人对他进行激烈的批判。认为他对蜀汉亡国要付主要的责任。\n\n  今天看到了《三国志》里面对谯周的记载，个人感觉作者陈寿对谯周还是比较推崇的，作者本人也曾与他交流，受过教诲。在书中看到了谯周的一些话语，从书中记载来看他并不是阿谀投降的小人。\n\n  三国志当中有这么一段记载：\n  > 后主立太子，以周为仆，转家令。时后主颇出游观，增广声乐。周上疏谏曰：“昔王莽之败，豪杰并起，跨州据郡，欲弄神器，于是贤才智士思望所归，未必以其势之广狭，惟其德之薄厚也。是故于时更始、公孙述及诸有大众者多已广大，然莫不快情恣欲，怠于为善，游猎饮食，不恤民物。世祖初入河北，冯异等劝之曰：‘当行人所不能为。’遂务理寃狱，节俭饮食，动遵法度，故北州歌叹，声布四远。于是邓禹自南阳追之，吴汉、寇恂未识世祖，遥闻德行，遂以权计举渔阳、上谷突骑迎于广阿。其馀望风慕德者邳肜、耿纯、刘植之徒，至于舆病赍棺，襁负而至者，不可胜数，故能以弱为强，屠王郎，吞铜马，折赤眉而成帝业也。及在洛阳，甞欲小出，车驾已御，铫期谏曰：‘天下未宁，臣诚不愿陛下细行数出。’即时还车。及征隗嚣，颍川盗起，世祖还洛阳，但遣寇恂往，恂曰：‘颍川以陛下远征，故奸猾起叛，未知陛下还，恐不时降；陛下自临，颍川贼必即降。’遂至颍川，竟如恂言。故非急务，欲小出不敢，至于急务，欲自安不为，故帝者之欲善也如此！故传曰‘百姓不徒附’，诚以德先之也。今汉遭厄运，天下三分，雄哲之士思望之时也。陛下天姿至孝，丧逾三年，言及陨涕，虽曾闵不过也。敬贤任才，使之尽力，有逾成康。故国内和一，大小勠力，臣所不能陈。然臣不胜大愿，愿复广人所不能者。夫挽大重者，其用力苦不众，拔大艰者，其善术苦不广，且承事宗庙者，非徒求福佑，所以率民尊上也。至于四时之祀，或有不临，池苑之观，或有仍出，臣之愚滞，私不自安。夫忧责在身者，不暇尽乐，先帝之志，堂构未成，诚非尽乐之时。愿省减乐官、后宫所增造，但奉修先帝所施，下为子孙节俭之教。”徙为中散大夫，犹侍太子。\n\n  谯周因为谏阻刘禅喜游玩、增声乐，被贬官，可见绝对不是那种阿谀之人，为了刘禅统治也好，为了百姓也好，都是有实际行动的，所以这种人不可能是完全因为个人私利劝刘禅投降蜀国的。当然人做事都有目的，他是益州本地氏族，可能不希望在这里再有战争。\n\n  其实蜀国是否投降都决定于一个人身上，那就是刘禅，刘禅如果不投降，谁说什么都没用，所以蜀国投降了，不应该把责任推到其他人身上。中国人有个特点，那就是一把手掌握一切，你既然有了做一切决策的权力，那么做了决策后的所有不良后果就应该都由一把手来承担责任，这就是有多大的权力就有多大的责任。\n\n## 引申\n\n  因为这个事情我又想起了秦桧夫妇一直背负着杀害岳飞的骂名，其实秦桧是替宋高宗背负了骂名啊，因为最终下命令杀岳飞的是皇帝，所以这个责任必须由皇帝来负责。中国古代因为要维护皇帝的名声，要维护皇帝的脸面经常把一些事情的责任推到什么贪官（严嵩）、妃子（妲己、杨贵妃）等等身上，其实目的就是一个，去掉皇帝的责任，推到下面的人身上，维护皇帝，其实这些事情最该负责的就是皇帝，没有其他任何第二责任人。\n\n  但是这些恶劣事情的发生是不可避免的，因为皇帝只是皇帝，是一个位置，皇帝不是圣人，他会有缺点，会有各种欲望。在他这个位置的人会有刻意的隐藏自己的这些爱好、欲望、弱点，但是总是会被抓住然后被利用（相互利用），最终出现各种恶果。\n\n  在这方面也有一些经典的对话记录，比如宇文泰与苏绰对答，用贪官、弃贪官、杀贪官，可谓对人性、对世态分析的极其透彻了。但是却不用在好的方面，只是为了满足自己的个人贪欲。","slug":"如何解读谯周","published":1,"updated":"2018-12-24T09:06:52.739Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3a000vm4smet8y43s7","content":"<h2 id=\"对历史人物的解读\"><a href=\"#对历史人物的解读\" class=\"headerlink\" title=\"对历史人物的解读\"></a>对历史人物的解读</h2><p>  历史上有很多人，他们都非常有名气，当然名也分好名声与坏名声，有的名扬千古，有的遗臭万年，有的褒贬不一，但是这些人都是历史上重要的人物，是学习研究中华历史不可避免的人物。对这些人物的读解，不同的人有不同的看法。确实，一个人本身是多元的，对人的解读也要从不同的方向、角度进行。</p>\n<h2 id=\"谯周\"><a href=\"#谯周\" class=\"headerlink\" title=\"谯周\"></a>谯周</h2><p>  三国时期蜀国的谯周，之前我对他的了解都是从别人的嘴里说出来的，没看过相关的典籍，对谯周的印象就是投降派、卖国贼。因为他力主可能还有一战之力蜀国向偷渡阴平成功的邓艾投降，在这个观点上的人对他进行激烈的批判。认为他对蜀汉亡国要付主要的责任。</p>\n<p>  今天看到了《三国志》里面对谯周的记载，个人感觉作者陈寿对谯周还是比较推崇的，作者本人也曾与他交流，受过教诲。在书中看到了谯周的一些话语，从书中记载来看他并不是阿谀投降的小人。</p>\n<p>  三国志当中有这么一段记载：</p>\n<blockquote>\n<p>后主立太子，以周为仆，转家令。时后主颇出游观，增广声乐。周上疏谏曰：“昔王莽之败，豪杰并起，跨州据郡，欲弄神器，于是贤才智士思望所归，未必以其势之广狭，惟其德之薄厚也。是故于时更始、公孙述及诸有大众者多已广大，然莫不快情恣欲，怠于为善，游猎饮食，不恤民物。世祖初入河北，冯异等劝之曰：‘当行人所不能为。’遂务理寃狱，节俭饮食，动遵法度，故北州歌叹，声布四远。于是邓禹自南阳追之，吴汉、寇恂未识世祖，遥闻德行，遂以权计举渔阳、上谷突骑迎于广阿。其馀望风慕德者邳肜、耿纯、刘植之徒，至于舆病赍棺，襁负而至者，不可胜数，故能以弱为强，屠王郎，吞铜马，折赤眉而成帝业也。及在洛阳，甞欲小出，车驾已御，铫期谏曰：‘天下未宁，臣诚不愿陛下细行数出。’即时还车。及征隗嚣，颍川盗起，世祖还洛阳，但遣寇恂往，恂曰：‘颍川以陛下远征，故奸猾起叛，未知陛下还，恐不时降；陛下自临，颍川贼必即降。’遂至颍川，竟如恂言。故非急务，欲小出不敢，至于急务，欲自安不为，故帝者之欲善也如此！故传曰‘百姓不徒附’，诚以德先之也。今汉遭厄运，天下三分，雄哲之士思望之时也。陛下天姿至孝，丧逾三年，言及陨涕，虽曾闵不过也。敬贤任才，使之尽力，有逾成康。故国内和一，大小勠力，臣所不能陈。然臣不胜大愿，愿复广人所不能者。夫挽大重者，其用力苦不众，拔大艰者，其善术苦不广，且承事宗庙者，非徒求福佑，所以率民尊上也。至于四时之祀，或有不临，池苑之观，或有仍出，臣之愚滞，私不自安。夫忧责在身者，不暇尽乐，先帝之志，堂构未成，诚非尽乐之时。愿省减乐官、后宫所增造，但奉修先帝所施，下为子孙节俭之教。”徙为中散大夫，犹侍太子。</p>\n</blockquote>\n<p>  谯周因为谏阻刘禅喜游玩、增声乐，被贬官，可见绝对不是那种阿谀之人，为了刘禅统治也好，为了百姓也好，都是有实际行动的，所以这种人不可能是完全因为个人私利劝刘禅投降蜀国的。当然人做事都有目的，他是益州本地氏族，可能不希望在这里再有战争。</p>\n<p>  其实蜀国是否投降都决定于一个人身上，那就是刘禅，刘禅如果不投降，谁说什么都没用，所以蜀国投降了，不应该把责任推到其他人身上。中国人有个特点，那就是一把手掌握一切，你既然有了做一切决策的权力，那么做了决策后的所有不良后果就应该都由一把手来承担责任，这就是有多大的权力就有多大的责任。</p>\n<h2 id=\"引申\"><a href=\"#引申\" class=\"headerlink\" title=\"引申\"></a>引申</h2><p>  因为这个事情我又想起了秦桧夫妇一直背负着杀害岳飞的骂名，其实秦桧是替宋高宗背负了骂名啊，因为最终下命令杀岳飞的是皇帝，所以这个责任必须由皇帝来负责。中国古代因为要维护皇帝的名声，要维护皇帝的脸面经常把一些事情的责任推到什么贪官（严嵩）、妃子（妲己、杨贵妃）等等身上，其实目的就是一个，去掉皇帝的责任，推到下面的人身上，维护皇帝，其实这些事情最该负责的就是皇帝，没有其他任何第二责任人。</p>\n<p>  但是这些恶劣事情的发生是不可避免的，因为皇帝只是皇帝，是一个位置，皇帝不是圣人，他会有缺点，会有各种欲望。在他这个位置的人会有刻意的隐藏自己的这些爱好、欲望、弱点，但是总是会被抓住然后被利用（相互利用），最终出现各种恶果。</p>\n<p>  在这方面也有一些经典的对话记录，比如宇文泰与苏绰对答，用贪官、弃贪官、杀贪官，可谓对人性、对世态分析的极其透彻了。但是却不用在好的方面，只是为了满足自己的个人贪欲。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"对历史人物的解读\"><a href=\"#对历史人物的解读\" class=\"headerlink\" title=\"对历史人物的解读\"></a>对历史人物的解读</h2><p>  历史上有很多人，他们都非常有名气，当然名也分好名声与坏名声，有的名扬千古，有的遗臭万年，有的褒贬不一，但是这些人都是历史上重要的人物，是学习研究中华历史不可避免的人物。对这些人物的读解，不同的人有不同的看法。确实，一个人本身是多元的，对人的解读也要从不同的方向、角度进行。</p>\n<h2 id=\"谯周\"><a href=\"#谯周\" class=\"headerlink\" title=\"谯周\"></a>谯周</h2><p>  三国时期蜀国的谯周，之前我对他的了解都是从别人的嘴里说出来的，没看过相关的典籍，对谯周的印象就是投降派、卖国贼。因为他力主可能还有一战之力蜀国向偷渡阴平成功的邓艾投降，在这个观点上的人对他进行激烈的批判。认为他对蜀汉亡国要付主要的责任。</p>\n<p>  今天看到了《三国志》里面对谯周的记载，个人感觉作者陈寿对谯周还是比较推崇的，作者本人也曾与他交流，受过教诲。在书中看到了谯周的一些话语，从书中记载来看他并不是阿谀投降的小人。</p>\n<p>  三国志当中有这么一段记载：</p>\n<blockquote>\n<p>后主立太子，以周为仆，转家令。时后主颇出游观，增广声乐。周上疏谏曰：“昔王莽之败，豪杰并起，跨州据郡，欲弄神器，于是贤才智士思望所归，未必以其势之广狭，惟其德之薄厚也。是故于时更始、公孙述及诸有大众者多已广大，然莫不快情恣欲，怠于为善，游猎饮食，不恤民物。世祖初入河北，冯异等劝之曰：‘当行人所不能为。’遂务理寃狱，节俭饮食，动遵法度，故北州歌叹，声布四远。于是邓禹自南阳追之，吴汉、寇恂未识世祖，遥闻德行，遂以权计举渔阳、上谷突骑迎于广阿。其馀望风慕德者邳肜、耿纯、刘植之徒，至于舆病赍棺，襁负而至者，不可胜数，故能以弱为强，屠王郎，吞铜马，折赤眉而成帝业也。及在洛阳，甞欲小出，车驾已御，铫期谏曰：‘天下未宁，臣诚不愿陛下细行数出。’即时还车。及征隗嚣，颍川盗起，世祖还洛阳，但遣寇恂往，恂曰：‘颍川以陛下远征，故奸猾起叛，未知陛下还，恐不时降；陛下自临，颍川贼必即降。’遂至颍川，竟如恂言。故非急务，欲小出不敢，至于急务，欲自安不为，故帝者之欲善也如此！故传曰‘百姓不徒附’，诚以德先之也。今汉遭厄运，天下三分，雄哲之士思望之时也。陛下天姿至孝，丧逾三年，言及陨涕，虽曾闵不过也。敬贤任才，使之尽力，有逾成康。故国内和一，大小勠力，臣所不能陈。然臣不胜大愿，愿复广人所不能者。夫挽大重者，其用力苦不众，拔大艰者，其善术苦不广，且承事宗庙者，非徒求福佑，所以率民尊上也。至于四时之祀，或有不临，池苑之观，或有仍出，臣之愚滞，私不自安。夫忧责在身者，不暇尽乐，先帝之志，堂构未成，诚非尽乐之时。愿省减乐官、后宫所增造，但奉修先帝所施，下为子孙节俭之教。”徙为中散大夫，犹侍太子。</p>\n</blockquote>\n<p>  谯周因为谏阻刘禅喜游玩、增声乐，被贬官，可见绝对不是那种阿谀之人，为了刘禅统治也好，为了百姓也好，都是有实际行动的，所以这种人不可能是完全因为个人私利劝刘禅投降蜀国的。当然人做事都有目的，他是益州本地氏族，可能不希望在这里再有战争。</p>\n<p>  其实蜀国是否投降都决定于一个人身上，那就是刘禅，刘禅如果不投降，谁说什么都没用，所以蜀国投降了，不应该把责任推到其他人身上。中国人有个特点，那就是一把手掌握一切，你既然有了做一切决策的权力，那么做了决策后的所有不良后果就应该都由一把手来承担责任，这就是有多大的权力就有多大的责任。</p>\n<h2 id=\"引申\"><a href=\"#引申\" class=\"headerlink\" title=\"引申\"></a>引申</h2><p>  因为这个事情我又想起了秦桧夫妇一直背负着杀害岳飞的骂名，其实秦桧是替宋高宗背负了骂名啊，因为最终下命令杀岳飞的是皇帝，所以这个责任必须由皇帝来负责。中国古代因为要维护皇帝的名声，要维护皇帝的脸面经常把一些事情的责任推到什么贪官（严嵩）、妃子（妲己、杨贵妃）等等身上，其实目的就是一个，去掉皇帝的责任，推到下面的人身上，维护皇帝，其实这些事情最该负责的就是皇帝，没有其他任何第二责任人。</p>\n<p>  但是这些恶劣事情的发生是不可避免的，因为皇帝只是皇帝，是一个位置，皇帝不是圣人，他会有缺点，会有各种欲望。在他这个位置的人会有刻意的隐藏自己的这些爱好、欲望、弱点，但是总是会被抓住然后被利用（相互利用），最终出现各种恶果。</p>\n<p>  在这方面也有一些经典的对话记录，比如宇文泰与苏绰对答，用贪官、弃贪官、杀贪官，可谓对人性、对世态分析的极其透彻了。但是却不用在好的方面，只是为了满足自己的个人贪欲。</p>\n"},{"title":"安卓用户之痛","date":"2017-05-27T06:38:20.000Z","_content":"## 使用安卓的痛苦\n\n  安卓系统本身不是一个特别差的系统，但是因为种种原因，导致了在国内使用安卓系统是一件非常痛苦的事情。\n\n  记录下使用安卓系统的一些比较痛苦的事情。\n\n  A. Google Service，这个就不用说了，在国内应该还没有哪家手机是不阉割的，这也没办法因为被挡在墙外了，所以就有了两个障碍，第一个就是先安装上Google play service。第二个就是安装上了之后如何FQ的问题。\n\n  B. 各大APP厂商的轰炸是滥用权限。后台自启、关联唤醒、充电唤醒等等一系列恶行，让你的本来就不怎么样的手机/系统更加的脆弱不堪。\n","source":"_posts/安卓用户之痛.md","raw":"---\ntitle: 安卓用户之痛\ndate: 2017-05-27 14:38:20\ntags:\n---\n## 使用安卓的痛苦\n\n  安卓系统本身不是一个特别差的系统，但是因为种种原因，导致了在国内使用安卓系统是一件非常痛苦的事情。\n\n  记录下使用安卓系统的一些比较痛苦的事情。\n\n  A. Google Service，这个就不用说了，在国内应该还没有哪家手机是不阉割的，这也没办法因为被挡在墙外了，所以就有了两个障碍，第一个就是先安装上Google play service。第二个就是安装上了之后如何FQ的问题。\n\n  B. 各大APP厂商的轰炸是滥用权限。后台自启、关联唤醒、充电唤醒等等一系列恶行，让你的本来就不怎么样的手机/系统更加的脆弱不堪。\n","slug":"安卓用户之痛","published":1,"updated":"2017-06-01T03:28:57.364Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3q000ym4sm3qa5xemv","content":"<h2 id=\"使用安卓的痛苦\"><a href=\"#使用安卓的痛苦\" class=\"headerlink\" title=\"使用安卓的痛苦\"></a>使用安卓的痛苦</h2><p>  安卓系统本身不是一个特别差的系统，但是因为种种原因，导致了在国内使用安卓系统是一件非常痛苦的事情。</p>\n<p>  记录下使用安卓系统的一些比较痛苦的事情。</p>\n<p>  A. Google Service，这个就不用说了，在国内应该还没有哪家手机是不阉割的，这也没办法因为被挡在墙外了，所以就有了两个障碍，第一个就是先安装上Google play service。第二个就是安装上了之后如何FQ的问题。</p>\n<p>  B. 各大APP厂商的轰炸是滥用权限。后台自启、关联唤醒、充电唤醒等等一系列恶行，让你的本来就不怎么样的手机/系统更加的脆弱不堪。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用安卓的痛苦\"><a href=\"#使用安卓的痛苦\" class=\"headerlink\" title=\"使用安卓的痛苦\"></a>使用安卓的痛苦</h2><p>  安卓系统本身不是一个特别差的系统，但是因为种种原因，导致了在国内使用安卓系统是一件非常痛苦的事情。</p>\n<p>  记录下使用安卓系统的一些比较痛苦的事情。</p>\n<p>  A. Google Service，这个就不用说了，在国内应该还没有哪家手机是不阉割的，这也没办法因为被挡在墙外了，所以就有了两个障碍，第一个就是先安装上Google play service。第二个就是安装上了之后如何FQ的问题。</p>\n<p>  B. 各大APP厂商的轰炸是滥用权限。后台自启、关联唤醒、充电唤醒等等一系列恶行，让你的本来就不怎么样的手机/系统更加的脆弱不堪。</p>\n"},{"title":"cookie是如何工作的","date":"2017-04-21T01:50:45.000Z","_content":"\nCookie是现在主流网站实现单点登录、记录用户相关信息、网站广告投放的主要技术手段。\n\n  本文简要介绍下cookie的相关知识。\n\n###  Cookie是什么？\n简单说，cookie是浏览器维护的、保存在客户端中的纯文本字符串数据。\n\n### Cookie的使用\nCookie最初是被设计用来保存一些服务端希望客户端能保存、每次请求都能发给服务器进行验证的数据的。这也是cookie最大的使用场景。本文将主要介绍此功能。\n但是在很多开发场景中，cookie被滥用了，很多开发者对于一些本地的存储需求（并不一定要用于传输给服务端）的数据也用cookie来存储，这个是后来的localStorage的功能。\nCookie的限制：每个域名下的cookie大小基本都限制为4K，每个域名下的的cookie的数量最多为20，不同浏览器实现可能有细微差别。\n\n### Cookie是如何工作的\n\nCookie是浏览器请求服务器页面时有服务器返回的数据要求进行设定的。浏览器进行http请求时，会先检查本地是否有对应域名下的cookie，如果有，浏览器就会自动的将cookie发送到服务器，这些cookie数据对服务器都是有意义的，服务器对cookie进行解析用来进行用户身份认证等，服务器解析了cookie后可以根据cookie的信息处理数据，也可以要求浏览器更新cookie；对于没有cookie的情况，如果服务端有要求，就会在返回给客户端的响应头重添加”set-cookie”要求，浏览器就会进行相应的cookie设置。\n\n由于cookie是每次http请求都会发送给服务器的，这是一种带宽开销，所以尽量要在cookie中存储必须每次都要传输的数据，最好不要将使用次数少、意义不大的数据存在cookie中。\n\n其他一些常见场景:\n1） 自动登录功能\n部分开发者做记住密码、自动登录等功能时，就是将用户的用户名、密码加密后存储在cookie中，用户打开页面时向服务器发送数据进行用户验证。\n2） 广告投放\n很多广告商将用户浏览的商品等相关信息存储到cookie里，在用户进入某些与广告商有合作的网站时，读取cookie信息，投放比较精准的广告。\n因为广告投放的原因，很多用户禁止了浏览器的cookie功能。\n\n### Cookie设置与使用\n\n  Cookie的设置是有浏览器进行设置的，具体的设置也区分为由服务器请求浏览器设置与开发者在JavaScript中进行设置两种情况。\n#### 服务器用Set-Cookie设置cookie\n\n这是比较常见的方式，浏览器请求网站后，网站返回数据时要求浏览器设置cookie，具体的实现方式就是服务端在返回的response header中设置‘Set-Cookie’请求，设置相应的cookie，可以设置多个。\n\n具体代码示例（NodeJs）：\n![](/images/http-cookie/a.png)\n\n  打开浏览器进行请求发现，第一次请求，request headers没有cookie信息，response headers有set-cookie信息，如下图：\n\n![](/images/http-cookie/b.png)\n\n但是第二次请求时，浏览器就会自动发送此域名下的cookie给服务器，如图：\n\n![](/images/http-cookie/c.png)\n\n#### 客户端设置cookie\n\n客户端可以通过document.cookie来获取当前页面上的所有非httponly（下面解释）的cookie，并且可以由此设置cookie。\n\n![](/images/http-cookie/d.png)\n\n通过上图可以看出，document能获取出cookie，但是属性名为language的cookie由于是httponly的所以无法获取。\n用document.cookie=”xx=yy”的这种方法可以添加新的cookie。\n\n#### Cookie属性解析\n通过上面的图可以看出cookie有以下几个属性：name value domain path expires/max-age size http(only) secure samesite；\nA.  Name，cookie的名称\nB.  Value，cookie值\nC.  Domain，cookie所属的域名\nD.  Path，网页url中的上下文比如:/images/png等，path与domain一起决定cookie在什么请求中被发送到服务端。\nE.  Expires/max-age，cookie有效期:expires是http1.0协议使用的，值必须是GMT 格式的时间；max-age是http1.1协议开始使用的，有三种值，正数、0、负数，正数就是从cookie创建开始到结束的时间，单位是秒，0表示要删除掉这个cookie，负数就跟上图的session是一个意思，表示session会话内有效，session关闭后失效。\nF.  Http，表示cookie是由服务端设置的且只能由服务端修改，不可以由用户客户端修改，\nG.  Samesite，定义cookie如何进行跨域发送，可以有两个值：Strict，严格模式，表明这个 cookie 在任何情况下都不可能作为第三方 cookie；Lax，宽松模式，这种模式下，cookie在get请求时可以作为第三方cookie发送。\n\n","source":"_posts/cookie是如何工作的.md","raw":"---\ntitle: cookie是如何工作的\ndate: 2017-04-21 09:50:45\ntags:\n- cookie\n- http\n- 浏览器\n---\n\nCookie是现在主流网站实现单点登录、记录用户相关信息、网站广告投放的主要技术手段。\n\n  本文简要介绍下cookie的相关知识。\n\n###  Cookie是什么？\n简单说，cookie是浏览器维护的、保存在客户端中的纯文本字符串数据。\n\n### Cookie的使用\nCookie最初是被设计用来保存一些服务端希望客户端能保存、每次请求都能发给服务器进行验证的数据的。这也是cookie最大的使用场景。本文将主要介绍此功能。\n但是在很多开发场景中，cookie被滥用了，很多开发者对于一些本地的存储需求（并不一定要用于传输给服务端）的数据也用cookie来存储，这个是后来的localStorage的功能。\nCookie的限制：每个域名下的cookie大小基本都限制为4K，每个域名下的的cookie的数量最多为20，不同浏览器实现可能有细微差别。\n\n### Cookie是如何工作的\n\nCookie是浏览器请求服务器页面时有服务器返回的数据要求进行设定的。浏览器进行http请求时，会先检查本地是否有对应域名下的cookie，如果有，浏览器就会自动的将cookie发送到服务器，这些cookie数据对服务器都是有意义的，服务器对cookie进行解析用来进行用户身份认证等，服务器解析了cookie后可以根据cookie的信息处理数据，也可以要求浏览器更新cookie；对于没有cookie的情况，如果服务端有要求，就会在返回给客户端的响应头重添加”set-cookie”要求，浏览器就会进行相应的cookie设置。\n\n由于cookie是每次http请求都会发送给服务器的，这是一种带宽开销，所以尽量要在cookie中存储必须每次都要传输的数据，最好不要将使用次数少、意义不大的数据存在cookie中。\n\n其他一些常见场景:\n1） 自动登录功能\n部分开发者做记住密码、自动登录等功能时，就是将用户的用户名、密码加密后存储在cookie中，用户打开页面时向服务器发送数据进行用户验证。\n2） 广告投放\n很多广告商将用户浏览的商品等相关信息存储到cookie里，在用户进入某些与广告商有合作的网站时，读取cookie信息，投放比较精准的广告。\n因为广告投放的原因，很多用户禁止了浏览器的cookie功能。\n\n### Cookie设置与使用\n\n  Cookie的设置是有浏览器进行设置的，具体的设置也区分为由服务器请求浏览器设置与开发者在JavaScript中进行设置两种情况。\n#### 服务器用Set-Cookie设置cookie\n\n这是比较常见的方式，浏览器请求网站后，网站返回数据时要求浏览器设置cookie，具体的实现方式就是服务端在返回的response header中设置‘Set-Cookie’请求，设置相应的cookie，可以设置多个。\n\n具体代码示例（NodeJs）：\n![](/images/http-cookie/a.png)\n\n  打开浏览器进行请求发现，第一次请求，request headers没有cookie信息，response headers有set-cookie信息，如下图：\n\n![](/images/http-cookie/b.png)\n\n但是第二次请求时，浏览器就会自动发送此域名下的cookie给服务器，如图：\n\n![](/images/http-cookie/c.png)\n\n#### 客户端设置cookie\n\n客户端可以通过document.cookie来获取当前页面上的所有非httponly（下面解释）的cookie，并且可以由此设置cookie。\n\n![](/images/http-cookie/d.png)\n\n通过上图可以看出，document能获取出cookie，但是属性名为language的cookie由于是httponly的所以无法获取。\n用document.cookie=”xx=yy”的这种方法可以添加新的cookie。\n\n#### Cookie属性解析\n通过上面的图可以看出cookie有以下几个属性：name value domain path expires/max-age size http(only) secure samesite；\nA.  Name，cookie的名称\nB.  Value，cookie值\nC.  Domain，cookie所属的域名\nD.  Path，网页url中的上下文比如:/images/png等，path与domain一起决定cookie在什么请求中被发送到服务端。\nE.  Expires/max-age，cookie有效期:expires是http1.0协议使用的，值必须是GMT 格式的时间；max-age是http1.1协议开始使用的，有三种值，正数、0、负数，正数就是从cookie创建开始到结束的时间，单位是秒，0表示要删除掉这个cookie，负数就跟上图的session是一个意思，表示session会话内有效，session关闭后失效。\nF.  Http，表示cookie是由服务端设置的且只能由服务端修改，不可以由用户客户端修改，\nG.  Samesite，定义cookie如何进行跨域发送，可以有两个值：Strict，严格模式，表明这个 cookie 在任何情况下都不可能作为第三方 cookie；Lax，宽松模式，这种模式下，cookie在get请求时可以作为第三方cookie发送。\n\n","slug":"cookie是如何工作的","published":1,"updated":"2017-04-21T02:05:06.193Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3q0010m4smdmxwubg4","content":"<p>Cookie是现在主流网站实现单点登录、记录用户相关信息、网站广告投放的主要技术手段。</p>\n<p>  本文简要介绍下cookie的相关知识。</p>\n<h3 id=\"Cookie是什么？\"><a href=\"#Cookie是什么？\" class=\"headerlink\" title=\"Cookie是什么？\"></a>Cookie是什么？</h3><p>简单说，cookie是浏览器维护的、保存在客户端中的纯文本字符串数据。</p>\n<h3 id=\"Cookie的使用\"><a href=\"#Cookie的使用\" class=\"headerlink\" title=\"Cookie的使用\"></a>Cookie的使用</h3><p>Cookie最初是被设计用来保存一些服务端希望客户端能保存、每次请求都能发给服务器进行验证的数据的。这也是cookie最大的使用场景。本文将主要介绍此功能。<br>但是在很多开发场景中，cookie被滥用了，很多开发者对于一些本地的存储需求（并不一定要用于传输给服务端）的数据也用cookie来存储，这个是后来的localStorage的功能。<br>Cookie的限制：每个域名下的cookie大小基本都限制为4K，每个域名下的的cookie的数量最多为20，不同浏览器实现可能有细微差别。</p>\n<h3 id=\"Cookie是如何工作的\"><a href=\"#Cookie是如何工作的\" class=\"headerlink\" title=\"Cookie是如何工作的\"></a>Cookie是如何工作的</h3><p>Cookie是浏览器请求服务器页面时有服务器返回的数据要求进行设定的。浏览器进行http请求时，会先检查本地是否有对应域名下的cookie，如果有，浏览器就会自动的将cookie发送到服务器，这些cookie数据对服务器都是有意义的，服务器对cookie进行解析用来进行用户身份认证等，服务器解析了cookie后可以根据cookie的信息处理数据，也可以要求浏览器更新cookie；对于没有cookie的情况，如果服务端有要求，就会在返回给客户端的响应头重添加”set-cookie”要求，浏览器就会进行相应的cookie设置。</p>\n<p>由于cookie是每次http请求都会发送给服务器的，这是一种带宽开销，所以尽量要在cookie中存储必须每次都要传输的数据，最好不要将使用次数少、意义不大的数据存在cookie中。</p>\n<p>其他一些常见场景:<br>1） 自动登录功能<br>部分开发者做记住密码、自动登录等功能时，就是将用户的用户名、密码加密后存储在cookie中，用户打开页面时向服务器发送数据进行用户验证。<br>2） 广告投放<br>很多广告商将用户浏览的商品等相关信息存储到cookie里，在用户进入某些与广告商有合作的网站时，读取cookie信息，投放比较精准的广告。<br>因为广告投放的原因，很多用户禁止了浏览器的cookie功能。</p>\n<h3 id=\"Cookie设置与使用\"><a href=\"#Cookie设置与使用\" class=\"headerlink\" title=\"Cookie设置与使用\"></a>Cookie设置与使用</h3><p>  Cookie的设置是有浏览器进行设置的，具体的设置也区分为由服务器请求浏览器设置与开发者在JavaScript中进行设置两种情况。</p>\n<h4 id=\"服务器用Set-Cookie设置cookie\"><a href=\"#服务器用Set-Cookie设置cookie\" class=\"headerlink\" title=\"服务器用Set-Cookie设置cookie\"></a>服务器用Set-Cookie设置cookie</h4><p>这是比较常见的方式，浏览器请求网站后，网站返回数据时要求浏览器设置cookie，具体的实现方式就是服务端在返回的response header中设置‘Set-Cookie’请求，设置相应的cookie，可以设置多个。</p>\n<p>具体代码示例（NodeJs）：<br><img src=\"/images/http-cookie/a.png\" alt=\"\"></p>\n<p>  打开浏览器进行请求发现，第一次请求，request headers没有cookie信息，response headers有set-cookie信息，如下图：</p>\n<p><img src=\"/images/http-cookie/b.png\" alt=\"\"></p>\n<p>但是第二次请求时，浏览器就会自动发送此域名下的cookie给服务器，如图：</p>\n<p><img src=\"/images/http-cookie/c.png\" alt=\"\"></p>\n<h4 id=\"客户端设置cookie\"><a href=\"#客户端设置cookie\" class=\"headerlink\" title=\"客户端设置cookie\"></a>客户端设置cookie</h4><p>客户端可以通过document.cookie来获取当前页面上的所有非httponly（下面解释）的cookie，并且可以由此设置cookie。</p>\n<p><img src=\"/images/http-cookie/d.png\" alt=\"\"></p>\n<p>通过上图可以看出，document能获取出cookie，但是属性名为language的cookie由于是httponly的所以无法获取。<br>用document.cookie=”xx=yy”的这种方法可以添加新的cookie。</p>\n<h4 id=\"Cookie属性解析\"><a href=\"#Cookie属性解析\" class=\"headerlink\" title=\"Cookie属性解析\"></a>Cookie属性解析</h4><p>通过上面的图可以看出cookie有以下几个属性：name value domain path expires/max-age size http(only) secure samesite；<br>A.  Name，cookie的名称<br>B.  Value，cookie值<br>C.  Domain，cookie所属的域名<br>D.  Path，网页url中的上下文比如:/images/png等，path与domain一起决定cookie在什么请求中被发送到服务端。<br>E.  Expires/max-age，cookie有效期:expires是http1.0协议使用的，值必须是GMT 格式的时间；max-age是http1.1协议开始使用的，有三种值，正数、0、负数，正数就是从cookie创建开始到结束的时间，单位是秒，0表示要删除掉这个cookie，负数就跟上图的session是一个意思，表示session会话内有效，session关闭后失效。<br>F.  Http，表示cookie是由服务端设置的且只能由服务端修改，不可以由用户客户端修改，<br>G.  Samesite，定义cookie如何进行跨域发送，可以有两个值：Strict，严格模式，表明这个 cookie 在任何情况下都不可能作为第三方 cookie；Lax，宽松模式，这种模式下，cookie在get请求时可以作为第三方cookie发送。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Cookie是现在主流网站实现单点登录、记录用户相关信息、网站广告投放的主要技术手段。</p>\n<p>  本文简要介绍下cookie的相关知识。</p>\n<h3 id=\"Cookie是什么？\"><a href=\"#Cookie是什么？\" class=\"headerlink\" title=\"Cookie是什么？\"></a>Cookie是什么？</h3><p>简单说，cookie是浏览器维护的、保存在客户端中的纯文本字符串数据。</p>\n<h3 id=\"Cookie的使用\"><a href=\"#Cookie的使用\" class=\"headerlink\" title=\"Cookie的使用\"></a>Cookie的使用</h3><p>Cookie最初是被设计用来保存一些服务端希望客户端能保存、每次请求都能发给服务器进行验证的数据的。这也是cookie最大的使用场景。本文将主要介绍此功能。<br>但是在很多开发场景中，cookie被滥用了，很多开发者对于一些本地的存储需求（并不一定要用于传输给服务端）的数据也用cookie来存储，这个是后来的localStorage的功能。<br>Cookie的限制：每个域名下的cookie大小基本都限制为4K，每个域名下的的cookie的数量最多为20，不同浏览器实现可能有细微差别。</p>\n<h3 id=\"Cookie是如何工作的\"><a href=\"#Cookie是如何工作的\" class=\"headerlink\" title=\"Cookie是如何工作的\"></a>Cookie是如何工作的</h3><p>Cookie是浏览器请求服务器页面时有服务器返回的数据要求进行设定的。浏览器进行http请求时，会先检查本地是否有对应域名下的cookie，如果有，浏览器就会自动的将cookie发送到服务器，这些cookie数据对服务器都是有意义的，服务器对cookie进行解析用来进行用户身份认证等，服务器解析了cookie后可以根据cookie的信息处理数据，也可以要求浏览器更新cookie；对于没有cookie的情况，如果服务端有要求，就会在返回给客户端的响应头重添加”set-cookie”要求，浏览器就会进行相应的cookie设置。</p>\n<p>由于cookie是每次http请求都会发送给服务器的，这是一种带宽开销，所以尽量要在cookie中存储必须每次都要传输的数据，最好不要将使用次数少、意义不大的数据存在cookie中。</p>\n<p>其他一些常见场景:<br>1） 自动登录功能<br>部分开发者做记住密码、自动登录等功能时，就是将用户的用户名、密码加密后存储在cookie中，用户打开页面时向服务器发送数据进行用户验证。<br>2） 广告投放<br>很多广告商将用户浏览的商品等相关信息存储到cookie里，在用户进入某些与广告商有合作的网站时，读取cookie信息，投放比较精准的广告。<br>因为广告投放的原因，很多用户禁止了浏览器的cookie功能。</p>\n<h3 id=\"Cookie设置与使用\"><a href=\"#Cookie设置与使用\" class=\"headerlink\" title=\"Cookie设置与使用\"></a>Cookie设置与使用</h3><p>  Cookie的设置是有浏览器进行设置的，具体的设置也区分为由服务器请求浏览器设置与开发者在JavaScript中进行设置两种情况。</p>\n<h4 id=\"服务器用Set-Cookie设置cookie\"><a href=\"#服务器用Set-Cookie设置cookie\" class=\"headerlink\" title=\"服务器用Set-Cookie设置cookie\"></a>服务器用Set-Cookie设置cookie</h4><p>这是比较常见的方式，浏览器请求网站后，网站返回数据时要求浏览器设置cookie，具体的实现方式就是服务端在返回的response header中设置‘Set-Cookie’请求，设置相应的cookie，可以设置多个。</p>\n<p>具体代码示例（NodeJs）：<br><img src=\"/images/http-cookie/a.png\" alt=\"\"></p>\n<p>  打开浏览器进行请求发现，第一次请求，request headers没有cookie信息，response headers有set-cookie信息，如下图：</p>\n<p><img src=\"/images/http-cookie/b.png\" alt=\"\"></p>\n<p>但是第二次请求时，浏览器就会自动发送此域名下的cookie给服务器，如图：</p>\n<p><img src=\"/images/http-cookie/c.png\" alt=\"\"></p>\n<h4 id=\"客户端设置cookie\"><a href=\"#客户端设置cookie\" class=\"headerlink\" title=\"客户端设置cookie\"></a>客户端设置cookie</h4><p>客户端可以通过document.cookie来获取当前页面上的所有非httponly（下面解释）的cookie，并且可以由此设置cookie。</p>\n<p><img src=\"/images/http-cookie/d.png\" alt=\"\"></p>\n<p>通过上图可以看出，document能获取出cookie，但是属性名为language的cookie由于是httponly的所以无法获取。<br>用document.cookie=”xx=yy”的这种方法可以添加新的cookie。</p>\n<h4 id=\"Cookie属性解析\"><a href=\"#Cookie属性解析\" class=\"headerlink\" title=\"Cookie属性解析\"></a>Cookie属性解析</h4><p>通过上面的图可以看出cookie有以下几个属性：name value domain path expires/max-age size http(only) secure samesite；<br>A.  Name，cookie的名称<br>B.  Value，cookie值<br>C.  Domain，cookie所属的域名<br>D.  Path，网页url中的上下文比如:/images/png等，path与domain一起决定cookie在什么请求中被发送到服务端。<br>E.  Expires/max-age，cookie有效期:expires是http1.0协议使用的，值必须是GMT 格式的时间；max-age是http1.1协议开始使用的，有三种值，正数、0、负数，正数就是从cookie创建开始到结束的时间，单位是秒，0表示要删除掉这个cookie，负数就跟上图的session是一个意思，表示session会话内有效，session关闭后失效。<br>F.  Http，表示cookie是由服务端设置的且只能由服务端修改，不可以由用户客户端修改，<br>G.  Samesite，定义cookie如何进行跨域发送，可以有两个值：Strict，严格模式，表明这个 cookie 在任何情况下都不可能作为第三方 cookie；Lax，宽松模式，这种模式下，cookie在get请求时可以作为第三方cookie发送。</p>\n"},{"title":"我的RSS订阅源","date":"2018-07-06T08:21:20.000Z","_content":"## 开篇唠叨\n\n  好久不写博客了，一个是人自己的惰性，另一个确实也可写的东西比较少，坚持下来真的是很不容易啊。\n\n  之前写过一篇“关于订阅内容的反思”，记录了自己关于订阅源的管理的想法，现在想记录下自己的订阅源，以后有更新有删除都在这里进行记录，其实这篇文章相比之前那篇文章的订阅源已经发生过变化了。\n\n## 应该订阅什么样的RSS源\n\n  个人认为订阅源应分为两种：一种是有价值的订阅源，能让自己从中有比较好的收获；另一种不一定能让你有多大的收获，但是是你感兴趣的东西（感兴趣的不一定是有价值的）。\n\n## 具体的订阅源\n\n### 新闻媒体类\n\n  - 纽约时报中文网\n  - 金融时报中文网\n  - 虎嗅网\n\n  这个是我目前订阅的三个主要的新闻媒体网站，因为我几乎不看新闻客户端，自己感兴趣的内容会去专门的论坛或者门户网站对应的板块进行信息获取，主要的新闻媒体信息获取就来源于以上几个网站（剩下的就是twitter了）。\n\n### 软件/工具信息分享类\n\n  - 免费资源网络社群（台湾站长制作）\n  - 反斗软件\n  - 大眼旭仔\n  - 异次元世界\n  - 电脑玩物（台湾站长制作）\n  - 小众软件\n\n### 生活历史类\n\n  - 凤凰号-我们爱历史（凤凰网板块）\n  - 中国特色。NET（个人网站）\n  - 时拾史事\n  - 历史·时事·军事地图（新浪个人博客）\n\n### IT编程开发类\n\n  - 张鑫旭博客\n  - 酷壳\n  - w3cplus博客（应该也是个人站）\n  - infoQ HTML5板块\n  - jerryQu博客\n  - 月光博客\n\n### 其他不知如何分类的\n\n  - 唐巧博客\n  - 奔跑的奶酪\n  - 魏武挥扯氮集\n  - 编程随想\n  - Mactalk\n  - V2ex部分模块\n\n以上就是目前订阅的RSS源，在整理期间发现有些已经好久不更新也不看的源，这种源已经没有存在的必要，直接删除。\n","source":"_posts/我的RSS订阅源.md","raw":"---\ntitle: 我的RSS订阅源\ndate: 2018-07-06 16:21:20\ntags:\n---\n## 开篇唠叨\n\n  好久不写博客了，一个是人自己的惰性，另一个确实也可写的东西比较少，坚持下来真的是很不容易啊。\n\n  之前写过一篇“关于订阅内容的反思”，记录了自己关于订阅源的管理的想法，现在想记录下自己的订阅源，以后有更新有删除都在这里进行记录，其实这篇文章相比之前那篇文章的订阅源已经发生过变化了。\n\n## 应该订阅什么样的RSS源\n\n  个人认为订阅源应分为两种：一种是有价值的订阅源，能让自己从中有比较好的收获；另一种不一定能让你有多大的收获，但是是你感兴趣的东西（感兴趣的不一定是有价值的）。\n\n## 具体的订阅源\n\n### 新闻媒体类\n\n  - 纽约时报中文网\n  - 金融时报中文网\n  - 虎嗅网\n\n  这个是我目前订阅的三个主要的新闻媒体网站，因为我几乎不看新闻客户端，自己感兴趣的内容会去专门的论坛或者门户网站对应的板块进行信息获取，主要的新闻媒体信息获取就来源于以上几个网站（剩下的就是twitter了）。\n\n### 软件/工具信息分享类\n\n  - 免费资源网络社群（台湾站长制作）\n  - 反斗软件\n  - 大眼旭仔\n  - 异次元世界\n  - 电脑玩物（台湾站长制作）\n  - 小众软件\n\n### 生活历史类\n\n  - 凤凰号-我们爱历史（凤凰网板块）\n  - 中国特色。NET（个人网站）\n  - 时拾史事\n  - 历史·时事·军事地图（新浪个人博客）\n\n### IT编程开发类\n\n  - 张鑫旭博客\n  - 酷壳\n  - w3cplus博客（应该也是个人站）\n  - infoQ HTML5板块\n  - jerryQu博客\n  - 月光博客\n\n### 其他不知如何分类的\n\n  - 唐巧博客\n  - 奔跑的奶酪\n  - 魏武挥扯氮集\n  - 编程随想\n  - Mactalk\n  - V2ex部分模块\n\n以上就是目前订阅的RSS源，在整理期间发现有些已经好久不更新也不看的源，这种源已经没有存在的必要，直接删除。\n","slug":"我的RSS订阅源","published":1,"updated":"2018-07-06T08:54:44.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3q0012m4smn3nmhk14","content":"<h2 id=\"开篇唠叨\"><a href=\"#开篇唠叨\" class=\"headerlink\" title=\"开篇唠叨\"></a>开篇唠叨</h2><p>  好久不写博客了，一个是人自己的惰性，另一个确实也可写的东西比较少，坚持下来真的是很不容易啊。</p>\n<p>  之前写过一篇“关于订阅内容的反思”，记录了自己关于订阅源的管理的想法，现在想记录下自己的订阅源，以后有更新有删除都在这里进行记录，其实这篇文章相比之前那篇文章的订阅源已经发生过变化了。</p>\n<h2 id=\"应该订阅什么样的RSS源\"><a href=\"#应该订阅什么样的RSS源\" class=\"headerlink\" title=\"应该订阅什么样的RSS源\"></a>应该订阅什么样的RSS源</h2><p>  个人认为订阅源应分为两种：一种是有价值的订阅源，能让自己从中有比较好的收获；另一种不一定能让你有多大的收获，但是是你感兴趣的东西（感兴趣的不一定是有价值的）。</p>\n<h2 id=\"具体的订阅源\"><a href=\"#具体的订阅源\" class=\"headerlink\" title=\"具体的订阅源\"></a>具体的订阅源</h2><h3 id=\"新闻媒体类\"><a href=\"#新闻媒体类\" class=\"headerlink\" title=\"新闻媒体类\"></a>新闻媒体类</h3><ul>\n<li>纽约时报中文网</li>\n<li>金融时报中文网</li>\n<li><p>虎嗅网</p>\n<p>这个是我目前订阅的三个主要的新闻媒体网站，因为我几乎不看新闻客户端，自己感兴趣的内容会去专门的论坛或者门户网站对应的板块进行信息获取，主要的新闻媒体信息获取就来源于以上几个网站（剩下的就是twitter了）。</p>\n</li>\n</ul>\n<h3 id=\"软件-工具信息分享类\"><a href=\"#软件-工具信息分享类\" class=\"headerlink\" title=\"软件/工具信息分享类\"></a>软件/工具信息分享类</h3><ul>\n<li>免费资源网络社群（台湾站长制作）</li>\n<li>反斗软件</li>\n<li>大眼旭仔</li>\n<li>异次元世界</li>\n<li>电脑玩物（台湾站长制作）</li>\n<li>小众软件</li>\n</ul>\n<h3 id=\"生活历史类\"><a href=\"#生活历史类\" class=\"headerlink\" title=\"生活历史类\"></a>生活历史类</h3><ul>\n<li>凤凰号-我们爱历史（凤凰网板块）</li>\n<li>中国特色。NET（个人网站）</li>\n<li>时拾史事</li>\n<li>历史·时事·军事地图（新浪个人博客）</li>\n</ul>\n<h3 id=\"IT编程开发类\"><a href=\"#IT编程开发类\" class=\"headerlink\" title=\"IT编程开发类\"></a>IT编程开发类</h3><ul>\n<li>张鑫旭博客</li>\n<li>酷壳</li>\n<li>w3cplus博客（应该也是个人站）</li>\n<li>infoQ HTML5板块</li>\n<li>jerryQu博客</li>\n<li>月光博客</li>\n</ul>\n<h3 id=\"其他不知如何分类的\"><a href=\"#其他不知如何分类的\" class=\"headerlink\" title=\"其他不知如何分类的\"></a>其他不知如何分类的</h3><ul>\n<li>唐巧博客</li>\n<li>奔跑的奶酪</li>\n<li>魏武挥扯氮集</li>\n<li>编程随想</li>\n<li>Mactalk</li>\n<li>V2ex部分模块</li>\n</ul>\n<p>以上就是目前订阅的RSS源，在整理期间发现有些已经好久不更新也不看的源，这种源已经没有存在的必要，直接删除。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"开篇唠叨\"><a href=\"#开篇唠叨\" class=\"headerlink\" title=\"开篇唠叨\"></a>开篇唠叨</h2><p>  好久不写博客了，一个是人自己的惰性，另一个确实也可写的东西比较少，坚持下来真的是很不容易啊。</p>\n<p>  之前写过一篇“关于订阅内容的反思”，记录了自己关于订阅源的管理的想法，现在想记录下自己的订阅源，以后有更新有删除都在这里进行记录，其实这篇文章相比之前那篇文章的订阅源已经发生过变化了。</p>\n<h2 id=\"应该订阅什么样的RSS源\"><a href=\"#应该订阅什么样的RSS源\" class=\"headerlink\" title=\"应该订阅什么样的RSS源\"></a>应该订阅什么样的RSS源</h2><p>  个人认为订阅源应分为两种：一种是有价值的订阅源，能让自己从中有比较好的收获；另一种不一定能让你有多大的收获，但是是你感兴趣的东西（感兴趣的不一定是有价值的）。</p>\n<h2 id=\"具体的订阅源\"><a href=\"#具体的订阅源\" class=\"headerlink\" title=\"具体的订阅源\"></a>具体的订阅源</h2><h3 id=\"新闻媒体类\"><a href=\"#新闻媒体类\" class=\"headerlink\" title=\"新闻媒体类\"></a>新闻媒体类</h3><ul>\n<li>纽约时报中文网</li>\n<li>金融时报中文网</li>\n<li><p>虎嗅网</p>\n<p>这个是我目前订阅的三个主要的新闻媒体网站，因为我几乎不看新闻客户端，自己感兴趣的内容会去专门的论坛或者门户网站对应的板块进行信息获取，主要的新闻媒体信息获取就来源于以上几个网站（剩下的就是twitter了）。</p>\n</li>\n</ul>\n<h3 id=\"软件-工具信息分享类\"><a href=\"#软件-工具信息分享类\" class=\"headerlink\" title=\"软件/工具信息分享类\"></a>软件/工具信息分享类</h3><ul>\n<li>免费资源网络社群（台湾站长制作）</li>\n<li>反斗软件</li>\n<li>大眼旭仔</li>\n<li>异次元世界</li>\n<li>电脑玩物（台湾站长制作）</li>\n<li>小众软件</li>\n</ul>\n<h3 id=\"生活历史类\"><a href=\"#生活历史类\" class=\"headerlink\" title=\"生活历史类\"></a>生活历史类</h3><ul>\n<li>凤凰号-我们爱历史（凤凰网板块）</li>\n<li>中国特色。NET（个人网站）</li>\n<li>时拾史事</li>\n<li>历史·时事·军事地图（新浪个人博客）</li>\n</ul>\n<h3 id=\"IT编程开发类\"><a href=\"#IT编程开发类\" class=\"headerlink\" title=\"IT编程开发类\"></a>IT编程开发类</h3><ul>\n<li>张鑫旭博客</li>\n<li>酷壳</li>\n<li>w3cplus博客（应该也是个人站）</li>\n<li>infoQ HTML5板块</li>\n<li>jerryQu博客</li>\n<li>月光博客</li>\n</ul>\n<h3 id=\"其他不知如何分类的\"><a href=\"#其他不知如何分类的\" class=\"headerlink\" title=\"其他不知如何分类的\"></a>其他不知如何分类的</h3><ul>\n<li>唐巧博客</li>\n<li>奔跑的奶酪</li>\n<li>魏武挥扯氮集</li>\n<li>编程随想</li>\n<li>Mactalk</li>\n<li>V2ex部分模块</li>\n</ul>\n<p>以上就是目前订阅的RSS源，在整理期间发现有些已经好久不更新也不看的源，这种源已经没有存在的必要，直接删除。</p>\n"},{"title":"生活中要掌握好的度","date":"2018-09-06T02:04:41.000Z","_content":"\n## 生活、工作人生的方方面面都要有一个度\n\n  度这个字开起来很简单，但是多数人真的很难处理好，做人、做事都要有一个度，做的不够达不到要求；做的过度也不好，可能反而有反效果。掌握好度真的是一个很难的事情，需要一个人有极其强大的自制力、控制力。\n\n## 自制自律\n\n  有些人天生(后天培养)有强大的自制力，这种人能够很好的控制自己的生活、工作、休闲、娱乐等，有的人则做不到，总是做的过少或者过多，我就是后面这一种，感觉好多事情都做不好，真的是自制力奇差。\n\n## 如何解决？\n\n  不知道","source":"_posts/生活中要掌握好的度.md","raw":"---\ntitle: 生活中要掌握好的度\ndate: 2018-09-06 10:04:41\ntags:\n- 度\n- 自律\n- 生活\n---\n\n## 生活、工作人生的方方面面都要有一个度\n\n  度这个字开起来很简单，但是多数人真的很难处理好，做人、做事都要有一个度，做的不够达不到要求；做的过度也不好，可能反而有反效果。掌握好度真的是一个很难的事情，需要一个人有极其强大的自制力、控制力。\n\n## 自制自律\n\n  有些人天生(后天培养)有强大的自制力，这种人能够很好的控制自己的生活、工作、休闲、娱乐等，有的人则做不到，总是做的过少或者过多，我就是后面这一种，感觉好多事情都做不好，真的是自制力奇差。\n\n## 如何解决？\n\n  不知道","slug":"生活中要掌握好的度","published":1,"updated":"2018-09-06T03:01:36.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3q0015m4sms4dxo5mq","content":"<h2 id=\"生活、工作人生的方方面面都要有一个度\"><a href=\"#生活、工作人生的方方面面都要有一个度\" class=\"headerlink\" title=\"生活、工作人生的方方面面都要有一个度\"></a>生活、工作人生的方方面面都要有一个度</h2><p>  度这个字开起来很简单，但是多数人真的很难处理好，做人、做事都要有一个度，做的不够达不到要求；做的过度也不好，可能反而有反效果。掌握好度真的是一个很难的事情，需要一个人有极其强大的自制力、控制力。</p>\n<h2 id=\"自制自律\"><a href=\"#自制自律\" class=\"headerlink\" title=\"自制自律\"></a>自制自律</h2><p>  有些人天生(后天培养)有强大的自制力，这种人能够很好的控制自己的生活、工作、休闲、娱乐等，有的人则做不到，总是做的过少或者过多，我就是后面这一种，感觉好多事情都做不好，真的是自制力奇差。</p>\n<h2 id=\"如何解决？\"><a href=\"#如何解决？\" class=\"headerlink\" title=\"如何解决？\"></a>如何解决？</h2><p>  不知道</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"生活、工作人生的方方面面都要有一个度\"><a href=\"#生活、工作人生的方方面面都要有一个度\" class=\"headerlink\" title=\"生活、工作人生的方方面面都要有一个度\"></a>生活、工作人生的方方面面都要有一个度</h2><p>  度这个字开起来很简单，但是多数人真的很难处理好，做人、做事都要有一个度，做的不够达不到要求；做的过度也不好，可能反而有反效果。掌握好度真的是一个很难的事情，需要一个人有极其强大的自制力、控制力。</p>\n<h2 id=\"自制自律\"><a href=\"#自制自律\" class=\"headerlink\" title=\"自制自律\"></a>自制自律</h2><p>  有些人天生(后天培养)有强大的自制力，这种人能够很好的控制自己的生活、工作、休闲、娱乐等，有的人则做不到，总是做的过少或者过多，我就是后面这一种，感觉好多事情都做不好，真的是自制力奇差。</p>\n<h2 id=\"如何解决？\"><a href=\"#如何解决？\" class=\"headerlink\" title=\"如何解决？\"></a>如何解决？</h2><p>  不知道</p>\n"},{"title":"豆瓣电子书下载扩展","date":"2017-04-25T09:11:12.000Z","_content":"\n一个可以下载豆瓣电子书的chrome插件（这样做是不是不太好啊？？）。\n\n只支持下载豆瓣阅读中的“电子图书”，不支持其他模式（比如连载、译文等）的文章下载。\n\n有些书籍在豆瓣读书上（购买）的，其他平台没有，但是不想在豆瓣上阅读时候，用这个chrome扩展可以把书籍下载下来，推到其他阅读器/平台进行阅读。\n\n建议不要传播付费图书，后果自负。\n\n下载方式：启用了扩展之后，打开/刷新豆瓣电子书阅读页面时会进行图书下载，生成txt文件。\n\nchrome商店地址:[豆瓣电子书下载](https://chrome.google.com/webstore/detail/%E8%B1%86%E7%93%A3%E7%94%B5%E5%AD%90%E4%B9%A6%E4%B8%8B%E8%BD%BD/afcmnhbbjlmoogombbekhcijpblilcco)\n\n安装后可以用[三国演义](https://read.douban.com/reader/ebook/7828900/)测试。","source":"_posts/豆瓣电子书下载扩展.md","raw":"---\ntitle: 豆瓣电子书下载扩展\ndate: 2017-04-25 17:11:12\ntags:\n- 豆瓣\n- 电子书\n- 下载\n- chrome\n- 扩展\n---\n\n一个可以下载豆瓣电子书的chrome插件（这样做是不是不太好啊？？）。\n\n只支持下载豆瓣阅读中的“电子图书”，不支持其他模式（比如连载、译文等）的文章下载。\n\n有些书籍在豆瓣读书上（购买）的，其他平台没有，但是不想在豆瓣上阅读时候，用这个chrome扩展可以把书籍下载下来，推到其他阅读器/平台进行阅读。\n\n建议不要传播付费图书，后果自负。\n\n下载方式：启用了扩展之后，打开/刷新豆瓣电子书阅读页面时会进行图书下载，生成txt文件。\n\nchrome商店地址:[豆瓣电子书下载](https://chrome.google.com/webstore/detail/%E8%B1%86%E7%93%A3%E7%94%B5%E5%AD%90%E4%B9%A6%E4%B8%8B%E8%BD%BD/afcmnhbbjlmoogombbekhcijpblilcco)\n\n安装后可以用[三国演义](https://read.douban.com/reader/ebook/7828900/)测试。","slug":"豆瓣电子书下载扩展","published":1,"updated":"2017-04-25T09:13:14.131Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3q0017m4smyprhm8td","content":"<p>一个可以下载豆瓣电子书的chrome插件（这样做是不是不太好啊？？）。</p>\n<p>只支持下载豆瓣阅读中的“电子图书”，不支持其他模式（比如连载、译文等）的文章下载。</p>\n<p>有些书籍在豆瓣读书上（购买）的，其他平台没有，但是不想在豆瓣上阅读时候，用这个chrome扩展可以把书籍下载下来，推到其他阅读器/平台进行阅读。</p>\n<p>建议不要传播付费图书，后果自负。</p>\n<p>下载方式：启用了扩展之后，打开/刷新豆瓣电子书阅读页面时会进行图书下载，生成txt文件。</p>\n<p>chrome商店地址:<a href=\"https://chrome.google.com/webstore/detail/%E8%B1%86%E7%93%A3%E7%94%B5%E5%AD%90%E4%B9%A6%E4%B8%8B%E8%BD%BD/afcmnhbbjlmoogombbekhcijpblilcco\" target=\"_blank\" rel=\"noopener\">豆瓣电子书下载</a></p>\n<p>安装后可以用<a href=\"https://read.douban.com/reader/ebook/7828900/\" target=\"_blank\" rel=\"noopener\">三国演义</a>测试。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一个可以下载豆瓣电子书的chrome插件（这样做是不是不太好啊？？）。</p>\n<p>只支持下载豆瓣阅读中的“电子图书”，不支持其他模式（比如连载、译文等）的文章下载。</p>\n<p>有些书籍在豆瓣读书上（购买）的，其他平台没有，但是不想在豆瓣上阅读时候，用这个chrome扩展可以把书籍下载下来，推到其他阅读器/平台进行阅读。</p>\n<p>建议不要传播付费图书，后果自负。</p>\n<p>下载方式：启用了扩展之后，打开/刷新豆瓣电子书阅读页面时会进行图书下载，生成txt文件。</p>\n<p>chrome商店地址:<a href=\"https://chrome.google.com/webstore/detail/%E8%B1%86%E7%93%A3%E7%94%B5%E5%AD%90%E4%B9%A6%E4%B8%8B%E8%BD%BD/afcmnhbbjlmoogombbekhcijpblilcco\" target=\"_blank\" rel=\"noopener\">豆瓣电子书下载</a></p>\n<p>安装后可以用<a href=\"https://read.douban.com/reader/ebook/7828900/\" target=\"_blank\" rel=\"noopener\">三国演义</a>测试。</p>\n"},{"title":"离线下载工具offcloud介绍","date":"2017-11-15T06:11:55.000Z","_content":"\n  ### 引子——离线下载大文件\n\n  之前用的BT离线下载工具seedr因为空间的限制导致无法下载大文件，所以需要新工具，用百度网盘离线竟然无法成功，不知道是技术原因还是版权原因还是钱的原因，总之是不好使了（2017-11-20更新发现，百度网盘应该只是对已经存在它的服务器上的文件可以秒传，不支持真正的离线下载，是个伪离线。。。）。然后用迅雷下载，发现迅雷的问题真的是很严重，下载效率非常差，无奈，只能继续寻找第三方的服务。\n\n  关于上面提到的seedr工具的介绍再这里：[国外离线下载网站seedr](https://wuzhizhe.github.io/2017/05/25/%E5%9B%BD%E5%A4%96%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99seedr/)\n\n  经过查找找到了几项，最终用了offcloud。我目前是免费账户，下了一个70多G的种子，从结果看离线能力很好，但是从它的服务器上取回本机的时候速度一般。\n\n  ### offcloud介绍\n\n  #### 功能\n\n  [offcloud](https://offcloud.com/)可以下载多数常用的协议文件：HTTP FTP MAGNET TORRENT等，但是不支持ed2k。\n\n  除了有下载功能外，offcloud还附赠了一些很有用的功能\n  \n  A.可以将HTML与PDF进行转换，方便用户已自己喜欢的方式阅读。\n  \n  B.可以将离线的文件上传到你的FTP空间、WebDAV、Google Drive、Dropbox、OneDrive等，这个真的是一个很好的功能，有两个用处，第一，如果个人要存储文件，不用自己先下载在上传；第二，国内的用户可以先将文件传到one drive这种不被墙的服务再往回取，亲测会快扽多。\n\n  #### offcloud线路\n\n  offcloud有几个路线，分别是法国（主路线）、加拿大、德国、荷兰、新加坡、芝加哥，我离线文件是用的是主线路，但取回文件时用的是加拿大线路，从它的服务器取回来的时候速度不是很稳定——我是中国电信的网络，现在不清楚是电信限制了还是offcloud做的限制，但是下载是无法跑满速的，不如seedr的免费路线。\n\n  #### 免费账户\n\n  offcloud的免费账户有如下限制：\n  1、每个月只能离线三次，超了就只能下个月了。\n  2、免费账户有流量限制，10G，**这个是指离线到offcloud服务器的流量，从offcloud取回本机是没有流量限制的。再就是如果你的一个文件的流量超过了10G，offcloud不会因为超过10G就中断下载，会下载完成，所以免费用户也可以下载一次大文件，但是因为流量用完了就不能再继续下载了，即使次数没有超。**\n\n  免费账户以及其他常见问题：\n\n  ![002](/images/offcloud/offcloud2.png)\n\n  #### 收费规则以及功能\n\n  offcloud有两种收费模式，一种是月付：9.99美元一个月，第二种是年付：59.99美元一年，折合5美元一个月，比月付是半价。\n\n  见下图：\n\n  ![001](/images/offcloud/offcloud1.png)\n\n","source":"_posts/离线下载工具offcloud介绍.md","raw":"---\ntitle: 离线下载工具offcloud介绍\ndate: 2017-11-15 14:11:55\ntags:\n- 离线下载\n- cloud\n---\n\n  ### 引子——离线下载大文件\n\n  之前用的BT离线下载工具seedr因为空间的限制导致无法下载大文件，所以需要新工具，用百度网盘离线竟然无法成功，不知道是技术原因还是版权原因还是钱的原因，总之是不好使了（2017-11-20更新发现，百度网盘应该只是对已经存在它的服务器上的文件可以秒传，不支持真正的离线下载，是个伪离线。。。）。然后用迅雷下载，发现迅雷的问题真的是很严重，下载效率非常差，无奈，只能继续寻找第三方的服务。\n\n  关于上面提到的seedr工具的介绍再这里：[国外离线下载网站seedr](https://wuzhizhe.github.io/2017/05/25/%E5%9B%BD%E5%A4%96%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99seedr/)\n\n  经过查找找到了几项，最终用了offcloud。我目前是免费账户，下了一个70多G的种子，从结果看离线能力很好，但是从它的服务器上取回本机的时候速度一般。\n\n  ### offcloud介绍\n\n  #### 功能\n\n  [offcloud](https://offcloud.com/)可以下载多数常用的协议文件：HTTP FTP MAGNET TORRENT等，但是不支持ed2k。\n\n  除了有下载功能外，offcloud还附赠了一些很有用的功能\n  \n  A.可以将HTML与PDF进行转换，方便用户已自己喜欢的方式阅读。\n  \n  B.可以将离线的文件上传到你的FTP空间、WebDAV、Google Drive、Dropbox、OneDrive等，这个真的是一个很好的功能，有两个用处，第一，如果个人要存储文件，不用自己先下载在上传；第二，国内的用户可以先将文件传到one drive这种不被墙的服务再往回取，亲测会快扽多。\n\n  #### offcloud线路\n\n  offcloud有几个路线，分别是法国（主路线）、加拿大、德国、荷兰、新加坡、芝加哥，我离线文件是用的是主线路，但取回文件时用的是加拿大线路，从它的服务器取回来的时候速度不是很稳定——我是中国电信的网络，现在不清楚是电信限制了还是offcloud做的限制，但是下载是无法跑满速的，不如seedr的免费路线。\n\n  #### 免费账户\n\n  offcloud的免费账户有如下限制：\n  1、每个月只能离线三次，超了就只能下个月了。\n  2、免费账户有流量限制，10G，**这个是指离线到offcloud服务器的流量，从offcloud取回本机是没有流量限制的。再就是如果你的一个文件的流量超过了10G，offcloud不会因为超过10G就中断下载，会下载完成，所以免费用户也可以下载一次大文件，但是因为流量用完了就不能再继续下载了，即使次数没有超。**\n\n  免费账户以及其他常见问题：\n\n  ![002](/images/offcloud/offcloud2.png)\n\n  #### 收费规则以及功能\n\n  offcloud有两种收费模式，一种是月付：9.99美元一个月，第二种是年付：59.99美元一年，折合5美元一个月，比月付是半价。\n\n  见下图：\n\n  ![001](/images/offcloud/offcloud1.png)\n\n","slug":"离线下载工具offcloud介绍","published":1,"updated":"2017-11-20T06:31:47.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3q001am4smzqodn38s","content":"<h3 id=\"引子——离线下载大文件\"><a href=\"#引子——离线下载大文件\" class=\"headerlink\" title=\"引子——离线下载大文件\"></a>引子——离线下载大文件</h3><p>  之前用的BT离线下载工具seedr因为空间的限制导致无法下载大文件，所以需要新工具，用百度网盘离线竟然无法成功，不知道是技术原因还是版权原因还是钱的原因，总之是不好使了（2017-11-20更新发现，百度网盘应该只是对已经存在它的服务器上的文件可以秒传，不支持真正的离线下载，是个伪离线。。。）。然后用迅雷下载，发现迅雷的问题真的是很严重，下载效率非常差，无奈，只能继续寻找第三方的服务。</p>\n<p>  关于上面提到的seedr工具的介绍再这里：<a href=\"https://wuzhizhe.github.io/2017/05/25/%E5%9B%BD%E5%A4%96%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99seedr/\" target=\"_blank\" rel=\"noopener\">国外离线下载网站seedr</a></p>\n<p>  经过查找找到了几项，最终用了offcloud。我目前是免费账户，下了一个70多G的种子，从结果看离线能力很好，但是从它的服务器上取回本机的时候速度一般。</p>\n<h3 id=\"offcloud介绍\"><a href=\"#offcloud介绍\" class=\"headerlink\" title=\"offcloud介绍\"></a>offcloud介绍</h3><h4 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h4><p>  <a href=\"https://offcloud.com/\" target=\"_blank\" rel=\"noopener\">offcloud</a>可以下载多数常用的协议文件：HTTP FTP MAGNET TORRENT等，但是不支持ed2k。</p>\n<p>  除了有下载功能外，offcloud还附赠了一些很有用的功能</p>\n<p>  A.可以将HTML与PDF进行转换，方便用户已自己喜欢的方式阅读。</p>\n<p>  B.可以将离线的文件上传到你的FTP空间、WebDAV、Google Drive、Dropbox、OneDrive等，这个真的是一个很好的功能，有两个用处，第一，如果个人要存储文件，不用自己先下载在上传；第二，国内的用户可以先将文件传到one drive这种不被墙的服务再往回取，亲测会快扽多。</p>\n<h4 id=\"offcloud线路\"><a href=\"#offcloud线路\" class=\"headerlink\" title=\"offcloud线路\"></a>offcloud线路</h4><p>  offcloud有几个路线，分别是法国（主路线）、加拿大、德国、荷兰、新加坡、芝加哥，我离线文件是用的是主线路，但取回文件时用的是加拿大线路，从它的服务器取回来的时候速度不是很稳定——我是中国电信的网络，现在不清楚是电信限制了还是offcloud做的限制，但是下载是无法跑满速的，不如seedr的免费路线。</p>\n<h4 id=\"免费账户\"><a href=\"#免费账户\" class=\"headerlink\" title=\"免费账户\"></a>免费账户</h4><p>  offcloud的免费账户有如下限制：<br>  1、每个月只能离线三次，超了就只能下个月了。<br>  2、免费账户有流量限制，10G，<strong>这个是指离线到offcloud服务器的流量，从offcloud取回本机是没有流量限制的。再就是如果你的一个文件的流量超过了10G，offcloud不会因为超过10G就中断下载，会下载完成，所以免费用户也可以下载一次大文件，但是因为流量用完了就不能再继续下载了，即使次数没有超。</strong></p>\n<p>  免费账户以及其他常见问题：</p>\n<p>  <img src=\"/images/offcloud/offcloud2.png\" alt=\"002\"></p>\n<h4 id=\"收费规则以及功能\"><a href=\"#收费规则以及功能\" class=\"headerlink\" title=\"收费规则以及功能\"></a>收费规则以及功能</h4><p>  offcloud有两种收费模式，一种是月付：9.99美元一个月，第二种是年付：59.99美元一年，折合5美元一个月，比月付是半价。</p>\n<p>  见下图：</p>\n<p>  <img src=\"/images/offcloud/offcloud1.png\" alt=\"001\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"引子——离线下载大文件\"><a href=\"#引子——离线下载大文件\" class=\"headerlink\" title=\"引子——离线下载大文件\"></a>引子——离线下载大文件</h3><p>  之前用的BT离线下载工具seedr因为空间的限制导致无法下载大文件，所以需要新工具，用百度网盘离线竟然无法成功，不知道是技术原因还是版权原因还是钱的原因，总之是不好使了（2017-11-20更新发现，百度网盘应该只是对已经存在它的服务器上的文件可以秒传，不支持真正的离线下载，是个伪离线。。。）。然后用迅雷下载，发现迅雷的问题真的是很严重，下载效率非常差，无奈，只能继续寻找第三方的服务。</p>\n<p>  关于上面提到的seedr工具的介绍再这里：<a href=\"https://wuzhizhe.github.io/2017/05/25/%E5%9B%BD%E5%A4%96%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99seedr/\" target=\"_blank\" rel=\"noopener\">国外离线下载网站seedr</a></p>\n<p>  经过查找找到了几项，最终用了offcloud。我目前是免费账户，下了一个70多G的种子，从结果看离线能力很好，但是从它的服务器上取回本机的时候速度一般。</p>\n<h3 id=\"offcloud介绍\"><a href=\"#offcloud介绍\" class=\"headerlink\" title=\"offcloud介绍\"></a>offcloud介绍</h3><h4 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h4><p>  <a href=\"https://offcloud.com/\" target=\"_blank\" rel=\"noopener\">offcloud</a>可以下载多数常用的协议文件：HTTP FTP MAGNET TORRENT等，但是不支持ed2k。</p>\n<p>  除了有下载功能外，offcloud还附赠了一些很有用的功能</p>\n<p>  A.可以将HTML与PDF进行转换，方便用户已自己喜欢的方式阅读。</p>\n<p>  B.可以将离线的文件上传到你的FTP空间、WebDAV、Google Drive、Dropbox、OneDrive等，这个真的是一个很好的功能，有两个用处，第一，如果个人要存储文件，不用自己先下载在上传；第二，国内的用户可以先将文件传到one drive这种不被墙的服务再往回取，亲测会快扽多。</p>\n<h4 id=\"offcloud线路\"><a href=\"#offcloud线路\" class=\"headerlink\" title=\"offcloud线路\"></a>offcloud线路</h4><p>  offcloud有几个路线，分别是法国（主路线）、加拿大、德国、荷兰、新加坡、芝加哥，我离线文件是用的是主线路，但取回文件时用的是加拿大线路，从它的服务器取回来的时候速度不是很稳定——我是中国电信的网络，现在不清楚是电信限制了还是offcloud做的限制，但是下载是无法跑满速的，不如seedr的免费路线。</p>\n<h4 id=\"免费账户\"><a href=\"#免费账户\" class=\"headerlink\" title=\"免费账户\"></a>免费账户</h4><p>  offcloud的免费账户有如下限制：<br>  1、每个月只能离线三次，超了就只能下个月了。<br>  2、免费账户有流量限制，10G，<strong>这个是指离线到offcloud服务器的流量，从offcloud取回本机是没有流量限制的。再就是如果你的一个文件的流量超过了10G，offcloud不会因为超过10G就中断下载，会下载完成，所以免费用户也可以下载一次大文件，但是因为流量用完了就不能再继续下载了，即使次数没有超。</strong></p>\n<p>  免费账户以及其他常见问题：</p>\n<p>  <img src=\"/images/offcloud/offcloud2.png\" alt=\"002\"></p>\n<h4 id=\"收费规则以及功能\"><a href=\"#收费规则以及功能\" class=\"headerlink\" title=\"收费规则以及功能\"></a>收费规则以及功能</h4><p>  offcloud有两种收费模式，一种是月付：9.99美元一个月，第二种是年付：59.99美元一年，折合5美元一个月，比月付是半价。</p>\n<p>  见下图：</p>\n<p>  <img src=\"/images/offcloud/offcloud1.png\" alt=\"001\"></p>\n"},{"title":"旋风要倒下了，怀念下以前的下载生活","date":"2017-08-04T07:54:16.000Z","_content":"\n  看到了QQ旋风要于2017-09-06停止运营，也就是说距离现在也就剩了一个月的时间了，想想当年为了旋风疯狂刷分的时候，有一种恍如隔世的感觉。这么多年过来，很多当年用的很好的软件，都一个个的慢慢离开了。\n\n  网际快车倒下了，迅雷半死不活，现在终于到了旋风了，下载工具在中国始终还是没有找到一条可行的生存之道。\n\n  08年左右刚开始用旋风，那个时候的旋风还是一个小红色的图标，下载工具也都差不多，但是后来发现迅雷、快车确实比旋风好用，就慢慢不用旋风，再后来BT兴起，彻底遗忘了旋风。\n\n  BT的滋润也没有持续多长时间，BT被封锁（在学校）了，真的是很痛苦。有了离线下载，但是迅雷是收费的，要会员费，穷学生，没钱也不愿意为了迅雷掏钱，所以就到处查找可以离线下载的工具，那个时候旋风有了积分制度，积分过了多少可以拥有离线下载空间，如获至宝，那种喜悦程度现在可能已经记不清楚了，立刻开始了疯狂的刷分生活。\n\n  真是怀念那个时候的岁月啊。。。\n\n  现在也已经基本回归了离线/直接加下载工具（IDM之类的）的方式，可用的离线服务很多，有不收费的也有收费的，国内的例如百度网盘，国外的简直太多了。\n\n  现在想想，好的东西因为不能变现或者自己作死而死去的真的是很多，一直以来腾讯其实还是有很多不错的产品的，比如QQ邮箱，QQ影音，这两个工具也真的是腾讯少有的好产品，QQ邮箱应该不太用担心，QQ影音就不好说了，命运不知如何，之前好不容易更新一次，不知道还能撑多久。还有迅雷的极速版确实也是好东西，但是盈利艰难，所以被砍了，好的东西（但无法盈利）在慢慢死去，不好的东西（但盆满钵满）活的滋润无比，社会很现实，情怀要有，但生存更重要。\n\n  以此文埋葬下过去那段疯狂下载的青春岁月。\n\n\n  2017-08-04 16:16","source":"_posts/旋风要倒下了，怀念下以前的下载生活.md","raw":"---\ntitle: 旋风要倒下了，怀念下以前的下载生活\ndate: 2017-08-04 15:54:16\ntags:\n- 下载\n- QQ旋风\n---\n\n  看到了QQ旋风要于2017-09-06停止运营，也就是说距离现在也就剩了一个月的时间了，想想当年为了旋风疯狂刷分的时候，有一种恍如隔世的感觉。这么多年过来，很多当年用的很好的软件，都一个个的慢慢离开了。\n\n  网际快车倒下了，迅雷半死不活，现在终于到了旋风了，下载工具在中国始终还是没有找到一条可行的生存之道。\n\n  08年左右刚开始用旋风，那个时候的旋风还是一个小红色的图标，下载工具也都差不多，但是后来发现迅雷、快车确实比旋风好用，就慢慢不用旋风，再后来BT兴起，彻底遗忘了旋风。\n\n  BT的滋润也没有持续多长时间，BT被封锁（在学校）了，真的是很痛苦。有了离线下载，但是迅雷是收费的，要会员费，穷学生，没钱也不愿意为了迅雷掏钱，所以就到处查找可以离线下载的工具，那个时候旋风有了积分制度，积分过了多少可以拥有离线下载空间，如获至宝，那种喜悦程度现在可能已经记不清楚了，立刻开始了疯狂的刷分生活。\n\n  真是怀念那个时候的岁月啊。。。\n\n  现在也已经基本回归了离线/直接加下载工具（IDM之类的）的方式，可用的离线服务很多，有不收费的也有收费的，国内的例如百度网盘，国外的简直太多了。\n\n  现在想想，好的东西因为不能变现或者自己作死而死去的真的是很多，一直以来腾讯其实还是有很多不错的产品的，比如QQ邮箱，QQ影音，这两个工具也真的是腾讯少有的好产品，QQ邮箱应该不太用担心，QQ影音就不好说了，命运不知如何，之前好不容易更新一次，不知道还能撑多久。还有迅雷的极速版确实也是好东西，但是盈利艰难，所以被砍了，好的东西（但无法盈利）在慢慢死去，不好的东西（但盆满钵满）活的滋润无比，社会很现实，情怀要有，但生存更重要。\n\n  以此文埋葬下过去那段疯狂下载的青春岁月。\n\n\n  2017-08-04 16:16","slug":"旋风要倒下了，怀念下以前的下载生活","published":1,"updated":"2017-08-04T08:22:37.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq24dl3q001bm4smz5i6yldo","content":"<p>  看到了QQ旋风要于2017-09-06停止运营，也就是说距离现在也就剩了一个月的时间了，想想当年为了旋风疯狂刷分的时候，有一种恍如隔世的感觉。这么多年过来，很多当年用的很好的软件，都一个个的慢慢离开了。</p>\n<p>  网际快车倒下了，迅雷半死不活，现在终于到了旋风了，下载工具在中国始终还是没有找到一条可行的生存之道。</p>\n<p>  08年左右刚开始用旋风，那个时候的旋风还是一个小红色的图标，下载工具也都差不多，但是后来发现迅雷、快车确实比旋风好用，就慢慢不用旋风，再后来BT兴起，彻底遗忘了旋风。</p>\n<p>  BT的滋润也没有持续多长时间，BT被封锁（在学校）了，真的是很痛苦。有了离线下载，但是迅雷是收费的，要会员费，穷学生，没钱也不愿意为了迅雷掏钱，所以就到处查找可以离线下载的工具，那个时候旋风有了积分制度，积分过了多少可以拥有离线下载空间，如获至宝，那种喜悦程度现在可能已经记不清楚了，立刻开始了疯狂的刷分生活。</p>\n<p>  真是怀念那个时候的岁月啊。。。</p>\n<p>  现在也已经基本回归了离线/直接加下载工具（IDM之类的）的方式，可用的离线服务很多，有不收费的也有收费的，国内的例如百度网盘，国外的简直太多了。</p>\n<p>  现在想想，好的东西因为不能变现或者自己作死而死去的真的是很多，一直以来腾讯其实还是有很多不错的产品的，比如QQ邮箱，QQ影音，这两个工具也真的是腾讯少有的好产品，QQ邮箱应该不太用担心，QQ影音就不好说了，命运不知如何，之前好不容易更新一次，不知道还能撑多久。还有迅雷的极速版确实也是好东西，但是盈利艰难，所以被砍了，好的东西（但无法盈利）在慢慢死去，不好的东西（但盆满钵满）活的滋润无比，社会很现实，情怀要有，但生存更重要。</p>\n<p>  以此文埋葬下过去那段疯狂下载的青春岁月。</p>\n<p>  2017-08-04 16:16</p>\n","site":{"data":{}},"excerpt":"","more":"<p>  看到了QQ旋风要于2017-09-06停止运营，也就是说距离现在也就剩了一个月的时间了，想想当年为了旋风疯狂刷分的时候，有一种恍如隔世的感觉。这么多年过来，很多当年用的很好的软件，都一个个的慢慢离开了。</p>\n<p>  网际快车倒下了，迅雷半死不活，现在终于到了旋风了，下载工具在中国始终还是没有找到一条可行的生存之道。</p>\n<p>  08年左右刚开始用旋风，那个时候的旋风还是一个小红色的图标，下载工具也都差不多，但是后来发现迅雷、快车确实比旋风好用，就慢慢不用旋风，再后来BT兴起，彻底遗忘了旋风。</p>\n<p>  BT的滋润也没有持续多长时间，BT被封锁（在学校）了，真的是很痛苦。有了离线下载，但是迅雷是收费的，要会员费，穷学生，没钱也不愿意为了迅雷掏钱，所以就到处查找可以离线下载的工具，那个时候旋风有了积分制度，积分过了多少可以拥有离线下载空间，如获至宝，那种喜悦程度现在可能已经记不清楚了，立刻开始了疯狂的刷分生活。</p>\n<p>  真是怀念那个时候的岁月啊。。。</p>\n<p>  现在也已经基本回归了离线/直接加下载工具（IDM之类的）的方式，可用的离线服务很多，有不收费的也有收费的，国内的例如百度网盘，国外的简直太多了。</p>\n<p>  现在想想，好的东西因为不能变现或者自己作死而死去的真的是很多，一直以来腾讯其实还是有很多不错的产品的，比如QQ邮箱，QQ影音，这两个工具也真的是腾讯少有的好产品，QQ邮箱应该不太用担心，QQ影音就不好说了，命运不知如何，之前好不容易更新一次，不知道还能撑多久。还有迅雷的极速版确实也是好东西，但是盈利艰难，所以被砍了，好的东西（但无法盈利）在慢慢死去，不好的东西（但盆满钵满）活的滋润无比，社会很现实，情怀要有，但生存更重要。</p>\n<p>  以此文埋葬下过去那段疯狂下载的青春岁月。</p>\n<p>  2017-08-04 16:16</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjq24dl2f0000m4smi3xf27ml","tag_id":"cjq24dl2f0003m4smy9cwk1ue","_id":"cjq24dl3a000pm4sm2pmtdyvf"},{"post_id":"cjq24dl2f0000m4smi3xf27ml","tag_id":"cjq24dl2v0007m4sm0x3lirpo","_id":"cjq24dl3a000rm4smzem9w871"},{"post_id":"cjq24dl2f0000m4smi3xf27ml","tag_id":"cjq24dl2v000am4smaj24nbr8","_id":"cjq24dl3a000um4smll0cmu7c"},{"post_id":"cjq24dl2f0000m4smi3xf27ml","tag_id":"cjq24dl2v000dm4sms25bsqrk","_id":"cjq24dl3q000wm4smnzivz03g"},{"post_id":"cjq24dl2f0000m4smi3xf27ml","tag_id":"cjq24dl3a000gm4smlnw9cqfq","_id":"cjq24dl3q000zm4sm7xt599hy"},{"post_id":"cjq24dl2f0000m4smi3xf27ml","tag_id":"cjq24dl3a000km4sm7fnox76k","_id":"cjq24dl3q0011m4smmae0qrn8"},{"post_id":"cjq24dl2f0002m4smsdhb5ji5","tag_id":"cjq24dl3a000nm4smm6hy5hmt","_id":"cjq24dl3q0014m4sm0eyehypk"},{"post_id":"cjq24dl2f0002m4smsdhb5ji5","tag_id":"cjq24dl3a000sm4smwdw7w41n","_id":"cjq24dl3q0016m4sm8hqn6lso"},{"post_id":"cjq24dl2f0002m4smsdhb5ji5","tag_id":"cjq24dl3q000xm4smrgqk5l98","_id":"cjq24dl3q0019m4smzzlpd5l5"},{"post_id":"cjq24dl2f0004m4smolitgi70","tag_id":"cjq24dl3q0013m4smwxxcebmc","_id":"cjq24dl46001em4sm0ynbyjya"},{"post_id":"cjq24dl2f0004m4smolitgi70","tag_id":"cjq24dl3q0018m4sms8okrtav","_id":"cjq24dl46001fm4smf64rk0oz"},{"post_id":"cjq24dl2f0004m4smolitgi70","tag_id":"cjq24dl3q001cm4smayf76p6d","_id":"cjq24dl46001hm4smaawp16uq"},{"post_id":"cjq24dl2v0005m4smg1vr43yy","tag_id":"cjq24dl46001dm4sm71mouh2b","_id":"cjq24dl46001jm4smz8bvdlcf"},{"post_id":"cjq24dl2v0005m4smg1vr43yy","tag_id":"cjq24dl46001gm4sm3nus0vdh","_id":"cjq24dl46001km4smyzgdky2x"},{"post_id":"cjq24dl2v0009m4sma0zevym2","tag_id":"cjq24dl46001im4sm3m7hhggb","_id":"cjq24dl46001om4smbmcx114k"},{"post_id":"cjq24dl2v0009m4sma0zevym2","tag_id":"cjq24dl46001lm4smbhfkfhjn","_id":"cjq24dl46001pm4smetv66t8v"},{"post_id":"cjq24dl2v0009m4sma0zevym2","tag_id":"cjq24dl46001mm4smdrciji7k","_id":"cjq24dl46001rm4smcwiqr29h"},{"post_id":"cjq24dl2v000cm4sm64a4gv42","tag_id":"cjq24dl46001nm4sms0o6cv7r","_id":"cjq24dl46001um4sml5tkzpqd"},{"post_id":"cjq24dl2v000cm4sm64a4gv42","tag_id":"cjq24dl46001qm4sm82in3wo1","_id":"cjq24dl46001vm4smribzcnhm"},{"post_id":"cjq24dl2v000cm4sm64a4gv42","tag_id":"cjq24dl46001sm4smstzqqory","_id":"cjq24dl46001xm4smfo3xm5r4"},{"post_id":"cjq24dl2v000em4smilkoej6e","tag_id":"cjq24dl46001tm4smd1uh1bzt","_id":"cjq24dl460020m4smg3nklgzw"},{"post_id":"cjq24dl2v000em4smilkoej6e","tag_id":"cjq24dl46001wm4sm5aiswsuo","_id":"cjq24dl460021m4sm8haef308"},{"post_id":"cjq24dl2v000em4smilkoej6e","tag_id":"cjq24dl46001ym4smfrxh6vrx","_id":"cjq24dl460023m4sms354qri3"},{"post_id":"cjq24dl3a000fm4smnuqseadb","tag_id":"cjq24dl46001nm4sms0o6cv7r","_id":"cjq24dl460025m4smr9a1f2bw"},{"post_id":"cjq24dl3a000fm4smnuqseadb","tag_id":"cjq24dl460022m4smq3tsnr41","_id":"cjq24dl460026m4smlp01wkni"},{"post_id":"cjq24dl3a000hm4smo2lhojlv","tag_id":"cjq24dl460024m4smn4i07jez","_id":"cjq24dl46002am4sm4q8oks3v"},{"post_id":"cjq24dl3a000hm4smo2lhojlv","tag_id":"cjq24dl460027m4smtggh9hv6","_id":"cjq24dl46002bm4sm5cmdwos3"},{"post_id":"cjq24dl3a000hm4smo2lhojlv","tag_id":"cjq24dl460028m4sm3hgunqdw","_id":"cjq24dl46002dm4sm9j4vz69b"},{"post_id":"cjq24dl3a000im4smsz4dp8y6","tag_id":"cjq24dl460029m4sm0f4875ec","_id":"cjq24dl4l002gm4smis8ne0hg"},{"post_id":"cjq24dl3a000im4smsz4dp8y6","tag_id":"cjq24dl46002cm4smiqmk6rmk","_id":"cjq24dl4l002hm4smhlblqhqo"},{"post_id":"cjq24dl3a000im4smsz4dp8y6","tag_id":"cjq24dl46002em4sm8k3dn4mg","_id":"cjq24dl4l002jm4smn5i3w1fo"},{"post_id":"cjq24dl3a000jm4smdsjp7ki7","tag_id":"cjq24dl46002fm4sm6eokzn6z","_id":"cjq24dl4l002nm4smd4bnhxxx"},{"post_id":"cjq24dl3a000jm4smdsjp7ki7","tag_id":"cjq24dl4l002im4smhq0f01pt","_id":"cjq24dl4l002om4smg0fxf9kt"},{"post_id":"cjq24dl3a000jm4smdsjp7ki7","tag_id":"cjq24dl4l002km4smwcbsvui6","_id":"cjq24dl4l002qm4smibed8ugx"},{"post_id":"cjq24dl3a000jm4smdsjp7ki7","tag_id":"cjq24dl4l002lm4sma5ii16c0","_id":"cjq24dl4l002rm4smr1gqh1er"},{"post_id":"cjq24dl3a000mm4smhq40a99z","tag_id":"cjq24dl4l002mm4sm9nc6vrdb","_id":"cjq24dl4l002um4smf9w1a92e"},{"post_id":"cjq24dl3a000mm4smhq40a99z","tag_id":"cjq24dl4l002pm4smcy72v7jc","_id":"cjq24dl4l002vm4sm82rt4mo4"},{"post_id":"cjq24dl3a000mm4smhq40a99z","tag_id":"cjq24dl4l002sm4smt0owkz9s","_id":"cjq24dl4l002xm4sm47lck4jh"},{"post_id":"cjq24dl3a000om4smnz4mkn55","tag_id":"cjq24dl2f0003m4smy9cwk1ue","_id":"cjq24dl4l0030m4smnyro1pza"},{"post_id":"cjq24dl3a000om4smnz4mkn55","tag_id":"cjq24dl4l002tm4sm47wg56cy","_id":"cjq24dl4l0031m4smhof2pbwa"},{"post_id":"cjq24dl3a000om4smnz4mkn55","tag_id":"cjq24dl4l002wm4smeq85ihox","_id":"cjq24dl4l0033m4smc687ovq4"},{"post_id":"cjq24dl3a000om4smnz4mkn55","tag_id":"cjq24dl4l002ym4smqxvznk6k","_id":"cjq24dl4l0034m4sm5rpq3tzh"},{"post_id":"cjq24dl3a000qm4smyg11wuyg","tag_id":"cjq24dl4l002zm4smtazm1zbj","_id":"cjq24dl4l0036m4smbx933wez"},{"post_id":"cjq24dl3a000qm4smyg11wuyg","tag_id":"cjq24dl4l0032m4smeqf7i70e","_id":"cjq24dl4l0037m4smxd6d2s7s"},{"post_id":"cjq24dl3a000vm4smet8y43s7","tag_id":"cjq24dl4l0035m4smbh8poti4","_id":"cjq24dl4l0039m4smohwrylbh"},{"post_id":"cjq24dl3q0010m4smdmxwubg4","tag_id":"cjq24dl4l0038m4smrzimuk7y","_id":"cjq24dl4l003dm4smq9l7sq5t"},{"post_id":"cjq24dl3q0010m4smdmxwubg4","tag_id":"cjq24dl4l003am4sm6h3h36cc","_id":"cjq24dl4l003em4smcvlw21gz"},{"post_id":"cjq24dl3q0010m4smdmxwubg4","tag_id":"cjq24dl4l003bm4smxd6wchec","_id":"cjq24dl4l003gm4sm5w4wmrxg"},{"post_id":"cjq24dl3q0015m4sms4dxo5mq","tag_id":"cjq24dl4l003cm4smkbyimukv","_id":"cjq24dl4l003jm4smqm72wwfj"},{"post_id":"cjq24dl3q0015m4sms4dxo5mq","tag_id":"cjq24dl4l003fm4smz4bwn8jt","_id":"cjq24dl4l003km4smkzx6j2m8"},{"post_id":"cjq24dl3q0015m4sms4dxo5mq","tag_id":"cjq24dl4l003hm4sm91m8rgs7","_id":"cjq24dl4l003mm4smlfq5m7cn"},{"post_id":"cjq24dl3q0017m4smyprhm8td","tag_id":"cjq24dl4l003im4smfmk883tm","_id":"cjq24dl51003rm4smmcsg8xcc"},{"post_id":"cjq24dl3q0017m4smyprhm8td","tag_id":"cjq24dl4l003lm4smnd9d95fv","_id":"cjq24dl51003sm4smnpacl16q"},{"post_id":"cjq24dl3q0017m4smyprhm8td","tag_id":"cjq24dl4l003nm4smk9p0pk0z","_id":"cjq24dl51003um4smkp3mmaxp"},{"post_id":"cjq24dl3q0017m4smyprhm8td","tag_id":"cjq24dl46001nm4sms0o6cv7r","_id":"cjq24dl51003vm4smt12xu5nq"},{"post_id":"cjq24dl3q0017m4smyprhm8td","tag_id":"cjq24dl4l003pm4smg6asrxty","_id":"cjq24dl51003xm4smaojb2sna"},{"post_id":"cjq24dl3q001am4smzqodn38s","tag_id":"cjq24dl4l002pm4smcy72v7jc","_id":"cjq24dl51003ym4smqgx3omlx"},{"post_id":"cjq24dl3q001am4smzqodn38s","tag_id":"cjq24dl51003tm4smr0gdfuup","_id":"cjq24dl510040m4smslbyp54y"},{"post_id":"cjq24dl3q001bm4smz5i6yldo","tag_id":"cjq24dl4l003nm4smk9p0pk0z","_id":"cjq24dl510041m4smtu2k15gx"},{"post_id":"cjq24dl3q001bm4smz5i6yldo","tag_id":"cjq24dl51003zm4smurxgm2qk","_id":"cjq24dl510042m4smtbslegde"}],"Tag":[{"name":"css","_id":"cjq24dl2f0003m4smy9cwk1ue"},{"name":"writing-mode","_id":"cjq24dl2v0007m4sm0x3lirpo"},{"name":"flex","_id":"cjq24dl2v000am4smaj24nbr8"},{"name":"vertical","_id":"cjq24dl2v000dm4sms25bsqrk"},{"name":"垂直布局","_id":"cjq24dl3a000gm4smlnw9cqfq"},{"name":"纵向换行","_id":"cjq24dl3a000km4sm7fnox76k"},{"name":"cache-control","_id":"cjq24dl3a000nm4smm6hy5hmt"},{"name":"nginx","_id":"cjq24dl3a000sm4smwdw7w41n"},{"name":"proxy_cache","_id":"cjq24dl3q000xm4smrgqk5l98"},{"name":"Android","_id":"cjq24dl3q0013m4smwxxcebmc"},{"name":"短信拦截","_id":"cjq24dl3q0018m4sms8okrtav"},{"name":"sms blocker","_id":"cjq24dl3q001cm4smayf76p6d"},{"name":"HTTP安全","_id":"cjq24dl46001dm4sm71mouh2b"},{"name":"响应首部","_id":"cjq24dl46001gm4sm3nus0vdh"},{"name":"HTTP首部","_id":"cjq24dl46001im4sm3m7hhggb"},{"name":"盗链","_id":"cjq24dl46001lm4smbhfkfhjn"},{"name":"X-Frame-Options","_id":"cjq24dl46001mm4smdrciji7k"},{"name":"chrome","_id":"cjq24dl46001nm4sms0o6cv7r"},{"name":"chrome extension","_id":"cjq24dl46001qm4sm82in3wo1"},{"name":"github","_id":"cjq24dl46001sm4smstzqqory"},{"name":"css3","_id":"cjq24dl46001tm4smd1uh1bzt"},{"name":"box-sizing","_id":"cjq24dl46001wm4sm5aiswsuo"},{"name":"盒子模型","_id":"cjq24dl46001ym4smfrxh6vrx"},{"name":"theme","_id":"cjq24dl460022m4smq3tsnr41"},{"name":"linux","_id":"cjq24dl460024m4smn4i07jez"},{"name":"环境变量","_id":"cjq24dl460027m4smtggh9hv6"},{"name":"crobtab","_id":"cjq24dl460028m4sm3hgunqdw"},{"name":"windows","_id":"cjq24dl460029m4sm0f4875ec"},{"name":"卸载","_id":"cjq24dl46002cm4smiqmk6rmk"},{"name":"强制","_id":"cjq24dl46002em4sm8k3dn4mg"},{"name":"phantom","_id":"cjq24dl46002fm4sm6eokzn6z"},{"name":"爬虫","_id":"cjq24dl4l002im4smhq0f01pt"},{"name":"nodejs","_id":"cjq24dl4l002km4smwcbsvui6"},{"name":"superagent","_id":"cjq24dl4l002lm4sma5ii16c0"},{"name":"offline download","_id":"cjq24dl4l002mm4sm9nc6vrdb"},{"name":"离线下载","_id":"cjq24dl4l002pm4smcy72v7jc"},{"name":"seedr","_id":"cjq24dl4l002sm4smt0owkz9s"},{"name":"overflow","_id":"cjq24dl4l002tm4sm47wg56cy"},{"name":"float","_id":"cjq24dl4l002wm4smeq85ihox"},{"name":"height","_id":"cjq24dl4l002ym4smqxvznk6k"},{"name":"https","_id":"cjq24dl4l002zm4smtazm1zbj"},{"name":"encrypt","_id":"cjq24dl4l0032m4smeqf7i70e"},{"name":"历史","_id":"cjq24dl4l0035m4smbh8poti4"},{"name":"cookie","_id":"cjq24dl4l0038m4smrzimuk7y"},{"name":"http","_id":"cjq24dl4l003am4sm6h3h36cc"},{"name":"浏览器","_id":"cjq24dl4l003bm4smxd6wchec"},{"name":"度","_id":"cjq24dl4l003cm4smkbyimukv"},{"name":"自律","_id":"cjq24dl4l003fm4smz4bwn8jt"},{"name":"生活","_id":"cjq24dl4l003hm4sm91m8rgs7"},{"name":"豆瓣","_id":"cjq24dl4l003im4smfmk883tm"},{"name":"电子书","_id":"cjq24dl4l003lm4smnd9d95fv"},{"name":"下载","_id":"cjq24dl4l003nm4smk9p0pk0z"},{"name":"扩展","_id":"cjq24dl4l003pm4smg6asrxty"},{"name":"cloud","_id":"cjq24dl51003tm4smr0gdfuup"},{"name":"QQ旋风","_id":"cjq24dl51003zm4smurxgm2qk"}]}}